{"ast":null,"code":"import api from \"@/services/api\";\nimport { mapState } from \"vuex\";\nexport default {\n  computed: {\n    ...mapState([\"user\", \"isAuthenticated\"])\n  },\n  data() {\n    return {\n      editedUser: {},\n      isEditing: false,\n      favoriteRecipes: [],\n      userRecipes: []\n    };\n  },\n  created() {\n    if (!this.user) {\n      this.fetchUserData();\n    } else {\n      this.editedUser = {\n        ...this.user\n      };\n    }\n  },\n  methods: {\n    async fetchUserData() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await api.get(\"/auth/korisnici\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.$store.commit(\"setUser\", response.data);\n        this.editedUser = {\n          ...response.data\n        };\n      } catch (error) {\n        console.error(\"Greška pri dohvaćanju korisnika:\", error);\n      }\n    },\n    enableEditing() {\n      this.isEditing = true;\n    },\n    disableEditing() {\n      this.isEditing = false;\n    },\n    async updateUserData() {\n      try {\n        const updatedData = {\n          name: this.editedUser.name,\n          email: this.editedUser.email\n        };\n        if (this.editedUser.password && this.editedUser.password.trim() !== \"\") {\n          updatedData.password = this.editedUser.password;\n        }\n        const response = await api.put(`/auth/korisnici/${this.user.id}`, updatedData, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n\n        // Ažuriraj Vuex stanje\n        this.$store.commit(\"setUser\", response.data);\n\n        // Ponovno dohvaćanje korisničkih podataka\n        await this.fetchUserData();\n        this.isEditing = false;\n        this.editedUser.password = \"\"; // Resetiraj polje za lozinku\n      } catch (error) {\n        console.error(\"Greška pri ažuriranju korisnika:\", error.response?.data || error.message);\n        alert(\"Došlo je do greške prilikom spremanja podataka. Provjerite unos.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","mapState","computed","data","editedUser","isEditing","favoriteRecipes","userRecipes","created","user","fetchUserData","methods","token","localStorage","getItem","response","get","headers","Authorization","$store","commit","error","console","enableEditing","disableEditing","updateUserData","updatedData","name","email","password","trim","put","id","message","alert"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\ProfilStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container user-profile\" v-if=\"user && user.name\">\r\n    <div class=\"profile-info\" v-if=\"!isEditing\">\r\n      <h1 class=\"profile-name\">{{ user.name }}</h1>\r\n      <h4 class=\"profile-email\">Email: {{ user.email }}</h4>\r\n      <button class=\"button1 edit-btn\" @click=\"enableEditing\">Izmijeni</button>\r\n    </div>\r\n    <form class=\"profile-form\" v-else @submit.prevent=\"updateUserData\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Ime:</label>\r\n        <input\r\n          id=\"name\"\r\n          v-model=\"editedUser.name\"\r\n          type=\"text\"\r\n          class=\"input-field\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email:</label>\r\n        <input\r\n          id=\"email\"\r\n          v-model=\"editedUser.email\"\r\n          type=\"text\"\r\n          class=\"input-field\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Nova lozinka:</label>\r\n        <input\r\n          id=\"password\"\r\n          v-model=\"editedUser.password\"\r\n          type=\"password\"\r\n          class=\"input-field\"\r\n          placeholder=\"Unesite novu lozinku (opcionalno)\"\r\n        />\r\n      </div>\r\n      <div class=\"form-actions\">\r\n        <button class=\"button1 save-btn\" type=\"submit\">Spremi promjene</button>\r\n        <button class=\"button1 cancel-btn\" @click=\"disableEditing\">\r\n          Odustani\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"loading\" v-else>\r\n    <p>Loading user data...</p>\r\n  </div>\r\n  <div v-if=\"favoriteRecipes.length\" class=\"favorites-section\">\r\n  <h2>Omiljeni recepti</h2>\r\n  <ul>\r\n    <li v-for=\"recipe in favoriteRecipes\" :key=\"recipe.id\">\r\n      <h3>{{ recipe.naziv }}</h3>\r\n      <img :src=\"recipe.slika\" alt=\"Slika recepta\" class=\"recipe-thumbnail\" />\r\n      <p>{{ recipe.opis }}</p>\r\n      <router-link :to=\"`/recepti/${recipe.id}`\" class=\"view-recipe-btn\">Pogledaj recept</router-link>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<div v-if=\"userRecipes.length\" class=\"my-recipes-section\">\r\n  <h2>Moji recepti</h2>\r\n  <ul>\r\n    <li v-for=\"recipe in userRecipes\" :key=\"recipe.id\">\r\n      <h3>{{ recipe.naziv }}</h3>\r\n      <img :src=\"recipe.slika\" alt=\"Slika recepta\" class=\"recipe-thumbnail\" />\r\n      <p>{{ recipe.opis }}</p>\r\n      <router-link :to=\"`/recepti/${recipe.id}`\" class=\"view-recipe-btn\">Pogledaj recept</router-link>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n</template>\r\n<script>\r\nimport api from \"@/services/api\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapState([\"user\", \"isAuthenticated\"]),\r\n  },\r\n  data() {\r\n    return {\r\n      editedUser: {},\r\n      isEditing: false,\r\n      favoriteRecipes: [], \r\n      userRecipes: [], \r\n    };\r\n  },\r\n  created() {\r\n    if (!this.user) {\r\n      this.fetchUserData();\r\n    } else {\r\n      this.editedUser = { ...this.user };\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUserData() {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await api.get(\"/auth/korisnici\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.$store.commit(\"setUser\", response.data);\r\n        this.editedUser = { ...response.data };\r\n      } catch (error) {\r\n        console.error(\"Greška pri dohvaćanju korisnika:\", error);\r\n      }\r\n    },\r\n    enableEditing() {\r\n      this.isEditing = true;\r\n    },\r\n    disableEditing() {\r\n      this.isEditing = false;\r\n    },\r\n    async updateUserData() {\r\n  try {\r\n    const updatedData = {\r\n      name: this.editedUser.name,\r\n      email: this.editedUser.email,\r\n    };\r\n\r\n    if (this.editedUser.password && this.editedUser.password.trim() !== \"\") {\r\n      updatedData.password = this.editedUser.password;\r\n    }\r\n\r\n    const response = await api.put(`/auth/korisnici/${this.user.id}`, updatedData, {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n    });\r\n\r\n    // Ažuriraj Vuex stanje\r\n    this.$store.commit(\"setUser\", response.data);\r\n\r\n    // Ponovno dohvaćanje korisničkih podataka\r\n    await this.fetchUserData();\r\n\r\n    this.isEditing = false;\r\n    this.editedUser.password = \"\"; // Resetiraj polje za lozinku\r\n  } catch (error) {\r\n    console.error(\"Greška pri ažuriranju korisnika:\", error.response?.data || error.message);\r\n    alert(\"Došlo je do greške prilikom spremanja podataka. Provjerite unos.\");\r\n  }\r\n}\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-profile {\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #fee6c1;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.profile-info {\r\n  text-align: center;\r\n}\r\n\r\n.profile-name {\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n  color: #2a231f;\r\n}\r\n\r\n.profile-email {\r\n  font-size: 1.2em;\r\n  color: #4d4d4d;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.button1 {\r\n  width: auto;\r\n  padding: 10px 20px;\r\n  font-size: 1em;\r\n  font-weight: bold;\r\n  color: #fff;\r\n  background: #2a231f;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: 0.3s ease;\r\n}\r\n\r\n.button1:hover {\r\n  background: #fbf5e5;\r\n  color: #2a231f;\r\n}\r\n\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 1em;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #2a231f;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #d9534f;\r\n}\r\n\r\n.cancel-btn:hover {\r\n  background-color: #c9302c;\r\n  color: #fff;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  font-size: 1.5em;\r\n  color: #2a231f;\r\n}\r\n\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 1em;\r\n}\r\n\r\n.input-field#password {\r\n  background-color: #fff8e1; /* Lagana žuta boja za isticanje */\r\n}\r\n.favorites-section,\r\n.my-recipes-section {\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n  background: #fdf3e6;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.favorites-section h2,\r\n.my-recipes-section h2 {\r\n  font-size: 1.5em;\r\n  color: #2a231f;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.favorites-section ul,\r\n.my-recipes-section ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.favorites-section li,\r\n.my-recipes-section li {\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  background: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.recipe-thumbnail {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 5px;\r\n  object-fit: cover;\r\n  margin-right: 15px;\r\n}\r\n\r\n.view-recipe-btn {\r\n  display: inline-block;\r\n  padding: 10px 15px;\r\n  background: #2a231f;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  border-radius: 5px;\r\n  margin-top: 10px;\r\n  transition: 0.3s ease;\r\n}\r\n\r\n.view-recipe-btn:hover {\r\n  background: #fbf5e5;\r\n  color: #2a231f;\r\n}\r\n\r\n</style>"],"mappings":"AAyEA,OAAOA,GAAE,MAAO,gBAAgB;AAChC,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,QAAQ,EAAE;IACR,GAAGD,QAAQ,CAAC,CAAC,MAAM,EAAE,iBAAiB,CAAC;EACzC,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,CAAC,CAAC;MACdC,SAAS,EAAE,KAAK;MAChBC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE;MACd,IAAI,CAACC,aAAa,CAAC,CAAC;IACtB,OAAO;MACL,IAAI,CAACN,UAAS,GAAI;QAAE,GAAG,IAAI,CAACK;MAAK,CAAC;IACpC;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAO,GAAI,MAAMf,GAAG,CAACgB,GAAG,CAAC,iBAAiB,EAAE;UAChDC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASN,KAAM;UAAE;QAC9C,CAAC,CAAC;QACF,IAAI,CAACO,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEL,QAAQ,CAACZ,IAAI,CAAC;QAC5C,IAAI,CAACC,UAAS,GAAI;UAAE,GAAGW,QAAQ,CAACZ;QAAK,CAAC;MACxC,EAAE,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IACDE,aAAaA,CAAA,EAAG;MACd,IAAI,CAAClB,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDmB,cAAcA,CAAA,EAAG;MACf,IAAI,CAACnB,SAAQ,GAAI,KAAK;IACxB,CAAC;IACD,MAAMoB,cAAcA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,WAAU,GAAI;UAClBC,IAAI,EAAE,IAAI,CAACvB,UAAU,CAACuB,IAAI;UAC1BC,KAAK,EAAE,IAAI,CAACxB,UAAU,CAACwB;QACzB,CAAC;QAED,IAAI,IAAI,CAACxB,UAAU,CAACyB,QAAO,IAAK,IAAI,CAACzB,UAAU,CAACyB,QAAQ,CAACC,IAAI,CAAC,MAAM,EAAE,EAAE;UACtEJ,WAAW,CAACG,QAAO,GAAI,IAAI,CAACzB,UAAU,CAACyB,QAAQ;QACjD;QAEA,MAAMd,QAAO,GAAI,MAAMf,GAAG,CAAC+B,GAAG,CAAE,mBAAkB,IAAI,CAACtB,IAAI,CAACuB,EAAG,EAAC,EAAEN,WAAW,EAAE;UAC7ET,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASL,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;UAAE;QACtE,CAAC,CAAC;;QAEF;QACA,IAAI,CAACK,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEL,QAAQ,CAACZ,IAAI,CAAC;;QAE5C;QACA,MAAM,IAAI,CAACO,aAAa,CAAC,CAAC;QAE1B,IAAI,CAACL,SAAQ,GAAI,KAAK;QACtB,IAAI,CAACD,UAAU,CAACyB,QAAO,GAAI,EAAE,EAAE;MACjC,EAAE,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACN,QAAQ,EAAEZ,IAAG,IAAKkB,KAAK,CAACY,OAAO,CAAC;QACxFC,KAAK,CAAC,kEAAkE,CAAC;MAC3E;IACF;EACE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}