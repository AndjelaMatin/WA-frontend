{"ast":null,"code":"import { createStore } from 'vuex';\nimport api from '@/services/api'; // Pretpostavljam da koristiš API servis za HTTP pozive\n\nexport default createStore({\n  state: {\n    user: null,\n    // Podaci o korisniku\n    token: localStorage.getItem('token') || '',\n    // Token iz localStorage-a\n    isAuthenticated: !!localStorage.getItem('token') // Provjera autentifikacije\n  },\n  mutations: {\n    // Mutacija za postavljanje korisnika\n    setUser(state, user) {\n      console.log('Setting user in Vuex:', user);\n      state.user = user;\n    },\n    // Mutacija za postavljanje tokena\n    setToken(state, token) {\n      console.log('Setting token in Vuex:', token);\n      state.token = token;\n      state.isAuthenticated = true;\n      localStorage.setItem('token', token); // Spremaj token u localStorage\n    },\n    // Mutacija za čišćenje autentifikacije\n    clearAuth(state) {\n      console.log('Clearing auth in Vuex');\n      state.user = null;\n      state.token = '';\n      state.isAuthenticated = false;\n      localStorage.removeItem('token'); // Ukloni token iz localStorage-a\n    }\n  },\n  actions: {\n    // Akcija za prijavu korisnika\n    login({\n      commit\n    }, {\n      token,\n      user\n    }) {\n      console.log('Logging in via Vuex:', {\n        token,\n        user\n      });\n      commit('setToken', token); // Postavi token\n      commit('setUser', user); // Postavi korisnika\n    },\n    // Akcija za odjavu korisnika\n    logout({\n      commit\n    }) {\n      commit('clearAuth'); // Očisti autentifikaciju\n    },\n    // Akcija za inicijalizaciju autentifikacije\n    async initializeAuth({\n      commit,\n      state\n    }) {\n      if (state.token) {\n        try {\n          console.log('Initializing auth with token:', state.token);\n          const response = await api.get('/auth/korisnici', {\n            headers: {\n              Authorization: `Bearer ${state.token}`\n            }\n          });\n          commit('setUser', response.data); // Postavi korisnika u Vuex\n        } catch (error) {\n          console.error('Greška pri inicijalizaciji autentifikacije:', error);\n          commit('clearAuth'); // Očisti autentifikaciju ako token nije važeći\n        }\n      }\n    }\n  }\n});","map":{"version":3,"names":["createStore","api","state","user","token","localStorage","getItem","isAuthenticated","mutations","setUser","console","log","setToken","setItem","clearAuth","removeItem","actions","login","commit","logout","initializeAuth","response","get","headers","Authorization","data","error"],"sources":["C:/Users/MATIN/Desktop/web aplikacije/WA-frontend/src/services/store.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport api from '@/services/api'; // Pretpostavljam da koristiš API servis za HTTP pozive\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: null, // Podaci o korisniku\r\n    token: localStorage.getItem('token') || '', // Token iz localStorage-a\r\n    isAuthenticated: !!localStorage.getItem('token'), // Provjera autentifikacije\r\n  },\r\n  mutations: {\r\n    // Mutacija za postavljanje korisnika\r\n    setUser(state, user) {\r\n      console.log('Setting user in Vuex:', user); \r\n      state.user = user;\r\n    },\r\n    // Mutacija za postavljanje tokena\r\n    setToken(state, token) {\r\n      console.log('Setting token in Vuex:', token); \r\n      state.token = token;\r\n      state.isAuthenticated = true;\r\n      localStorage.setItem('token', token); // Spremaj token u localStorage\r\n    },\r\n    // Mutacija za čišćenje autentifikacije\r\n    clearAuth(state) {\r\n      console.log('Clearing auth in Vuex'); \r\n      state.user = null;\r\n      state.token = '';\r\n      state.isAuthenticated = false;\r\n      localStorage.removeItem('token'); // Ukloni token iz localStorage-a\r\n    },\r\n  },\r\n  actions: {\r\n    // Akcija za prijavu korisnika\r\n    login({ commit }, { token, user }) {\r\n      console.log('Logging in via Vuex:', { token, user }); \r\n      commit('setToken', token); // Postavi token\r\n      commit('setUser', user); // Postavi korisnika\r\n    },\r\n    // Akcija za odjavu korisnika\r\n    logout({ commit }) {\r\n      commit('clearAuth'); // Očisti autentifikaciju\r\n    },\r\n    // Akcija za inicijalizaciju autentifikacije\r\n    async initializeAuth({ commit, state }) {\r\n      if (state.token) {\r\n        try {\r\n          console.log('Initializing auth with token:', state.token);\r\n          const response = await api.get('/auth/korisnici', {\r\n            headers: { Authorization: `Bearer ${state.token}` },\r\n          });\r\n          commit('setUser', response.data); // Postavi korisnika u Vuex\r\n        } catch (error) {\r\n          console.error('Greška pri inicijalizaciji autentifikacije:', error);\r\n          commit('clearAuth'); // Očisti autentifikaciju ako token nije važeći\r\n        }\r\n      }\r\n    },\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,GAAG,MAAM,gBAAgB,CAAC,CAAC;;AAElC,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,IAAI,EAAE,IAAI;IAAE;IACZC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IAAE;IAC5CC,eAAe,EAAE,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;EACpD,CAAC;EACDE,SAAS,EAAE;IACT;IACAC,OAAOA,CAACP,KAAK,EAAEC,IAAI,EAAE;MACnBO,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAER,IAAI,CAAC;MAC1CD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB,CAAC;IACD;IACAS,QAAQA,CAACV,KAAK,EAAEE,KAAK,EAAE;MACrBM,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEP,KAAK,CAAC;MAC5CF,KAAK,CAACE,KAAK,GAAGA,KAAK;MACnBF,KAAK,CAACK,eAAe,GAAG,IAAI;MAC5BF,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC,CAAC,CAAC;IACxC,CAAC;IACD;IACAU,SAASA,CAACZ,KAAK,EAAE;MACfQ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpCT,KAAK,CAACC,IAAI,GAAG,IAAI;MACjBD,KAAK,CAACE,KAAK,GAAG,EAAE;MAChBF,KAAK,CAACK,eAAe,GAAG,KAAK;MAC7BF,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IACpC;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAAEd,KAAK;MAAED;IAAK,CAAC,EAAE;MACjCO,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE;QAAEP,KAAK;QAAED;MAAK,CAAC,CAAC;MACpDe,MAAM,CAAC,UAAU,EAAEd,KAAK,CAAC,CAAC,CAAC;MAC3Bc,MAAM,CAAC,SAAS,EAAEf,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC;IACD;IACAgB,MAAMA,CAAC;MAAED;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IACvB,CAAC;IACD;IACA,MAAME,cAAcA,CAAC;MAAEF,MAAM;MAAEhB;IAAM,CAAC,EAAE;MACtC,IAAIA,KAAK,CAACE,KAAK,EAAE;QACf,IAAI;UACFM,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAET,KAAK,CAACE,KAAK,CAAC;UACzD,MAAMiB,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,GAAG,CAAC,iBAAiB,EAAE;YAChDC,OAAO,EAAE;cAAEC,aAAa,EAAG,UAAStB,KAAK,CAACE,KAAM;YAAE;UACpD,CAAC,CAAC;UACFc,MAAM,CAAC,SAAS,EAAEG,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdhB,OAAO,CAACgB,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;UACnER,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;QACvB;MACF;IACF;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}