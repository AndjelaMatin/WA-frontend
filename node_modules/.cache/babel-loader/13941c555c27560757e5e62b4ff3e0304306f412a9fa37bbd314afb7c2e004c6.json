{"ast":null,"code":"import Card from \"../components/CardComponent.vue\";\nimport api from \"@/services/api\";\nexport default {\n  components: {\n    Card\n  },\n  data() {\n    return {\n      cards: [],\n      // Svi recepti\n      searchResults: [],\n      // Rezultati pretrage\n      searchQuery: '',\n      // Tekst za pretragu\n      isSearching: false // Status pretrage\n    };\n  },\n  async created() {\n    try {\n      // Dohvaćanje svih recepata\n      const response = await api.get('/recepti');\n      this.cards = response.data;\n    } catch (error) {\n      console.error('Greška pri povlačenju recepata:', error);\n    }\n  },\n  computed: {\n    // Najbolji recepti (top 10 prema broju \"sviđa mi se\")\n    sortedCards() {\n      return this.cards.slice().sort((a, b) => b.svidanja - a.svidanja).slice(0, 10);\n    }\n  },\n  methods: {\n    async onSearch() {\n      // Pokreni pretragu samo ako postoji tekst\n      if (this.searchQuery.trim() === '') {\n        this.searchResults = [];\n        return;\n      }\n      this.isSearching = true; // Oznaka da je pretraga u tijeku\n      try {\n        const response = await api.get('/recepti/pretraga', {\n          params: {\n            naziv: this.searchQuery\n          }\n        });\n        this.searchResults = response.data; // Pohrani rezultate pretrage\n      } catch (error) {\n        console.error('Greška pri pretrazi recepata:', error);\n        this.searchResults = []; // Ako je greška, postavi prazne rezultate\n      } finally {\n        this.isSearching = false; // Završetak pretrage\n      }\n    },\n    resetSearch() {\n      // Resetiraj pretragu na početno stanje\n      this.searchQuery = '';\n      this.searchResults = [];\n    }\n  }\n};","map":{"version":3,"names":["Card","api","components","data","cards","searchResults","searchQuery","isSearching","created","response","get","error","console","computed","sortedCards","slice","sort","a","b","svidanja","methods","onSearch","trim","params","naziv","resetSearch"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\PocetnaStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <h1>Dobrodošli na našu slatku platformu!</h1>\r\n\r\n    <!-- Polje za pretragu -->\r\n    <div class=\"search-container mb-4\">\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Pretraži recepte...\"\r\n        class=\"form-control d-inline-block w-75\"\r\n      />\r\n      <button @click=\"onSearch\" type=\"button\" class=\"btn btn-primary ml-2\">Pretraži</button>\r\n      <button @click=\"resetSearch\" type=\"button\" class=\"btn btn-secondary ml-2\">Resetiraj pretragu</button>\r\n    </div>\r\n\r\n    <!-- Prikaz rezultata pretrage -->\r\n    <div v-if=\"isSearching\" class=\"mb-4\">\r\n      <p>Pretraživanje recepata...</p>\r\n    </div>\r\n    <div v-else-if=\"searchResults.length\" class=\"search-results mb-4\">\r\n      <h2>Rezultati pretrage:</h2>\r\n      <div>\r\n        <Card\r\n          v-for=\"card in searchResults\"\r\n          :key=\"card._id\"\r\n          :card=\"card\"\r\n          class=\"card-item\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Ako nema rezultata pretrage -->\r\n    <div v-else-if=\"searchQuery.trim() !== '' && !isSearching\" class=\"mb-4\">\r\n      <p>Nema rezultata pretrage za \"{{ searchQuery }}\".</p>\r\n    </div>\r\n\r\n    <!-- Prikaz najboljih recepata -->\r\n    <div v-else>\r\n      <h1 class=\"mb-4\">Najbolji recepti</h1>\r\n      <div>\r\n        <Card\r\n          v-for=\"card in sortedCards\"\r\n          :key=\"card._id\"\r\n          :card=\"card\"\r\n          class=\"card-item\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Card from \"../components/CardComponent.vue\";\r\nimport api from \"@/services/api\";\r\n\r\nexport default {\r\n  components: {\r\n    Card,\r\n  },\r\n  data() {\r\n    return {\r\n      cards: [], // Svi recepti\r\n      searchResults: [], // Rezultati pretrage\r\n      searchQuery: '', // Tekst za pretragu\r\n      isSearching: false, // Status pretrage\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // Dohvaćanje svih recepata\r\n      const response = await api.get('/recepti');\r\n      this.cards = response.data;\r\n    } catch (error) {\r\n      console.error('Greška pri povlačenju recepata:', error);\r\n    }\r\n  },\r\n  computed: {\r\n    // Najbolji recepti (top 10 prema broju \"sviđa mi se\")\r\n    sortedCards() {\r\n      return this.cards.slice().sort((a, b) => b.svidanja - a.svidanja).slice(0, 10);\r\n    },\r\n  },\r\n  methods: {\r\n    async onSearch() {\r\n      // Pokreni pretragu samo ako postoji tekst\r\n      if (this.searchQuery.trim() === '') {\r\n        this.searchResults = [];\r\n        return;\r\n      }\r\n\r\n      this.isSearching = true; // Oznaka da je pretraga u tijeku\r\n      try {\r\n        const response = await api.get('/recepti/pretraga', {\r\n          params: { naziv: this.searchQuery },\r\n        });\r\n        this.searchResults = response.data; // Pohrani rezultate pretrage\r\n      } catch (error) {\r\n        console.error('Greška pri pretrazi recepata:', error);\r\n        this.searchResults = []; // Ako je greška, postavi prazne rezultate\r\n      } finally {\r\n        this.isSearching = false; // Završetak pretrage\r\n      }\r\n    },\r\n    resetSearch() {\r\n      // Resetiraj pretragu na početno stanje\r\n      this.searchQuery = '';\r\n      this.searchResults = [];\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.card-item {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.search-results {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAoDA,OAAOA,IAAG,MAAO,iCAAiC;AAClD,OAAOC,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MAAE;MACXC,aAAa,EAAE,EAAE;MAAE;MACnBC,WAAW,EAAE,EAAE;MAAE;MACjBC,WAAW,EAAE,KAAK,CAAE;IACtB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF;MACA,MAAMC,QAAO,GAAI,MAAMR,GAAG,CAACS,GAAG,CAAC,UAAU,CAAC;MAC1C,IAAI,CAACN,KAAI,GAAIK,QAAQ,CAACN,IAAI;IAC5B,EAAE,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EACDE,QAAQ,EAAE;IACR;IACAC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACV,KAAK,CAACW,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,QAAO,GAAIF,CAAC,CAACE,QAAQ,CAAC,CAACJ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAChF;EACF,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf;MACA,IAAI,IAAI,CAACf,WAAW,CAACgB,IAAI,CAAC,MAAM,EAAE,EAAE;QAClC,IAAI,CAACjB,aAAY,GAAI,EAAE;QACvB;MACF;MAEA,IAAI,CAACE,WAAU,GAAI,IAAI,EAAE;MACzB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMR,GAAG,CAACS,GAAG,CAAC,mBAAmB,EAAE;UAClDa,MAAM,EAAE;YAAEC,KAAK,EAAE,IAAI,CAAClB;UAAY;QACpC,CAAC,CAAC;QACF,IAAI,CAACD,aAAY,GAAII,QAAQ,CAACN,IAAI,EAAE;MACtC,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAACN,aAAY,GAAI,EAAE,EAAE;MAC3B,UAAU;QACR,IAAI,CAACE,WAAU,GAAI,KAAK,EAAE;MAC5B;IACF,CAAC;IACDkB,WAAWA,CAAA,EAAG;MACZ;MACA,IAAI,CAACnB,WAAU,GAAI,EAAE;MACrB,IAAI,CAACD,aAAY,GAAI,EAAE;IACzB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}