{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport jwt_decode from \"jwt-decode\";\nimport { mapActions } from \"vuex\";\nimport api from \"@/services/api\";\nexport default {\n  data() {\n    return {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      loginEmail: \"\",\n      loginPassword: \"\",\n      signupErrors: {},\n      loginErrors: {},\n      loading: false // Dodato za loading state\n    };\n  },\n  methods: {\n    ...mapActions([\"login\"]),\n    async signup() {\n      this.signupErrors = {};\n      this.loading = true;\n      try {\n        const response = await api.post(\"/auth/signup\", {\n          name: this.userName,\n          email: this.email,\n          password: this.password\n        });\n        alert(\"Signup successful! Please log in.\");\n        this.userName = this.email = this.password = \"\";\n      } catch (error) {\n        this.signupErrors = error.response?.data?.errors || {};\n        console.error(\"Signup error:\", error.response?.data || error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async login() {\n      this.loginErrors = {};\n      this.loading = true;\n      try {\n        const response = await api.post(\"/auth/login\", {\n          email: this.loginEmail,\n          password: this.loginPassword\n        });\n        if (response.data.token && response.data.user) {\n          const decoded = jwt_decode(response.data.token);\n          this.$store.dispatch(\"login\", {\n            token: response.data.token,\n            user: response.data.user\n          });\n          const expirationTime = decoded.exp * 1000 - Date.now();\n\n          // Automatsko odjavljivanje kada token istekne\n          setTimeout(() => {\n            this.$store.dispatch(\"logout\");\n            alert(\"Your session has expired. Please log in again.\");\n            this.$router.push(\"/login\");\n          }, expirationTime);\n          this.$router.push(\"/\");\n        }\n      } catch (error) {\n        this.loginErrors = error.response?.data?.errors || {};\n        console.error(\"Login error:\", error.response?.data || error);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["jwt_decode","mapActions","api","data","userName","email","password","loginEmail","loginPassword","signupErrors","loginErrors","loading","methods","signup","response","post","name","alert","error","errors","console","login","token","user","decoded","$store","dispatch","expirationTime","exp","Date","now","setTimeout","$router","push"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\LoginSignup.vue"],"sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <input type=\"checkbox\" id=\"chk\" aria-hidden=\"true\" />\r\n    <div class=\"signup\">\r\n      <form @submit.prevent=\"signup\">\r\n        <label for=\"chk\" aria-hidden=\"true\">Sign up</label>\r\n        <input\r\n          v-model=\"userName\"\r\n          type=\"text\"\r\n          name=\"txt\"\r\n          placeholder=\"User name\"\r\n          required\r\n        />\r\n        <span v-if=\"signupErrors.name\" class=\"error-message\">\r\n          {{ signupErrors.name }}\r\n        </span>\r\n        <input\r\n          v-model=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <span v-if=\"signupErrors.email\" class=\"error-message\">\r\n          {{ signupErrors.email }}\r\n        </span>\r\n        <input\r\n          v-model=\"password\"\r\n          type=\"password\"\r\n          name=\"pswd\"\r\n          placeholder=\"Lozinka\"\r\n          required\r\n        />\r\n        <span v-if=\"signupErrors.password\" class=\"error-message\">\r\n          {{ signupErrors.password }}\r\n        </span>\r\n        <button type=\"submit\" :disabled=\"loading\">{{ loading ? \"Signing up...\" : \"Sign up\" }}</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"login\">\r\n      <form @submit.prevent=\"login\">\r\n        <label for=\"chk\" aria-hidden=\"true\">Login</label>\r\n        <input\r\n          v-model=\"loginEmail\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <span v-if=\"loginErrors.email\" class=\"error-message\">\r\n          {{ loginErrors.email }}\r\n        </span>\r\n        <input\r\n          v-model=\"loginPassword\"\r\n          type=\"password\"\r\n          name=\"pswd\"\r\n          placeholder=\"Lozinka\"\r\n          required\r\n        />\r\n        <span v-if=\"loginErrors.password\" class=\"error-message\">\r\n          {{ loginErrors.password }}\r\n        </span>\r\n        <button type=\"submit\" :disabled=\"loading\">{{ loading ? \"Logging in...\" : \"Login\" }}</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { mapActions } from \"vuex\";\r\nimport api from \"@/services/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      loginEmail: \"\",\r\n      loginPassword: \"\",\r\n      signupErrors: {},\r\n      loginErrors: {},\r\n      loading: false, // Dodato za loading state\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\"login\"]),\r\n    async signup() {\r\n      this.signupErrors = {};\r\n      this.loading = true;\r\n\r\n      try {\r\n        const response = await api.post(\"/auth/signup\", {\r\n          name: this.userName,\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n\r\n        alert(\"Signup successful! Please log in.\");\r\n        this.userName = this.email = this.password = \"\";\r\n      } catch (error) {\r\n        this.signupErrors = error.response?.data?.errors || {};\r\n        console.error(\"Signup error:\", error.response?.data || error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async login() {\r\n      this.loginErrors = {};\r\n      this.loading = true;\r\n\r\n      try {\r\n        const response = await api.post(\"/auth/login\", {\r\n          email: this.loginEmail,\r\n          password: this.loginPassword,\r\n        });\r\n\r\n        if (response.data.token && response.data.user) {\r\n          const decoded = jwt_decode(response.data.token);\r\n\r\n          this.$store.dispatch(\"login\", {\r\n            token: response.data.token,\r\n            user: response.data.user,\r\n          });\r\n\r\n          const expirationTime = decoded.exp * 1000 - Date.now();\r\n\r\n          // Automatsko odjavljivanje kada token istekne\r\n          setTimeout(() => {\r\n            this.$store.dispatch(\"logout\");\r\n            alert(\"Your session has expired. Please log in again.\");\r\n            this.$router.push(\"/login\");\r\n          }, expirationTime);\r\n\r\n          this.$router.push(\"/\");\r\n        }\r\n      } catch (error) {\r\n        this.loginErrors = error.response?.data?.errors || {};\r\n        console.error(\"Login error:\", error.response?.data || error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.error-message {\r\n  color: red;\r\n  font-size: 0.9rem;\r\n  margin-top: -10px;\r\n  margin-bottom: 10px;\r\n  display: block;\r\n}\r\n\r\n.main {\r\nmargin: auto;\r\nwidth: 350px;\r\nheight: 500px;\r\nbackground: #fee6c1;\r\noverflow: hidden;\r\nbackground-color: #fee6c1;\r\nborder-radius: 10px;\r\nbox-shadow: 2px 10px 20px #2a231f;\r\n}\r\n#chk {\r\ndisplay: none;\r\n}\r\n.signup {\r\nposition: relative;\r\nwidth: 100%;\r\nheight: 100%;\r\n}\r\nlabel {\r\ncolor: #2a231f;\r\nfont-size: 2.3em;\r\njustify-content: center;\r\ndisplay: flex;\r\nmargin: 60px;\r\nfont-weight: bold;\r\ncursor: pointer;\r\ntransition: 0.5s ease-in-out;\r\nbackground-color: none;\r\n}\r\ninput {\r\nwidth: 60%;\r\nheight: 20px;\r\nbackground: #fbf5e5;\r\ncolor: #2a231f;\r\njustify-content: center;\r\ndisplay: flex;\r\nmargin: 20px auto;\r\npadding: 10px;\r\nborder: none;\r\noutline: none;\r\nborder-radius: 5px;\r\nbox-shadow: 1px 2px 5px #2a231f;\r\n}\r\nbutton {\r\nwidth: 60%;\r\nheight: 40px;\r\nmargin: 10px auto;\r\njustify-content: center;\r\ndisplay: block;\r\ncolor: #fff;\r\nbackground: #2a231f;\r\nfont-size: 1em;\r\nfont-weight: bold;\r\nmargin-top: 20px;\r\noutline: none;\r\nborder: none;\r\nborder-radius: 5px;\r\ntransition: 0.2s ease-in;\r\ncursor: pointer;\r\n}\r\nbutton:hover {\r\nbackground: #fbf5e5;\r\ncolor: #2a231f;\r\n}\r\n.login {\r\nheight: 460px;\r\nbackground: #fbf5e5;\r\nborder-radius: 60% / 10%;\r\ntransform: translateY(-180px);\r\ntransition: 0.8s ease-in-out;\r\n}\r\n.login label {\r\ncolor: #2a231f;\r\ntransform: scale(0.6);\r\n}\r\n\r\n#chk:checked ~ .login {\r\ntransform: translateY(-500px);\r\n}\r\n#chk:checked ~ .login label {\r\ntransform: scale(1);\r\n}\r\n#chk:checked ~ .signup label {\r\ntransform: scale(0.6);\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}