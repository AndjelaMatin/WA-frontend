{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CardComponent from \"../components/CardComponent.vue\";\nimport api from \"@/services/api\";\nexport default {\n  components: {\n    CardComponent\n  },\n  data() {\n    return {\n      userRecipes: [],\n      // Korisnički recepti\n      favoriteRecipes: [] // Omiljeni recepti\n    };\n  },\n  async created() {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      // Dohvati korisničke recepte\n      const userRecipesResponse = await api.get(\"/mojirecepti\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      this.userRecipes = userRecipesResponse.data;\n\n      // Dohvati omiljene recepte\n      const favoriteRecipesResponse = await api.get(\"/omiljenirecepti\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      this.favoriteRecipes = favoriteRecipesResponse.data;\n    } catch (error) {\n      console.error(\"Greška pri dohvaćanju recepata:\", error);\n    }\n  },\n  methods: {\n    openRecipe(id) {\n      if (!id) {\n        console.error(\"Recept ID nije definiran.\");\n        return;\n      }\n      this.$router.push({\n        name: \"receptStranica\",\n        params: {\n          id\n        }\n      });\n    },\n    editRecipe(id) {\n      this.$router.push({\n        name: \"urediRecept\",\n        params: {\n          id\n        }\n      });\n    },\n    async deleteRecipe(id) {\n      if (!confirm(\"Jeste li sigurni da želite obrisati ovaj recept?\")) return;\n      try {\n        const token = localStorage.getItem(\"token\");\n        await api.delete(`/brisanjerecepta/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.userRecipes = this.userRecipes.filter(recept => recept._id !== id);\n        alert(\"Recept je uspješno obrisan!\");\n      } catch (error) {\n        console.error(\"Greška pri brisanju recepta:\", error);\n        alert(\"Došlo je do greške. Pokušajte ponovno.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["CardComponent","api","components","data","userRecipes","favoriteRecipes","created","token","localStorage","getItem","userRecipesResponse","get","headers","Authorization","favoriteRecipesResponse","error","console","methods","openRecipe","id","$router","push","name","params","editRecipe","deleteRecipe","confirm","delete","filter","recept","_id","alert"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\MojiRecepti.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <div v-if=\"favoriteRecipes.length > 0\">\r\n      <h1 class=\"text-center mb-4\">Omiljeni recepti</h1>\r\n      <div class=\"cards-container\">\r\n        <CardComponent\r\n          v-for=\"recept in favoriteRecipes\"\r\n          :key=\"recept._id\"\r\n          :recept=\"recept\"\r\n          :showActions=\"false\" \r\n          @open-recipe=\"openRecipe\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <p v-if=\"favoriteRecipes.length === 0\" class=\"text-center text-muted\">\r\n      Nemate nijedan omiljeni recept. Dodajte recepte u omiljene kako bi se prikazali ovdje!\r\n    </p>\r\n\r\n    <div v-if=\"userRecipes.length > 0\">\r\n      <br>\r\n      <h1 class=\"text-center mb-4\">Moji recepti</h1>\r\n      <div class=\"cards-container\">\r\n        <CardComponent\r\n          v-for=\"recept in userRecipes\"\r\n          :key=\"recept._id\"\r\n          :recept=\"recept\"\r\n          :showActions=\"true\" \r\n          @open-recipe=\"openRecipe\"\r\n          @edit-recipe=\"editRecipe\"\r\n          @delete-recipe=\"deleteRecipe\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <p v-if=\"userRecipes.length === 0\" class=\"text-center text-muted\">\r\n      Nemate nijedan svoj recept. Dodajte novi recept kako bi se prikazao ovdje!\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CardComponent from \"../components/CardComponent.vue\";\r\nimport api from \"@/services/api\";\r\n\r\nexport default {\r\n  components: {\r\n    CardComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      userRecipes: [], // Korisnički recepti\r\n      favoriteRecipes: [], // Omiljeni recepti\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      // Dohvati korisničke recepte\r\n      const userRecipesResponse = await api.get(\"/mojirecepti\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      this.userRecipes = userRecipesResponse.data;\r\n\r\n      // Dohvati omiljene recepte\r\n      const favoriteRecipesResponse = await api.get(\"/omiljenirecepti\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      this.favoriteRecipes = favoriteRecipesResponse.data;\r\n    } catch (error) {\r\n      console.error(\"Greška pri dohvaćanju recepata:\", error);\r\n    }\r\n  },\r\n  methods: {\r\n    openRecipe(id) {\r\n      if (!id) {\r\n        console.error(\"Recept ID nije definiran.\");\r\n        return;\r\n      }\r\n      this.$router.push({ name: \"receptStranica\", params: { id } });\r\n    },\r\n    editRecipe(id) {\r\n      this.$router.push({ name: \"urediRecept\", params: { id } });\r\n    },\r\n    async deleteRecipe(id) {\r\n      if (!confirm(\"Jeste li sigurni da želite obrisati ovaj recept?\")) return;\r\n\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        await api.delete(`/brisanjerecepta/${id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.userRecipes = this.userRecipes.filter((recept) => recept._id !== id);\r\n        alert(\"Recept je uspješno obrisan!\");\r\n      } catch (error) {\r\n        console.error(\"Greška pri brisanju recepta:\", error);\r\n        alert(\"Došlo je do greške. Pokušajte ponovno.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #fbf5e5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.cards-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  justify-items: center;\r\n}\r\n\r\n.text-center {\r\n  font-size: 24px;\r\n  color: #2a231f;\r\n}\r\n\r\n.text-muted {\r\n  color: #888;\r\n  font-size: 18px;\r\n}\r\n</style>"],"mappings":";AAwCA,OAAOA,aAAY,MAAO,iCAAiC;AAC3D,OAAOC,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MAAE;MACjBC,eAAe,EAAE,EAAE,CAAE;IACvB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;MAE3C;MACA,MAAMC,mBAAkB,GAAI,MAAMT,GAAG,CAACU,GAAG,CAAC,cAAc,EAAE;QACxDC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASN,KAAM;QAAE;MAC9C,CAAC,CAAC;MACF,IAAI,CAACH,WAAU,GAAIM,mBAAmB,CAACP,IAAI;;MAE3C;MACA,MAAMW,uBAAsB,GAAI,MAAMb,GAAG,CAACU,GAAG,CAAC,kBAAkB,EAAE;QAChEC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASN,KAAM;QAAE;MAC9C,CAAC,CAAC;MACF,IAAI,CAACF,eAAc,GAAIS,uBAAuB,CAACX,IAAI;IACrD,EAAE,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,UAAUA,CAACC,EAAE,EAAE;MACb,IAAI,CAACA,EAAE,EAAE;QACPH,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAC;QAC1C;MACF;MACA,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,MAAM,EAAE;UAAEJ;QAAG;MAAE,CAAC,CAAC;IAC/D,CAAC;IACDK,UAAUA,CAACL,EAAE,EAAE;MACb,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,aAAa;QAAEC,MAAM,EAAE;UAAEJ;QAAG;MAAE,CAAC,CAAC;IAC5D,CAAC;IACD,MAAMM,YAAYA,CAACN,EAAE,EAAE;MACrB,IAAI,CAACO,OAAO,CAAC,kDAAkD,CAAC,EAAE;MAElE,IAAI;QACF,MAAMnB,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMR,GAAG,CAAC0B,MAAM,CAAE,oBAAmBR,EAAG,EAAC,EAAE;UACzCP,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASN,KAAM;UAAE;QAC9C,CAAC,CAAC;QACF,IAAI,CAACH,WAAU,GAAI,IAAI,CAACA,WAAW,CAACwB,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,GAAE,KAAMX,EAAE,CAAC;QACzEY,KAAK,CAAC,6BAA6B,CAAC;MACtC,EAAE,OAAOhB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDgB,KAAK,CAAC,wCAAwC,CAAC;MACjD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}