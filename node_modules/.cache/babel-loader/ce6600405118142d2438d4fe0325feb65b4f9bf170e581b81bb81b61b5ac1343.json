{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7f8c8385\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-3\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center mb-4\"\n}, \"Omiljeni recepti\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"cards-container\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"text-center text-muted\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Nemate nijedan omiljeni recept. Dodajte recepte u omiljene kako bi se prikazali ovdje! \", -1 /* HOISTED */));\nconst _hoisted_7 = [_hoisted_6];\nconst _hoisted_8 = {\n  key: 2\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center mb-4\"\n}, \"Moji recepti\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"cards-container\"\n};\nconst _hoisted_12 = {\n  key: 3,\n  class: \"text-center text-muted\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \" Nemate nijedan svoj recept. Dodajte novi recept kako bi se prikazao ovdje! \", -1 /* HOISTED */));\nconst _hoisted_14 = [_hoisted_13];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CardComponent = _resolveComponent(\"CardComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.favoriteRecipes.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.favoriteRecipes, recept => {\n    return _openBlock(), _createBlock(_component_CardComponent, {\n      key: recept._id,\n      recept: recept,\n      showActions: false,\n      liked: $data.lajkaniRecepti.includes(recept._id),\n      commented: $data.komentiraniRecepti.includes(recept._id),\n      onToggleLike: $options.handleLike,\n      onOpenRecipe: $options.openRecipe,\n      onAddComment: $options.handleComment\n    }, null, 8 /* PROPS */, [\"recept\", \"liked\", \"commented\", \"onToggleLike\", \"onOpenRecipe\", \"onAddComment\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [..._hoisted_7])), $data.userRecipes.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_hoisted_9, _hoisted_10, _createElementVNode(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userRecipes, recept => {\n    return _openBlock(), _createBlock(_component_CardComponent, {\n      key: recept._id,\n      recept: recept,\n      showActions: true,\n      liked: $data.lajkaniRecepti.includes(recept._id),\n      commented: $data.komentiraniRecepti.includes(recept._id),\n      onToggleLike: $options.handleLike,\n      onOpenRecipe: $options.openRecipe,\n      onEditRecipe: $options.editRecipe,\n      onDeleteRecipe: $options.deleteRecipe,\n      onAddComment: $options.handleComment\n    }, null, 8 /* PROPS */, [\"recept\", \"liked\", \"commented\", \"onToggleLike\", \"onOpenRecipe\", \"onEditRecipe\", \"onDeleteRecipe\", \"onAddComment\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [..._hoisted_14]))]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_hoisted_6","_hoisted_13","_createElementBlock","_hoisted_1","$data","favoriteRecipes","length","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","recept","_createBlock","_component_CardComponent","_id","showActions","liked","lajkaniRecepti","includes","commented","komentiraniRecepti","onToggleLike","$options","handleLike","onOpenRecipe","openRecipe","onAddComment","handleComment","_hoisted_5","_hoisted_7","userRecipes","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","onEditRecipe","editRecipe","onDeleteRecipe","deleteRecipe","_hoisted_12","_hoisted_14"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\MojiRecepti.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <div v-if=\"favoriteRecipes.length > 0\">\r\n      <h1 class=\"text-center mb-4\">Omiljeni recepti</h1>\r\n      <div class=\"cards-container\">\r\n        <CardComponent\r\n          v-for=\"recept in favoriteRecipes\"\r\n          :key=\"recept._id\"\r\n          :recept=\"recept\"\r\n          :showActions=\"false\" \r\n          :liked=\"lajkaniRecepti.includes(recept._id)\"\r\n          :commented=\"komentiraniRecepti.includes(recept._id)\" \r\n          @toggle-like=\"handleLike\"\r\n          @open-recipe=\"openRecipe\"\r\n          @add-comment=\"handleComment\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"text-center text-muted\">\r\n      <p>Nemate nijedan omiljeni recept. Dodajte recepte u omiljene kako bi se prikazali ovdje!\r\n    </p></div>\r\n\r\n    <div v-if=\"userRecipes.length > 0\">\r\n      <br>\r\n      <h1 class=\"text-center mb-4\">Moji recepti</h1>\r\n      <div class=\"cards-container\">\r\n        <CardComponent\r\n          v-for=\"recept in userRecipes\"\r\n          :key=\"recept._id\"\r\n          :recept=\"recept\"\r\n          :showActions=\"true\" \r\n          :liked=\"lajkaniRecepti.includes(recept._id)\"\r\n          :commented=\"komentiraniRecepti.includes(recept._id)\" \r\n          @toggle-like=\"handleLike\"\r\n          @open-recipe=\"openRecipe\"\r\n          @edit-recipe=\"editRecipe\"\r\n          @delete-recipe=\"deleteRecipe\"\r\n          @add-comment=\"handleComment\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"text-center text-muted\">\r\n     <p> Nemate nijedan svoj recept. Dodajte novi recept kako bi se prikazao ovdje!\r\n    </p></div>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CardComponent from \"../components/CardComponent.vue\";\r\nimport api from \"@/services/api\";\r\n\r\nexport default {\r\n  components: {\r\n    CardComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      userRecipes: [], \r\n      favoriteRecipes: [], \r\n      lajkaniRecepti: [],\r\n      komentiraniRecepti: [], \r\n    };\r\n  },\r\n  async created() {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const userRecipesResponse = await api.get(\"/mojirecepti\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    this.userRecipes = userRecipesResponse.data;\r\n\r\n    const favoriteRecipesResponse = await api.get(\"/omiljenirecepti\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    this.favoriteRecipes = favoriteRecipesResponse.data;\r\n\r\n    await this.fetchLajkaniRecepti();\r\n  } catch (error) {\r\n    console.error(\"Greška pri dohvaćanju recepata:\", error);\r\n  }\r\n},\r\n\r\n  methods: {\r\n    async handleComment(receptId, tekstKomentara) {\r\n  if (!receptId) {\r\n    console.error(\"Recept ID nije definisan.\");\r\n    return;\r\n  }\r\n\r\n  if (!tekstKomentara || tekstKomentara.trim() === \"\") {\r\n    alert(\"Komentar ne može biti prazan.\");\r\n    return;\r\n  }\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    alert(\"Molimo prijavite se kako biste mogli komentirati recepte.\");\r\n    this.$router.push(\"/login\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const recept =\r\n      this.userRecipes.find((r) => r._id === receptId) ||\r\n      this.favoriteRecipes.find((r) => r._id === receptId);\r\n\r\n    if (!recept) {\r\n      console.error(\"Recept nije pronađen u lokalnim listama.\");\r\n      return;\r\n    }\r\n\r\n    const response = await api.post(\r\n      `/recepti/${receptId}/komentari`,\r\n      { tekst: tekstKomentara },\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n\r\n    recept.komentari.push(response.data);\r\n\r\n    if (!this.komentiraniRecepti.includes(receptId)) {\r\n      this.komentiraniRecepti.push(receptId);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Greška pri dodavanju komentara:\", error);\r\n    alert(\"Došlo je do greške prilikom dodavanja komentara.\");\r\n  }\r\n},\r\n    async fetchKomentiraniRecepti() {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) return; \r\n\r\n  try {\r\n    const response = await api.get(\"/korisnici/komentirani\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    this.komentiraniRecepti = response.data; \r\n    console.log(\"Komentirani recepti:\", this.komentiraniRecepti);\r\n  } catch (error) {\r\n    console.error(\"Greška pri dohvaćanju komentiranih recepata:\", error);\r\n  }\r\n},\r\n    async handleLike(receptId) {\r\n  if (!receptId) {\r\n    console.error(\"Recept ID nije definisan.\");\r\n    return;\r\n  }\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    alert(\"Molimo prijavite se kako biste mogli lajkovati recepte.\");\r\n    this.$router.push(\"/login\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const recept =\r\n      this.userRecipes.find((r) => r._id === receptId) ||\r\n      this.favoriteRecipes.find((r) => r._id === receptId);\r\n\r\n    if (!recept) {\r\n      console.error(\"Recept nije pronađen u lokalnim listama.\");\r\n      return;\r\n    }\r\n\r\n    if (this.lajkaniRecepti.includes(receptId)) {\r\n      await api.delete(\"/korisnici/lajk\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        params: { receptId },\r\n      });\r\n      this.lajkaniRecepti = this.lajkaniRecepti.filter((id) => id !== receptId);\r\n      recept.svidanja--; \r\n    } else {\r\n      await api.post(\"/korisnici/lajk\", { receptId }, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      this.lajkaniRecepti.push(receptId);\r\n      recept.svidanja++; \r\n    }\r\n  } catch (error) {\r\n    console.error(\"Greška pri upravljanju lajkovima:\", error);\r\n    alert(\"Došlo je do greške prilikom lajkanja/uklanjanja lajka.\");\r\n  }\r\n},\r\nasync fetchLajkaniRecepti() {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) return; \r\n\r\n  try {\r\n    const response = await api.get(\"/korisnici/lajkani\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    this.lajkaniRecepti = response.data; \r\n    console.log(\"Lajkani recepti:\", this.lajkaniRecepti);\r\n  } catch (error) {\r\n    console.error(\"Greška pri dohvaćanju lajkanih recepata:\", error);\r\n  }\r\n},\r\n    openRecipe(id) {\r\n      if (!id) {\r\n        console.error(\"Recept ID nije definiran.\");\r\n        return;\r\n      }\r\n      this.$router.push({ name: \"receptStranica\", params: { id } });\r\n    },\r\n    editRecipe(id) {\r\n      this.$router.push({ name: \"urediRecept\", params: { id } });\r\n    },\r\n    async deleteRecipe(id) {\r\n      if (!confirm(\"Jeste li sigurni da želite obrisati ovaj recept?\")) return;\r\n\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        await api.delete(`/brisanjerecepta/${id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.userRecipes = this.userRecipes.filter((recept) => recept._id !== id);\r\n        alert(\"Recept je uspješno obrisan!\");\r\n      } catch (error) {\r\n        console.error(\"Greška pri brisanju recepta:\", error);\r\n        alert(\"Došlo je do greške. Pokušajte ponovno.\");\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchLajkaniRecepti();\r\n    this.fetchKomentiraniRecepti(); \r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.cards-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  justify-items: center;\r\n}\r\n\r\n.text-center {\r\n  font-size: 24px;\r\n  color: #2a231f;\r\n}\r\n\r\n.text-muted {\r\n  color: #888;\r\n  font-size: 18px;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;EAD7BC,GAAA;AAAA;gEAGMC,mBAAA,CAAkD;EAA9CF,KAAK,EAAC;AAAkB,GAAC,kBAAgB;;EACxCA,KAAK,EAAC;AAAiB;;EAJlCC,GAAA;EAkBgBD,KAAK,EAAC;;gEAChBE,mBAAA,CACE,WADC,yFACL;oBADEC,UACE,C;;EApBRF,GAAA;AAAA;gEAuBMC,mBAAA,CAAI;iEACJA,mBAAA,CAA8C;EAA1CF,KAAK,EAAC;AAAkB,GAAC,cAAY;;EACpCA,KAAK,EAAC;AAAiB;;EAzBlCC,GAAA;EAyCgBD,KAAK,EAAC;;iEACjBE,mBAAA,CACG,WADA,8EACJ;qBADCE,WACG,C;;;uBA1CNC,mBAAA,CA4CM,OA5CNC,UA4CM,GA3COC,KAAA,CAAAC,eAAe,CAACC,MAAM,Q,cAAjCJ,mBAAA,CAeM,OAjBVK,UAAA,GAGMC,UAAkD,EAClDT,mBAAA,CAYM,OAZNU,UAYM,I,kBAXJP,mBAAA,CAUEQ,SAAA,QAfVC,WAAA,CAM2BP,KAAA,CAAAC,eAAe,EAAzBO,MAAM;yBADfC,YAAA,CAUEC,wBAAA;MARChB,GAAG,EAAEc,MAAM,CAACG,GAAG;MACfH,MAAM,EAAEA,MAAM;MACdI,WAAW,EAAE,KAAK;MAClBC,KAAK,EAAEb,KAAA,CAAAc,cAAc,CAACC,QAAQ,CAACP,MAAM,CAACG,GAAG;MACzCK,SAAS,EAAEhB,KAAA,CAAAiB,kBAAkB,CAACF,QAAQ,CAACP,MAAM,CAACG,GAAG;MACjDO,YAAW,EAAEC,QAAA,CAAAC,UAAU;MACvBC,YAAW,EAAEF,QAAA,CAAAG,UAAU;MACvBC,YAAW,EAAEJ,QAAA,CAAAK;;uDAIpB1B,mBAAA,CAEU,OAFV2B,UAEU,EApBd,IAAAC,UAAA,KAsBe1B,KAAA,CAAA2B,WAAW,CAACzB,MAAM,Q,cAA7BJ,mBAAA,CAkBM,OAxCV8B,UAAA,GAuBMC,UAAI,EACJC,WAA8C,EAC9CnC,mBAAA,CAcM,OAdNoC,WAcM,I,kBAbJjC,mBAAA,CAYEQ,SAAA,QAtCVC,WAAA,CA2B2BP,KAAA,CAAA2B,WAAW,EAArBnB,MAAM;yBADfC,YAAA,CAYEC,wBAAA;MAVChB,GAAG,EAAEc,MAAM,CAACG,GAAG;MACfH,MAAM,EAAEA,MAAM;MACdI,WAAW,EAAE,IAAI;MACjBC,KAAK,EAAEb,KAAA,CAAAc,cAAc,CAACC,QAAQ,CAACP,MAAM,CAACG,GAAG;MACzCK,SAAS,EAAEhB,KAAA,CAAAiB,kBAAkB,CAACF,QAAQ,CAACP,MAAM,CAACG,GAAG;MACjDO,YAAW,EAAEC,QAAA,CAAAC,UAAU;MACvBC,YAAW,EAAEF,QAAA,CAAAG,UAAU;MACvBU,YAAW,EAAEb,QAAA,CAAAc,UAAU;MACvBC,cAAa,EAAEf,QAAA,CAAAgB,YAAY;MAC3BZ,YAAW,EAAEJ,QAAA,CAAAK;;uDAIpB1B,mBAAA,CAEU,OAFVsC,WAEU,EA3Cd,IAAAC,WAAA,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}