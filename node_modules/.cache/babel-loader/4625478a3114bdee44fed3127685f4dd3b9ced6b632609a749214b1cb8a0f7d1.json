{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CardComponent from \"../components/CardComponent.vue\";\nimport api from \"@/services/api\";\nexport default {\n  components: {\n    CardComponent\n  },\n  data() {\n    return {\n      recepti: [],\n      searchResults: [],\n      searchQuery: \"\",\n      isSearching: false,\n      searchInitiated: false,\n      lajkaniRecepti: []\n    };\n  },\n  computed: {\n    prikazaniRecepti() {\n      return this.searchQuery.trim() !== \"\" && this.searchResults.length > 0 ? this.searchResults : this.recepti;\n    }\n  },\n  methods: {\n    async fetchRecepti() {\n      try {\n        const response = await api.get('/recepti');\n        this.recepti = response.data;\n      } catch (error) {\n        console.error('Greška pri dohvaćanju recepata:', error);\n      }\n    },\n    async onSearch() {\n      if (this.searchQuery.trim() === \"\") {\n        this.searchResults = [];\n        this.searchInitiated = true;\n        return;\n      }\n      this.isSearching = true;\n      this.searchInitiated = true;\n      try {\n        const response = await api.get(\"/recepti/pretraga\", {\n          params: {\n            naziv: this.searchQuery\n          }\n        });\n        this.searchResults = response.data;\n      } catch (error) {\n        console.error(\"Greška pri pretrazi recepata:\", error);\n        this.searchResults = [];\n      } finally {\n        this.isSearching = false;\n      }\n    },\n    resetSearch() {\n      this.searchQuery = \"\";\n      this.searchResults = [];\n      this.searchInitiated = false;\n    },\n    async fetchLajkaniRecepti() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await api.get(\"/korisnici/lajkani\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.lajkaniRecepti = response.data.map(recept => recept._id);\n      } catch (error) {\n        console.error(\"Greška pri dohvaćanju lajkanih recepata:\", error);\n      }\n    },\n    async handleLike() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const receptId = this.recipe?._id;\n        if (!token) {\n          alert(\"Niste prijavljeni. Molimo prijavite se.\");\n          return;\n        }\n        if (!receptId) {\n          console.error(\"Recept ID nije definisan.\");\n          return;\n        }\n        if (this.isLiked) {\n          // Ukloni lajk\n          await api.delete('/korisnici/lajk', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            params: {\n              receptId\n            }\n          });\n          this.isLiked = false;\n          this.recipe.svidanja--;\n          alert(\"Lajk uklonjen.\");\n        } else {\n          // Dodaj lajk\n          await api.post('/korisnici/lajk', {\n            receptId\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.isLiked = true;\n          this.recipe.svidanja++;\n          alert(\"Recept lajkan.\");\n        }\n      } catch (error) {\n        console.error(\"Greška pri upravljanju lajkovima:\", error);\n        alert(\"Došlo je do greške. Pokušajte ponovno.\");\n      }\n    },\n    openRecipe(id) {\n      if (!id) {\n        console.error(\"Recept ID nije definiran.\");\n        return;\n      }\n      this.$router.push({\n        name: \"receptStranica\",\n        params: {\n          id\n        }\n      });\n    }\n  },\n  mounted() {\n    this.fetchRecepti();\n    this.fetchLajkaniRecepti();\n  }\n};","map":{"version":3,"names":["CardComponent","api","components","data","recepti","searchResults","searchQuery","isSearching","searchInitiated","lajkaniRecepti","computed","prikazaniRecepti","trim","length","methods","fetchRecepti","response","get","error","console","onSearch","params","naziv","resetSearch","fetchLajkaniRecepti","token","localStorage","getItem","headers","Authorization","map","recept","_id","handleLike","receptId","recipe","alert","isLiked","delete","svidanja","post","openRecipe","id","$router","push","name","mounted"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\PocetnaStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <h1 class=\"text-center mb-4\">Dobrodošli na našu slatku platformu!</h1>\r\n    <div class=\"search-container\">\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Pretraži recepte...\"\r\n        class=\"form-control search-input\"\r\n      />\r\n      <div class=\"search-buttons\">\r\n        <button @click=\"onSearch\" type=\"button\" class=\"btn btn-primary\">\r\n          Pretraži\r\n        </button>\r\n        <button @click=\"resetSearch\" type=\"button\" class=\"btn btn-secondary\">\r\n          Resetiraj pretragu\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div\r\n      v-if=\"searchInitiated && searchQuery.trim() !== '' && !isSearching && searchResults.length === 0\"\r\n      class=\"mb-4 text-center\"\r\n    >\r\n      <p class=\"text-danger\">Nema rezultata pretrage za \"{{ searchQuery }}\".</p>\r\n    </div>\r\n    <div class=\"cards-container\">\r\n      <CardComponent\r\n        v-for=\"recept in prikazaniRecepti\"\r\n        :key=\"recept._id\"\r\n        :recept=\"recept\"\r\n        :liked=\"lajkaniRecepti.includes(recept._id)\"\r\n        @toggle-like=\"handleLike\"\r\n        @open-recipe=\"openRecipe\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CardComponent from \"../components/CardComponent.vue\";\r\nimport api from \"@/services/api\";\r\n\r\nexport default {\r\n  components: {\r\n    CardComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      recepti: [],\r\n      searchResults: [], \r\n      searchQuery: \"\",\r\n      isSearching: false, \r\n      searchInitiated: false, \r\n      lajkaniRecepti: [],\r\n    };\r\n  },\r\n  computed: {\r\n    prikazaniRecepti() {\r\n      return this.searchQuery.trim() !== \"\" && this.searchResults.length > 0\r\n        ? this.searchResults\r\n        : this.recepti;\r\n    },\r\n  },\r\n  methods: {\r\n    async fetchRecepti() {\r\n      try {\r\n        const response = await api.get('/recepti');\r\n        this.recepti = response.data;\r\n      } catch (error) {\r\n        console.error('Greška pri dohvaćanju recepata:', error);\r\n      }\r\n    },\r\n    async onSearch() {\r\n      if (this.searchQuery.trim() === \"\") {\r\n        this.searchResults = [];\r\n        this.searchInitiated = true; \r\n        return;\r\n      }\r\n\r\n      this.isSearching = true;\r\n      this.searchInitiated = true; \r\n      try {\r\n        const response = await api.get(\"/recepti/pretraga\", {\r\n          params: { naziv: this.searchQuery },\r\n        });\r\n        this.searchResults = response.data;\r\n      } catch (error) {\r\n        console.error(\"Greška pri pretrazi recepata:\", error);\r\n        this.searchResults = [];\r\n      } finally {\r\n        this.isSearching = false; \r\n      }\r\n    },\r\n    resetSearch() {\r\n      this.searchQuery = \"\";\r\n      this.searchResults = [];\r\n      this.searchInitiated = false; \r\n    },async fetchLajkaniRecepti() {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await api.get(\"/korisnici/lajkani\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.lajkaniRecepti = response.data.map((recept) => recept._id);\r\n      } catch (error) {\r\n        console.error(\"Greška pri dohvaćanju lajkanih recepata:\", error);\r\n      }\r\n    },\r\n    async handleLike() {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const receptId = this.recipe?._id;\r\n\r\n    if (!token) {\r\n      alert(\"Niste prijavljeni. Molimo prijavite se.\");\r\n      return;\r\n    }\r\n\r\n    if (!receptId) {\r\n      console.error(\"Recept ID nije definisan.\");\r\n      return;\r\n    }\r\n\r\n    if (this.isLiked) {\r\n      // Ukloni lajk\r\n      await api.delete('/korisnici/lajk', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        params: { receptId },\r\n      });\r\n      this.isLiked = false;\r\n      this.recipe.svidanja--;\r\n      alert(\"Lajk uklonjen.\");\r\n    } else {\r\n      // Dodaj lajk\r\n      await api.post('/korisnici/lajk', { receptId }, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      this.isLiked = true;\r\n      this.recipe.svidanja++;\r\n      alert(\"Recept lajkan.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Greška pri upravljanju lajkovima:\", error);\r\n    alert(\"Došlo je do greške. Pokušajte ponovno.\");\r\n  }\r\n},\r\n    openRecipe(id) {\r\n      if (!id) {\r\n        console.error(\"Recept ID nije definiran.\");\r\n        return;\r\n      }\r\n      this.$router.push({ name: \"receptStranica\", params: { id } });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchRecepti();\r\n    this.fetchLajkaniRecepti();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.search-container {\r\n  display: flex; \r\n  align-items: center;\r\n  justify-content: center; \r\n  gap: 10px; \r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.search-input {\r\n  flex: 1; \r\n  max-width: 500px; \r\n  font-size: 1.25rem; \r\n  padding: 15px; \r\n  border: 1px solid #ccc;\r\n  border-radius: 8px; \r\n}\r\n\r\n.search-buttons {\r\n  display: flex; \r\n  gap: 10px; \r\n}\r\n\r\n.search-buttons .btn {\r\n  padding: 10px 20px;\r\n  background-color: #2a231f; \r\n  color: #fff; \r\n  border: none;\r\n  border-radius: 5px; \r\n  font-size: 1rem; \r\n  font-weight: bold; \r\n  cursor: pointer; \r\n  transition: background 0.3s ease, transform 0.3s ease; \r\n}\r\n\r\n.search-buttons .btn:hover {\r\n  background-color: #fbf5e5; \r\n  color: #2a231f; \r\n  transform: scale(1.05); \r\n}\r\n\r\n.search-buttons .btn:active {\r\n  transform: scale(0.95); \r\n}\r\n\r\n\r\n.cards-container {\r\n  display: grid; \r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); \r\n  gap: 20px;\r\n  justify-items: center; \r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}