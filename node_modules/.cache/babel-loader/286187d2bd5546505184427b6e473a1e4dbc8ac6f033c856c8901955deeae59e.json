{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b0463782\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"container user-profile\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"profile-info\"\n};\nconst _hoisted_3 = {\n  class: \"profile-name\"\n};\nconst _hoisted_4 = {\n  class: \"profile-email\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Ime:\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email:\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Nova lozinka:\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"form-actions\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"button1 save-btn\",\n  type: \"submit\"\n}, \"Spremi promjene\", -1 /* HOISTED */));\nconst _hoisted_13 = {\n  key: 1,\n  class: \"loading\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Loading user data...\", -1 /* HOISTED */));\nconst _hoisted_15 = [_hoisted_14];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.user ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h1\", _hoisted_3, _toDisplayString(_ctx.user.name), 1 /* TEXT */), _createElementVNode(\"h4\", _hoisted_4, \"Email: \" + _toDisplayString(_ctx.user.email), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"button1 edit-btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.enableEditing && $options.enableEditing(...args))\n  }, \"Izmijeni\")])) : (_openBlock(), _createElementBlock(\"form\", {\n    key: 1,\n    class: \"profile-form\",\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.updateUserData && $options.updateUserData(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.editedUser.name = $event),\n    type: \"text\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedUser.name]])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.editedUser.email = $event),\n    type: \"text\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedUser.email]])]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.editedUser.password = $event),\n    type: \"password\",\n    class: \"input-field\",\n    placeholder: \"Unesite novu lozinku (opcionalno)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedUser.password]])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"button\", {\n    class: \"button1 cancel-btn\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.disableEditing && $options.disableEditing(...args))\n  }, \" Odustani \")])], 32 /* NEED_HYDRATION */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [..._hoisted_15]));\n}","map":{"version":3,"names":["key","class","_createElementVNode","for","type","_hoisted_14","_ctx","user","_createElementBlock","_hoisted_1","$data","isEditing","_hoisted_2","_hoisted_3","_toDisplayString","name","_hoisted_4","email","onClick","_cache","args","$options","enableEditing","onSubmit","_withModifiers","updateUserData","_hoisted_5","_hoisted_6","id","$event","editedUser","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","password","placeholder","_hoisted_11","_hoisted_12","disableEditing","_hoisted_13","_hoisted_15"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\ProfilStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container user-profile\" v-if=\"user\">\r\n    <div class=\"profile-info\" v-if=\"!isEditing\">\r\n      <h1 class=\"profile-name\">{{ user.name }}</h1>\r\n      <h4 class=\"profile-email\">Email: {{ user.email }}</h4>\r\n      <button class=\"button1 edit-btn\" @click=\"enableEditing\">Izmijeni</button>\r\n    </div>\r\n    <form class=\"profile-form\" v-else @submit.prevent=\"updateUserData\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Ime:</label>\r\n        <input\r\n          id=\"name\"\r\n          v-model=\"editedUser.name\"\r\n          type=\"text\"\r\n          class=\"input-field\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email:</label>\r\n        <input\r\n          id=\"email\"\r\n          v-model=\"editedUser.email\"\r\n          type=\"text\"\r\n          class=\"input-field\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Nova lozinka:</label>\r\n        <input\r\n          id=\"password\"\r\n          v-model=\"editedUser.password\"\r\n          type=\"password\"\r\n          class=\"input-field\"\r\n          placeholder=\"Unesite novu lozinku (opcionalno)\"\r\n        />\r\n      </div>\r\n      <div class=\"form-actions\">\r\n        <button class=\"button1 save-btn\" type=\"submit\">Spremi promjene</button>\r\n        <button class=\"button1 cancel-btn\" @click=\"disableEditing\">\r\n          Odustani\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"loading\" v-else>\r\n    <p>Loading user data...</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"@/services/api\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapState([\"user\", \"isAuthenticated\"]),\r\n  },\r\n  data() {\r\n    return {\r\n      editedUser: {},\r\n      isEditing: false,\r\n    };\r\n  },\r\n  created() {\r\n    if (!this.user) {\r\n      console.log(\"Korisnik nije pronađen u Vuexu, dohvaćanje podataka...\");\r\n      this.fetchUserData();\r\n    } else {\r\n      console.log(\"Korisnik pronađen u Vuexu:\", this.user);\r\n      this.editedUser = { ...this.user };\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUserData() {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await api.get(\"/auth/korisnici\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        // Postavi podatke u Vuex\r\n        this.$store.commit(\"setUser\", response.data);\r\n\r\n        // Sinkroniziraj podatke s lokalnim stanjem\r\n        this.editedUser = { ...response.data };\r\n        console.log(\"Dohvaćeni korisnički podaci:\", response.data);\r\n      } catch (error) {\r\n        console.error(\"Greška pri dohvaćanju korisnika:\", error);\r\n        alert(\"Nije moguće dohvatiti podatke korisnika. Pokušajte ponovno.\");\r\n      }\r\n    },\r\n    async updateUserData() {\r\n      try {\r\n        // Provjeri je li korisnički ID definiran\r\n        if (!this.user || !this.user.id) {\r\n          console.error(\"Korisnički ID nije definiran!\");\r\n          alert(\"Greška: Korisnički ID nije definiran.\");\r\n          return;\r\n        }\r\n\r\n        console.log(\"Ažuriranje podataka za korisnički ID:\", this.user.id);\r\n\r\n        const updatedData = {\r\n          name: this.editedUser.name,\r\n          email: this.editedUser.email,\r\n        };\r\n\r\n        if (this.editedUser.password && this.editedUser.password.trim() !== \"\") {\r\n          updatedData.password = this.editedUser.password;\r\n        }\r\n\r\n        const response = await api.put(\r\n          `/auth/korisnici/${this.user.id}`,\r\n          updatedData,\r\n          {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n          }\r\n        );\r\n\r\n        // Ažuriraj Vuex stanje s podacima iz odgovora\r\n        this.$store.commit(\"setUser\", response.data);\r\n\r\n        // Ponovno ažuriraj lokalno stanje\r\n        this.editedUser = { ...response.data };\r\n\r\n        // Resetiraj uređene podatke\r\n        this.editedUser.password = \"\";\r\n        this.isEditing = false;\r\n\r\n        console.log(\"Podaci uspješno ažurirani.\");\r\n      } catch (error) {\r\n        console.error(\"Greška pri ažuriranju korisnika:\", error.response?.data || error.message);\r\n        alert(\"Došlo je do greške prilikom spremanja podataka. Provjerite unos.\");\r\n      }\r\n    },\r\n    enableEditing() {\r\n      this.editedUser = { ...this.user }; // Sinkroniziraj lokalno stanje\r\n      this.isEditing = true;\r\n    },\r\n    disableEditing() {\r\n      this.isEditing = false;\r\n      this.editedUser = { ...this.user }; // Resetiraj promjene\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-profile {\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #fee6c1;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.profile-info {\r\n  text-align: center;\r\n}\r\n\r\n.profile-name {\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n  color: #2a231f;\r\n}\r\n\r\n.profile-email {\r\n  font-size: 1.2em;\r\n  color: #4d4d4d;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.button1 {\r\n  width: auto;\r\n  padding: 10px 20px;\r\n  font-size: 1em;\r\n  font-weight: bold;\r\n  color: #fff;\r\n  background: #2a231f;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: 0.3s ease;\r\n}\r\n\r\n.button1:hover {\r\n  background: #fbf5e5;\r\n  color: #2a231f;\r\n}\r\n\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 1em;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #2a231f;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #d9534f;\r\n}\r\n\r\n.cancel-btn:hover {\r\n  background-color: #c9302c;\r\n  color: #fff;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  font-size: 1.5em;\r\n  color: #2a231f;\r\n}\r\n\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 1em;\r\n}\r\n\r\n.input-field#password {\r\n  background-color: #fff8e1; /* Lagana žuta boja za isticanje */\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}