{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"search-results\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Rezultati pretrage:\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"all-recipes\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Svi recepti:\", -1 /* HOISTED */);\nconst _hoisted_7 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Polje za pretragu \"), _createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"Pretraži recepte...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.onSearch && $options.onSearch(...args))\n  }, \"Pretraži\")]), _createCommentVNode(\" Rezultati pretrage \"), $data.searchResults.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.searchResults, recept => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: recept._id\n    }, [_createElementVNode(\"img\", {\n      src: recept.slika,\n      alt: \"Slika recepta\"\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"p\", null, _toDisplayString(recept.naziv), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : $data.searchQuery.trim() !== '' && !$data.searchResults.length ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Poruka ako nema rezultata \"), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"Nema rezultata pretrage za \\\"\" + _toDisplayString($data.searchQuery) + \"\\\".\", 1 /* TEXT */)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Prikaz svih recepata \"), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allRecipes, recept => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: recept._id\n    }, [_createElementVNode(\"img\", {\n      src: recept.slika,\n      alt: \"Slika recepta\"\n    }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"p\", null, _toDisplayString(recept.naziv), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_createCommentVNode","_hoisted_1","_cache","$event","$data","searchQuery","type","placeholder","onClick","args","$options","onSearch","searchResults","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","recept","_id","src","slika","alt","_hoisted_4","_toDisplayString","naziv","trim","_hoisted_5","_hoisted_6","allRecipes","_hoisted_7"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\PocetnaStranica.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Polje za pretragu -->\r\n    <div class=\"search-container\">\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Pretraži recepte...\"\r\n      />\r\n      <button @click=\"onSearch\">Pretraži</button>\r\n    </div>\r\n\r\n    <!-- Rezultati pretrage -->\r\n    <div v-if=\"searchResults.length\" class=\"search-results\">\r\n      <h2>Rezultati pretrage:</h2>\r\n      <ul>\r\n        <li v-for=\"recept in searchResults\" :key=\"recept._id\">\r\n          <img :src=\"recept.slika\" alt=\"Slika recepta\" />\r\n          <p>{{ recept.naziv }}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Poruka ako nema rezultata -->\r\n    <div v-else-if=\"searchQuery.trim() !== '' && !searchResults.length\">\r\n      <p>Nema rezultata pretrage za \"{{ searchQuery }}\".</p>\r\n    </div>\r\n\r\n    <!-- Prikaz svih recepata -->\r\n    <div class=\"all-recipes\">\r\n      <h2>Svi recepti:</h2>\r\n      <ul>\r\n        <li v-for=\"recept in allRecipes\" :key=\"recept._id\">\r\n          <img :src=\"recept.slika\" alt=\"Slika recepta\" />\r\n          <p>{{ recept.naziv }}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchQuery: '', // Unos korisnika\r\n      searchResults: [], // Rezultati pretrage\r\n      allRecipes: [], // Svi recepti iz baze\r\n    };\r\n  },\r\n  methods: {\r\n    // Dohvaćanje svih recepata iz baze\r\n    async fetchAllRecipes() {\r\n      try {\r\n        const response = await api.get('/api/recepti');\r\n        this.allRecipes = response.data;\r\n      } catch (error) {\r\n        console.error('Greška pri dohvaćanju recepata:', error);\r\n      }\r\n    },\r\n\r\n    // Funkcija za pretragu recepata\r\n    async onSearch() {\r\n      if (this.searchQuery.trim() === '') {\r\n        this.searchResults = [];\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await api.get('/api/recepti/pretraga', {\r\n          params: { naziv: this.searchQuery },\r\n        });\r\n        this.searchResults = response.data;\r\n      } catch (error) {\r\n        console.error('Greška pri pretrazi recepata:', error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // Dohvati sve recepte kada se komponenta montira\r\n    this.fetchAllRecipes();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.search-container {\r\n  margin: 20px 0;\r\n}\r\n\r\n.search-results,\r\n.all-recipes {\r\n  margin-top: 20px;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\nimg {\r\n  max-width: 100px;\r\n  height: auto;\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;EAGSA,KAAK,EAAC;AAAkB;;EAHjCC,GAAA;EAaqCD,KAAK,EAAC;;gCACrCE,mBAAA,CAA4B,YAAxB,qBAAmB;mBAd7B;;EA6BSF,KAAK,EAAC;AAAa;gCACtBE,mBAAA,CAAqB,YAAjB,cAAY;mBA9BtB;;uBACEC,mBAAA,CAqCM,cApCJC,mBAAA,uBAA0B,EAC1BF,mBAAA,CAOM,OAPNG,UAOM,G,gBANJH,mBAAA,CAIE;IARR,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKiBC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;iDAFHH,KAAA,CAAAC,WAAW,E,GAItBP,mBAAA,CAA2C;IAAlCU,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,UAAQ,E,GAGpCT,mBAAA,wBAA2B,EAChBI,KAAA,CAAAQ,aAAa,CAACC,MAAM,I,cAA/Bd,mBAAA,CAQM,OARNe,UAQM,GAPJC,UAA4B,EAC5BjB,mBAAA,CAKK,c,kBAJHC,mBAAA,CAGKiB,SAAA,QAnBbC,WAAA,CAgB6Bb,KAAA,CAAAQ,aAAa,EAAvBM,MAAM;yBAAjBnB,mBAAA,CAGK;MAHgCF,GAAG,EAAEqB,MAAM,CAACC;QAC/CrB,mBAAA,CAA+C;MAAzCsB,GAAG,EAAEF,MAAM,CAACG,KAAK;MAAEC,GAAG,EAAC;4BAjBvCC,UAAA,GAkBUzB,mBAAA,CAAyB,WAAA0B,gBAAA,CAAnBN,MAAM,CAACO,KAAK,iB;wCAMRrB,KAAA,CAAAC,WAAW,CAACqB,IAAI,cAActB,KAAA,CAAAQ,aAAa,CAACC,MAAM,I,cAAlEd,mBAAA,CAEMiB,SAAA;IA1BVnB,GAAA;EAAA,IAuBIG,mBAAA,+BAAkC,EAClCF,mBAAA,CAEM,cADJA,mBAAA,CAAsD,WAAnD,+BAA4B,GAAA0B,gBAAA,CAAGpB,KAAA,CAAAC,WAAW,IAAG,KAAE,gB,sDAzBxDL,mBAAA,gBA4BIA,mBAAA,0BAA6B,EAC7BF,mBAAA,CAQM,OARN6B,UAQM,GAPJC,UAAqB,EACrB9B,mBAAA,CAKK,c,kBAJHC,mBAAA,CAGKiB,SAAA,QAnCbC,WAAA,CAgC6Bb,KAAA,CAAAyB,UAAU,EAApBX,MAAM;yBAAjBnB,mBAAA,CAGK;MAH6BF,GAAG,EAAEqB,MAAM,CAACC;QAC5CrB,mBAAA,CAA+C;MAAzCsB,GAAG,EAAEF,MAAM,CAACG,KAAK;MAAEC,GAAG,EAAC;4BAjCvCQ,UAAA,GAkCUhC,mBAAA,CAAyB,WAAA0B,gBAAA,CAAnBN,MAAM,CAACO,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}