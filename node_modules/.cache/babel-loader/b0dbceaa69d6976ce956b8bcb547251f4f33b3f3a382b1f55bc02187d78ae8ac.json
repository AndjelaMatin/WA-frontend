{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Dodaj novi recept\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Sastojci\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Koraci pripreme\", -1 /* HOISTED */);\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Dodaj recept\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.addRecipe && $options.addRecipe(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    placeholder: \"Naslov\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.description = $event),\n    placeholder: \"Opis\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.description]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.image = $event),\n    placeholder: \"URL slike\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.image]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.servings = $event),\n    type: \"number\",\n    placeholder: \"Broj porcija\",\n    min: \"1\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.servings, void 0, {\n    number: true\n  }]]), _createElementVNode(\"div\", null, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.ingredients, (ingredient, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => $data.ingredients[index] = $event,\n      placeholder: \"Sastojak\",\n      required: \"\"\n    }, null, 8 /* PROPS */, _hoisted_3), [[_vModelText, $data.ingredients[index]]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeIngredient(index)\n    }, \"Ukloni\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.addIngredient && $options.addIngredient(...args))\n  }, \"Dodaj sastojak\")]), _createElementVNode(\"div\", null, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.steps, (step, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => $data.steps[index] = $event,\n      placeholder: \"Korak\",\n      required: \"\"\n    }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, $data.steps[index]]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeStep(index)\n    }, \"Ukloni\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.addStep && $options.addStep(...args))\n  }, \"Dodaj korak\")]), _hoisted_8], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","addRecipe","$event","$data","title","placeholder","required","description","image","servings","min","number","_hoisted_2","_Fragment","_renderList","ingredients","ingredient","index","key","_hoisted_3","onClick","removeIngredient","_hoisted_4","addIngredient","_hoisted_5","steps","step","_hoisted_6","removeStep","_hoisted_7","addStep","_hoisted_8"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\NoviRecept.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Dodaj novi recept</h2>\r\n    <form @submit.prevent=\"addRecipe\">\r\n      <input v-model=\"title\" placeholder=\"Naslov\" required />\r\n      <textarea v-model=\"description\" placeholder=\"Opis\" required></textarea>\r\n      <input v-model=\"image\" placeholder=\"URL slike\" />\r\n      <input v-model.number=\"servings\" type=\"number\" placeholder=\"Broj porcija\" min=\"1\" />\r\n      <div>\r\n        <h3>Sastojci</h3>\r\n        <div v-for=\"(ingredient, index) in ingredients\" :key=\"index\">\r\n          <input v-model=\"ingredients[index]\" placeholder=\"Sastojak\" required />\r\n          <button @click=\"removeIngredient(index)\">Ukloni</button>\r\n        </div>\r\n        <button @click=\"addIngredient\">Dodaj sastojak</button>\r\n      </div>\r\n      <div>\r\n        <h3>Koraci pripreme</h3>\r\n        <div v-for=\"(step, index) in steps\" :key=\"index\">\r\n          <textarea v-model=\"steps[index]\" placeholder=\"Korak\" required></textarea>\r\n          <button @click=\"removeStep(index)\">Ukloni</button>\r\n        </div>\r\n        <button @click=\"addStep\">Dodaj korak</button>\r\n      </div>\r\n      <button type=\"submit\">Dodaj recept</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: '',\r\n      description: '',\r\n      image: '',\r\n      servings: 1,\r\n      ingredients: [''],\r\n      steps: ['']\r\n    };\r\n  },\r\n  methods: {\r\n    addIngredient() {\r\n      this.ingredients.push('');\r\n    },\r\n    removeIngredient(index) {\r\n      this.ingredients.splice(index, 1);\r\n    },\r\n    addStep() {\r\n      this.steps.push('');\r\n    },\r\n    removeStep(index) {\r\n      this.steps.splice(index, 1);\r\n    },\r\n    async addRecipe() {\r\n      try {\r\n        const newRecipe = {\r\n          naziv: this.title,\r\n          sastojci: this.ingredients,\r\n          upute: this.description,\r\n          slika: this.image,\r\n          porcije: this.servings\r\n        };\r\n\r\n        console.log('Podaci koji se šalju:', newRecipe);\r\n\r\n        const response = await fetch('/api/recipes', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(newRecipe),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Greška: ${response.status} - ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Recept uspješno dodan:', data);\r\n\r\n        // Reset forme\r\n        this.title = '';\r\n        this.description = '';\r\n        this.image = '';\r\n        this.servings = 1;\r\n        this.ingredients = [''];\r\n        this.steps = [''];\r\n        alert('Recept uspješno dodan!');\r\n      } catch (error) {\r\n        console.error('Greška pri dodavanju recepta:', error);\r\n        alert('Došlo je do greške. Pokušajte ponovno.');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}