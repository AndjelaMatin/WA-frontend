{"ast":null,"code":"import api from '@/services/api';\nimport { mapState } from \"vuex\";\nexport default {\n  data() {\n    return {\n      recipe: null,\n      // Recept koji će se prikazati\n      showComments: false,\n      // Kontrola prikaza komentara\n      isFavorite: false // Praćenje stanja omiljenog recepta\n    };\n  },\n  computed: {\n    ...mapState([\"isAuthenticated\"]) // Dohvaćanje isAuthenticated iz Vuex store-a\n  },\n  async created() {\n    try {\n      const response = await api.get(`/recepti/${this.$route.params.id}`);\n      this.recipe = response.data;\n\n      // Provjera je li recept u omiljenima\n      await this.checkIfFavorite();\n    } catch (error) {\n      console.error(\"Greška pri dohvaćanju recepta:\", error);\n    }\n  },\n  methods: {\n    toggleComments() {\n      this.showComments = !this.showComments; // Prebacivanje prikaza komentara\n    },\n    async checkIfFavorite() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await api.get(`/recepti/omiljeni/${this.recipe._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Postavi stanje na osnovu odgovora API-ja\n        this.isFavorite = response.data.isFavorite;\n      } catch (error) {\n        console.error(\"Greška pri provjeri omiljenih recepata:\", error);\n        this.isFavorite = false; // Pretpostavi da nije u omiljenima u slučaju greške\n      }\n    },\n    async toggleFavorite() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (this.isFavorite) {\n          // Ukloni iz omiljenih\n          await api.delete(`/recepti/omiljeni/${this.recipe._id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.isFavorite = false; // Ažuriraj stanje\n        } else {\n          // Dodaj u omiljene\n          await api.post(`/recepti/omiljeni/${this.recipe._id}`, null, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.isFavorite = true; // Ažuriraj stanje\n        }\n      } catch (error) {\n        console.error(\"Greška pri upravljanju omiljenim receptima:\", error);\n        alert(\"Došlo je do greške. Pokušajte ponovno.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","mapState","data","recipe","showComments","isFavorite","computed","created","response","get","$route","params","id","checkIfFavorite","error","console","methods","toggleComments","token","localStorage","getItem","_id","headers","Authorization","toggleFavorite","delete","post","alert"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\ReceptStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"recept-stranica\">\r\n    <div v-if=\"recipe\" class=\"recept-container\">\r\n      <h1 class=\"recept-naziv\">{{ recipe.naziv }}</h1>\r\n      <img :src=\"recipe.slika\" alt=\"Slika recepta\" class=\"recept-slika\" />\r\n\r\n      <div class=\"recept-sastojci\">\r\n        <h2>Sastojci:</h2>\r\n        <ul>\r\n          <li v-for=\"sastojak in recipe.sastojci\" :key=\"sastojak\">{{ sastojak }}</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"recept-porcije\">\r\n        <p><strong>Broj porcija:</strong> {{ recipe.porcije }}</p>\r\n      </div>\r\n\r\n      <div class=\"recept-upute\">\r\n        <h2>Upute:</h2>\r\n        <p>{{ recipe.upute }}</p>\r\n      </div>\r\n\r\n      <div class=\"recept-interakcije\">\r\n  <p><strong>Broj sviđanja:</strong> {{ recipe.svidanja }}</p>\r\n  <button class=\"toggle-komentari\" @click=\"toggleComments\">\r\n    {{ showComments ? \"Sakrij komentare\" : \"Prikaži komentare\" }}\r\n  </button>\r\n  <!-- Gumb za omiljene prikazuje se samo ako je korisnik prijavljen -->\r\n  <button \r\n    v-if=\"isAuthenticated\"\r\n    class=\"favorite-btn\" \r\n    @click=\"toggleFavorite\">\r\n    {{ isFavorite ? \"Ukloni iz omiljenih\" : \"Dodaj u omiljene\" }}\r\n  </button>\r\n</div>\r\n\r\n\r\n      <div v-if=\"showComments\" class=\"recept-komentari\">\r\n        <ul>\r\n          <li v-for=\"komentar in recipe.komentari\" :key=\"komentar.tekst\">\r\n            {{ komentar.tekst }} - <strong>{{ komentar.korisnik }}</strong>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"recept-error\">\r\n      <p>Recept nije pronađen.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api';\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {data() {\r\n  return {\r\n    recipe: null, // Recept koji će se prikazati\r\n    showComments: false, // Kontrola prikaza komentara\r\n    isFavorite: false, // Praćenje stanja omiljenog recepta\r\n  };\r\n},\r\ncomputed: {\r\n    ...mapState([\"isAuthenticated\"]), // Dohvaćanje isAuthenticated iz Vuex store-a\r\n  },\r\nasync created() {\r\n  try {\r\n    const response = await api.get(`/recepti/${this.$route.params.id}`);\r\n    this.recipe = response.data;\r\n\r\n    // Provjera je li recept u omiljenima\r\n    await this.checkIfFavorite();\r\n  } catch (error) {\r\n    console.error(\"Greška pri dohvaćanju recepta:\", error);\r\n  }\r\n},\r\nmethods: {\r\n  toggleComments() {\r\n    this.showComments = !this.showComments; // Prebacivanje prikaza komentara\r\n  },\r\n  async checkIfFavorite() {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await api.get(`/recepti/omiljeni/${this.recipe._id}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n\r\n    // Postavi stanje na osnovu odgovora API-ja\r\n    this.isFavorite = response.data.isFavorite;\r\n  } catch (error) {\r\n    console.error(\"Greška pri provjeri omiljenih recepata:\", error);\r\n    this.isFavorite = false; // Pretpostavi da nije u omiljenima u slučaju greške\r\n  }\r\n},\r\nasync toggleFavorite() {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (this.isFavorite) {\r\n      // Ukloni iz omiljenih\r\n      await api.delete(`/recepti/omiljeni/${this.recipe._id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      this.isFavorite = false; // Ažuriraj stanje\r\n    } else {\r\n      // Dodaj u omiljene\r\n      await api.post(`/recepti/omiljeni/${this.recipe._id}`, null, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      this.isFavorite = true; // Ažuriraj stanje\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Greška pri upravljanju omiljenim receptima:\", error);\r\n    alert(\"Došlo je do greške. Pokušajte ponovno.\");\r\n  }\r\n},\r\n}\r\n};\r\n</script>\r\n<style scoped>\r\n.recept-stranica {\r\n  max-width: 700px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background: #fee6c1;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.recept-naziv {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n  color: #2a231f;\r\n}\r\n\r\n.recept-slika {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: 300px;\r\n  margin: 0 auto 20px;\r\n  border-radius: 10px;\r\n}\r\n\r\n.recept-sastojci {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.recept-sastojci h2 {\r\n  font-size: 18px;\r\n  color: #c97d60;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.recept-sastojci ul {\r\n  list-style-type: disc;\r\n  padding-left: 20px;\r\n}\r\n\r\n.recept-porcije {\r\n  font-size: 16px;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n}\r\n\r\n.recept-upute {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.recept-upute h2 {\r\n  font-size: 18px;\r\n  color: #c97d60;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.recept-interakcije {\r\n  text-align: center;\r\n  margin-top: 30px; \r\n  margin-bottom: 20px;\r\n}\r\n\r\n.recept-naziv {\r\n  font-size: 3rem; \r\n  color: #2a231f;\r\n  margin-bottom: 30px; \r\n  text-align: center;\r\n}\r\n\r\n.recept-interakcije p {\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.toggle-komentari {\r\n  padding: 10px 20px;\r\n  background: #2a231f;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.toggle-komentari:hover {\r\n  background: #fbf5e5;\r\n  color: #2a231f;\r\n}\r\n\r\n.recept-komentari ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.recept-komentari li {\r\n  padding: 10px;\r\n  background: #fbf5e5;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.recept-komentari li:hover {\r\n  background: #ffe9c6;\r\n}\r\n\r\n.recept-error {\r\n  text-align: center;\r\n  font-size: 18px;\r\n  color: #c94e50;\r\n}\r\n.favorite-btn {\r\n  margin-top: 10px;\r\n  padding: 10px 20px;\r\n  background: #2a231f;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.favorite-btn:hover {\r\n  background: #fbf5e5;\r\n  color: #2a231f;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAoDA,OAAOA,GAAE,MAAO,gBAAgB;AAChC,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EAACC,IAAIA,CAAA,EAAG;IACrB,OAAO;MACLC,MAAM,EAAE,IAAI;MAAE;MACdC,YAAY,EAAE,KAAK;MAAE;MACrBC,UAAU,EAAE,KAAK,CAAE;IACrB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGL,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAE;EACpC,CAAC;EACH,MAAMM,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMR,GAAG,CAACS,GAAG,CAAE,YAAW,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAG,EAAC,CAAC;MACnE,IAAI,CAACT,MAAK,GAAIK,QAAQ,CAACN,IAAI;;MAE3B;MACA,MAAM,IAAI,CAACW,eAAe,CAAC,CAAC;IAC9B,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACb,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY,EAAE;IAC1C,CAAC;IACD,MAAMS,eAAeA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMK,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMZ,QAAO,GAAI,MAAMR,GAAG,CAACS,GAAG,CAAE,qBAAoB,IAAI,CAACN,MAAM,CAACkB,GAAI,EAAC,EAAE;UACrEC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASL,KAAM;UAAE;QAC9C,CAAC,CAAC;;QAEF;QACA,IAAI,CAACb,UAAS,GAAIG,QAAQ,CAACN,IAAI,CAACG,UAAU;MAC5C,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QAC/D,IAAI,CAACT,UAAS,GAAI,KAAK,EAAE;MAC3B;IACF,CAAC;IACD,MAAMmB,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMN,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAE3C,IAAI,IAAI,CAACf,UAAU,EAAE;UACnB;UACA,MAAML,GAAG,CAACyB,MAAM,CAAE,qBAAoB,IAAI,CAACtB,MAAM,CAACkB,GAAI,EAAC,EAAE;YACvDC,OAAO,EAAE;cAAEC,aAAa,EAAG,UAASL,KAAM;YAAE;UAC9C,CAAC,CAAC;UACF,IAAI,CAACb,UAAS,GAAI,KAAK,EAAE;QAC3B,OAAO;UACL;UACA,MAAML,GAAG,CAAC0B,IAAI,CAAE,qBAAoB,IAAI,CAACvB,MAAM,CAACkB,GAAI,EAAC,EAAE,IAAI,EAAE;YAC3DC,OAAO,EAAE;cAAEC,aAAa,EAAG,UAASL,KAAM;YAAE;UAC9C,CAAC,CAAC;UACF,IAAI,CAACb,UAAS,GAAI,IAAI,EAAE;QAC1B;MACF,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;QACnEa,KAAK,CAAC,wCAAwC,CAAC;MACjD;IACF;EACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}