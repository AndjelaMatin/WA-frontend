{"ast":null,"code":"import api from \"@/services/api\";\nimport { mapState } from \"vuex\";\nexport default {\n  computed: {\n    ...mapState([\"user\", \"isAuthenticated\"])\n  },\n  data() {\n    return {\n      editedUser: {},\n      passwords: {\n        currentPassword: \"\",\n        newPassword: \"\"\n      },\n      isEditing: false,\n      error: null\n    };\n  },\n  created() {\n    this.initializeUser();\n  },\n  methods: {\n    initializeUser() {\n      if (!this.user) {\n        this.fetchUserData();\n      } else {\n        this.editedUser = {\n          ...this.user\n        };\n      }\n    },\n    async fetchUserData() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await api.get(\"/auth/korisnici\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.$store.commit(\"setUser\", response.data);\n        this.editedUser = {\n          ...response.data\n        };\n      } catch (error) {\n        this.error = \"Greška pri dohvaćanju podataka korisnika.\";\n        console.error(\"Greška pri dohvaćanju korisnika:\", error);\n      }\n    },\n    enableEditing() {\n      this.isEditing = true;\n      this.error = null;\n    },\n    disableEditing() {\n      this.isEditing = false;\n      this.passwords = {\n        currentPassword: \"\",\n        newPassword: \"\"\n      };\n      this.editedUser = {\n        ...this.user\n      };\n      this.error = null;\n    },\n    async updateUserData() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const updatePayload = {\n          name: this.editedUser.name !== this.user.name ? this.editedUser.name : undefined,\n          currentPassword: this.passwords.currentPassword || undefined,\n          newPassword: this.passwords.newPassword || undefined\n        };\n\n        // Filtriranje undefined vrijednosti\n        const payload = Object.fromEntries(Object.entries(updatePayload).filter(([_, v]) => v !== undefined));\n        await api.put(\"/auth/korisnici\", payload, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert(\"Podaci uspješno ažurirani.\");\n        await this.fetchUserData(); // Ponovno dohvat podataka\n        this.disableEditing();\n      } catch (error) {\n        this.error = \"Došlo je do greške pri ažuriranju podataka.\";\n        console.error(\"Greška pri ažuriranju podataka:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","mapState","computed","data","editedUser","passwords","currentPassword","newPassword","isEditing","error","created","initializeUser","methods","user","fetchUserData","token","localStorage","getItem","response","get","headers","Authorization","$store","commit","console","enableEditing","disableEditing","updateUserData","updatePayload","name","undefined","payload","Object","fromEntries","entries","filter","_","v","put","alert"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\ProfilStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <h2 class=\"form-title\">MOJ PROFIL</h2>\r\n    <div v-if=\"!isEditing\">\r\n      <h3 class=\"user-info\">Ime: {{ user?.name }}</h3>\r\n      <h4 class=\"user-info\">Email: {{ user?.email }}</h4>\r\n      <button class=\"edit-btn\" @click=\"enableEditing\">Izmijeni podatke</button>\r\n    </div>\r\n\r\n    <form v-else @submit.prevent=\"updateUserData\" class=\"profile-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Ime</label>\r\n        <input\r\n          id=\"name\"\r\n          v-model=\"editedUser.name\"\r\n          placeholder=\"Unesi ime\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"currentPassword\">Trenutna lozinka</label>\r\n        <input\r\n          id=\"currentPassword\"\r\n          v-model=\"passwords.currentPassword\"\r\n          type=\"password\"\r\n          placeholder=\"Unesi trenutnu lozinku\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"newPassword\">Nova lozinka</label>\r\n        <input\r\n          id=\"newPassword\"\r\n          v-model=\"passwords.newPassword\"\r\n          type=\"password\"\r\n          placeholder=\"Unesi novu lozinku\"\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"submit-btn\">Spremi promjene</button>\r\n      <button type=\"button\" class=\"cancel-btn\" @click=\"disableEditing\">\r\n        Odustani\r\n      </button>\r\n    </form>\r\n\r\n    <div v-if=\"error\" class=\"error-msg\">\r\n      <p>{{ error }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport api from \"@/services/api\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapState([\"user\", \"isAuthenticated\"]),\r\n  },\r\n  data() {\r\n    return {\r\n      editedUser: {},\r\n      passwords: { currentPassword: \"\", newPassword: \"\" },\r\n      isEditing: false,\r\n      error: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.initializeUser();\r\n  },\r\n  methods: {\r\n    initializeUser() {\r\n      if (!this.user) {\r\n        this.fetchUserData();\r\n      } else {\r\n        this.editedUser = { ...this.user };\r\n      }\r\n    },\r\n    async fetchUserData() {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await api.get(\"/auth/korisnici\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.$store.commit(\"setUser\", response.data);\r\n        this.editedUser = { ...response.data };\r\n      } catch (error) {\r\n        this.error = \"Greška pri dohvaćanju podataka korisnika.\";\r\n        console.error(\"Greška pri dohvaćanju korisnika:\", error);\r\n      }\r\n    },\r\n    enableEditing() {\r\n      this.isEditing = true;\r\n      this.error = null;\r\n    },\r\n    disableEditing() {\r\n      this.isEditing = false;\r\n      this.passwords = { currentPassword: \"\", newPassword: \"\" };\r\n      this.editedUser = { ...this.user };\r\n      this.error = null;\r\n    },\r\n    async updateUserData() {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const updatePayload = {\r\n          name:\r\n            this.editedUser.name !== this.user.name\r\n              ? this.editedUser.name\r\n              : undefined,\r\n          currentPassword: this.passwords.currentPassword || undefined,\r\n          newPassword: this.passwords.newPassword || undefined,\r\n        };\r\n\r\n        // Filtriranje undefined vrijednosti\r\n        const payload = Object.fromEntries(\r\n          Object.entries(updatePayload).filter(([_, v]) => v !== undefined)\r\n        );\r\n\r\n        await api.put(\"/auth/korisnici\", payload, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        alert(\"Podaci uspješno ažurirani.\");\r\n        await this.fetchUserData(); // Ponovno dohvat podataka\r\n        this.disableEditing();\r\n      } catch (error) {\r\n        this.error = \"Došlo je do greške pri ažuriranju podataka.\";\r\n        console.error(\"Greška pri ažuriranju podataka:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-container {\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n  padding: 30px;\r\n  background-color: #fbf5e5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-title {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: #2a231f;\r\n  background-color: #ffe9c6;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.user-info {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  color: #555;\r\n}\r\n\r\n.profile-form .form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.profile-form label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n  color: #555;\r\n}\r\n\r\n.profile-form input {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n}\r\n\r\n.edit-btn,\r\n.submit-btn,\r\n.cancel-btn {\r\n  background-color: #2a231f;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease, transform 0.3s ease;\r\n  margin-right: 10px;\r\n}\r\n\r\n.edit-btn:hover,\r\n.submit-btn:hover {\r\n  background-color: #fbf5e5;\r\n  color: #2a231f;\r\n  transform: scale(1.05);\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.cancel-btn:hover {\r\n  background-color: #a71d2a;\r\n}\r\n.error-msg {\r\n  margin-top: 20px;\r\n  color: #dc3545;\r\n  background-color: #f8d7da;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}