{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-300219e5\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-3\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Dobrodošli na našu slatku platformu!\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-4\"\n}, \"Najbolji recepti\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Card = _resolveComponent(\"Card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedCards, card => {\n    return _openBlock(), _createBlock(_component_Card, {\n      key: card.id,\n      card: card,\n      class: \"card-item\"\n    }, null, 8 /* PROPS */, [\"card\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","sortedCards","card","_createBlock","_component_Card","key","id"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\PocetnaStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <h1>Dobrodošli na našu slatku platformu!</h1>\r\n    <h1 class=\"mb-4\">Najbolji recepti</h1>\r\n    <div>\r\n      <Card\r\n        v-for=\"card in sortedCards\"\r\n        :key=\"card.id\"\r\n        :card=\"card\"\r\n        class=\"card-item\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Card from \"../components/CardComponent.vue\";\r\nimport api from '@/services/api';\r\n\r\nexport default {\r\n  components: {\r\n   Card,\r\n  },\r\n  data() {\r\n    return {\r\n      cards: [],\r\n    };\r\n  },\r\n  async created() {\r\n try {\r\n    // Povlačenje podataka s baze\r\n    const response = await api.get('/recepti');\r\n    // Uklanjanje duplikata prema 'id' svojstvu\r\n   const uniqueCards = response.data.filter((value, index, self) => \r\n      index === self.findIndex((t) => t.id === value.id)\r\n    );\r\n    this.cards = uniqueCards; \r\n  } catch (error) {\r\n    console.error('Greška pri povlačenju podataka:', error);\r\n  } \r\n},\r\n  computed: {\r\n    sortedCards() {\r\n      const sortedCards = this.cards.slice().sort((a, b) => b.likes - a.likes);\r\n      return sortedCards.slice(0, 10);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card-item {\r\n  width: 100%; /* Osigurava da kartica zauzima punu širinu unutar svoje kolone */\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAA6C,YAAzC,sCAAoC;gEACxCA,mBAAA,CAAsC;EAAlCD,KAAK,EAAC;AAAM,GAAC,kBAAgB;;;uBAFnCE,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAA6C,EAC7CC,UAAsC,EACtCJ,mBAAA,CAOM,e,kBANJC,mBAAA,CAKEI,SAAA,QAVRC,WAAA,CAMuBC,QAAA,CAAAC,WAAW,EAAnBC,IAAI;yBADbC,YAAA,CAKEC,eAAA;MAHCC,GAAG,EAAEH,IAAI,CAACI,EAAE;MACZJ,IAAI,EAAEA,IAAI;MACXV,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}