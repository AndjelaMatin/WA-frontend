{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"@/api\"; // Pretpostavljamo da postoji konfigurirani `axios` modul\n\nexport default {\n  data() {\n    return {\n      items: [],\n      // Stavke iz baze\n      newItem: \"\" // Nova stavka za unos\n    };\n  },\n  methods: {\n    // Dohvati sve stavke iz shopping liste\n    async fetchItems() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await api.get(\"/shoppingLista\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.items = response.data;\n      } catch (error) {\n        console.error(\"Greška prilikom dohvaćanja stavki:\", error);\n      }\n    },\n    // Dodaj novu stavku u shopping listu\n    async addItem() {\n      if (this.newItem.trim() !== \"\") {\n        const token = localStorage.getItem(\"token\");\n        const newItem = {\n          name: this.newItem.trim(),\n          completed: false\n        };\n        try {\n          const response = await api.post(\"/shoppingLista\", newItem, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.items.push(response.data); // Dodaj novu stavku u lokalnu listu\n          this.newItem = \"\"; // Resetiraj input polje\n        } catch (error) {\n          console.error(\"Greška prilikom dodavanja stavke:\", error);\n        }\n      }\n    },\n    // Ažuriraj status stavke\n    async updateItem(index) {\n      const token = localStorage.getItem(\"token\");\n      const item = this.items[index]; // Dohvati stavku prema indeksu\n\n      try {\n        await api.put(`/shoppingLista/${index}`, item, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      } catch (error) {\n        console.error(\"Greška prilikom ažuriranja stavke:\", error);\n      }\n    },\n    // Obriši označene stavke\n    async removeSelectedItems() {\n      const token = localStorage.getItem(\"token\");\n      const remainingItems = this.items.filter(item => !item.completed);\n      try {\n        await api.put(\"/shoppingLista\", {\n          items: remainingItems\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.items = remainingItems; // Ažuriraj lokalnu listu\n      } catch (error) {\n        console.error(\"Greška prilikom brisanja označenih stavki:\", error);\n      }\n    }\n  },\n  async created() {\n    // Dohvati stavke prilikom učitavanja komponente\n    await this.fetchItems();\n  }\n};","map":{"version":3,"names":["api","data","items","newItem","methods","fetchItems","token","localStorage","getItem","response","get","headers","Authorization","error","console","addItem","trim","name","completed","post","push","updateItem","index","item","put","removeSelectedItems","remainingItems","filter","created"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\MojiRecepti.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"title\">Lista namirnica za kupovinu:</h2>\r\n    <div class=\"button-container\">\r\n      <input v-model=\"newItem\" placeholder=\"Dodaj namirnicu...\" />\r\n      <button class=\"button\" @click=\"addItem\">Dodaj namirnicu</button>\r\n      <button class=\"button delete-button\" @click=\"removeSelectedItems\">\r\n        Obriši označene\r\n      </button>\r\n    </div>\r\n    <ul class=\"item-list\">\r\n      <li\r\n        v-for=\"(item, index) in items\"\r\n        :key=\"index\"\r\n        :class=\"{ completed: item.completed }\"\r\n      >\r\n        <div class=\"item-content\">\r\n          <input\r\n            type=\"checkbox\"\r\n            v-model=\"item.completed\"\r\n            @change=\"updateItem(index)\"\r\n          />\r\n          <span>{{ index + 1 }}. {{ item.name }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"@/api\"; // Pretpostavljamo da postoji konfigurirani `axios` modul\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      items: [], // Stavke iz baze\r\n      newItem: \"\", // Nova stavka za unos\r\n    };\r\n  },\r\n  methods: {\r\n    // Dohvati sve stavke iz shopping liste\r\n    async fetchItems() {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await api.get(\"/shoppingLista\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.items = response.data;\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom dohvaćanja stavki:\", error);\r\n      }\r\n    },\r\n\r\n    // Dodaj novu stavku u shopping listu\r\n    async addItem() {\r\n      if (this.newItem.trim() !== \"\") {\r\n        const token = localStorage.getItem(\"token\");\r\n        const newItem = { name: this.newItem.trim(), completed: false };\r\n\r\n        try {\r\n          const response = await api.post(\"/shoppingLista\", newItem, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          this.items.push(response.data); // Dodaj novu stavku u lokalnu listu\r\n          this.newItem = \"\"; // Resetiraj input polje\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom dodavanja stavke:\", error);\r\n        }\r\n      }\r\n    },\r\n\r\n    // Ažuriraj status stavke\r\n    async updateItem(index) {\r\n      const token = localStorage.getItem(\"token\");\r\n      const item = this.items[index]; // Dohvati stavku prema indeksu\r\n\r\n      try {\r\n        await api.put(`/shoppingLista/${index}`, item, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom ažuriranja stavke:\", error);\r\n      }\r\n    },\r\n\r\n    // Obriši označene stavke\r\n    async removeSelectedItems() {\r\n      const token = localStorage.getItem(\"token\");\r\n      const remainingItems = this.items.filter((item) => !item.completed);\r\n\r\n      try {\r\n        await api.put(\r\n          \"/shoppingLista\",\r\n          { items: remainingItems },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        this.items = remainingItems; // Ažuriraj lokalnu listu\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom brisanja označenih stavki:\", error);\r\n      }\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    // Dohvati stavke prilikom učitavanja komponente\r\n    await this.fetchItems();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #fbf5e5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.cards-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  justify-items: center;\r\n}\r\n\r\n.text-center {\r\n  font-size: 24px;\r\n  color: #2a231f;\r\n}\r\n\r\n.text-muted {\r\n  color: #888;\r\n  font-size: 18px;\r\n}\r\n</style>\r\n"],"mappings":";AA8BA,OAAOA,GAAE,MAAO,OAAO,EAAE;;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MAAE;MACXC,OAAO,EAAE,EAAE,CAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAO,GAAI,MAAMT,GAAG,CAACU,GAAG,CAAC,gBAAgB,EAAE;UAC/CC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASN,KAAM;UAAE;QAC9C,CAAC,CAAC;QACF,IAAI,CAACJ,KAAI,GAAIO,QAAQ,CAACR,IAAI;MAC5B,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF,CAAC;IAED;IACA,MAAME,OAAOA,CAAA,EAAG;MACd,IAAI,IAAI,CAACZ,OAAO,CAACa,IAAI,CAAC,MAAM,EAAE,EAAE;QAC9B,MAAMV,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAML,OAAM,GAAI;UAAEc,IAAI,EAAE,IAAI,CAACd,OAAO,CAACa,IAAI,CAAC,CAAC;UAAEE,SAAS,EAAE;QAAM,CAAC;QAE/D,IAAI;UACF,MAAMT,QAAO,GAAI,MAAMT,GAAG,CAACmB,IAAI,CAAC,gBAAgB,EAAEhB,OAAO,EAAE;YACzDQ,OAAO,EAAE;cAAEC,aAAa,EAAG,UAASN,KAAM;YAAE;UAC9C,CAAC,CAAC;UACF,IAAI,CAACJ,KAAK,CAACkB,IAAI,CAACX,QAAQ,CAACR,IAAI,CAAC,EAAE;UAChC,IAAI,CAACE,OAAM,GAAI,EAAE,EAAE;QACrB,EAAE,OAAOU,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QAC3D;MACF;IACF,CAAC;IAED;IACA,MAAMQ,UAAUA,CAACC,KAAK,EAAE;MACtB,MAAMhB,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMe,IAAG,GAAI,IAAI,CAACrB,KAAK,CAACoB,KAAK,CAAC,EAAE;;MAEhC,IAAI;QACF,MAAMtB,GAAG,CAACwB,GAAG,CAAE,kBAAiBF,KAAM,EAAC,EAAEC,IAAI,EAAE;UAC7CZ,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASN,KAAM;UAAE;QAC9C,CAAC,CAAC;MACJ,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF,CAAC;IAED;IACA,MAAMY,mBAAmBA,CAAA,EAAG;MAC1B,MAAMnB,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMkB,cAAa,GAAI,IAAI,CAACxB,KAAK,CAACyB,MAAM,CAAEJ,IAAI,IAAK,CAACA,IAAI,CAACL,SAAS,CAAC;MAEnE,IAAI;QACF,MAAMlB,GAAG,CAACwB,GAAG,CACX,gBAAgB,EAChB;UAAEtB,KAAK,EAAEwB;QAAe,CAAC,EACzB;UAAEf,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASN,KAAM;UAAE;QAAE,CAClD,CAAC;QAED,IAAI,CAACJ,KAAI,GAAIwB,cAAc,EAAE;MAC/B,EAAE,OAAOb,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF;EACF,CAAC;EAED,MAAMe,OAAOA,CAAA,EAAG;IACd;IACA,MAAM,IAAI,CAACvB,UAAU,CAAC,CAAC;EACzB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}