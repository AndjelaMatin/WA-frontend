{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"@/services/api\";\nexport default {\n  data() {\n    return {\n      items: [],\n      // Stavke iz baze\n      newItem: \"\" // Nova stavka za unos\n    };\n  },\n  methods: {\n    // Dohvati sve stavke iz shopping liste\n    async fetchItems() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        console.log(\"Token za zahtjev:\", token);\n        const response = await api.get(\"/api/shoppingLista\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Dobijeni podaci:\", response.data);\n        this.items = response.data;\n      } catch (error) {\n        console.error(\"Greška prilikom dohvaćanja stavki:\", error);\n      }\n    },\n    async addItem() {\n      if (this.newItem.trim() !== \"\") {\n        const token = localStorage.getItem(\"token\");\n        const newItem = {\n          name: this.newItem.trim(),\n          completed: false\n        };\n        try {\n          const response = await api.post(\"/shoppingLista\", newItem, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.items.push(response.data); // Dodaj novu stavku u lokalnu listu\n          this.newItem = \"\"; // Resetiraj input polje\n        } catch (error) {\n          console.error(\"Greška prilikom dodavanja stavke:\", error);\n        }\n      }\n    },\n    // Ažuriraj status stavke\n    async updateItem(id) {\n      const token = localStorage.getItem(\"token\");\n      const item = this.items[id]; // Dohvati stavku prema indeksu\n\n      try {\n        await api.put(`/shoppingLista/${id}`, {\n          completed: item.completed\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      } catch (error) {\n        console.error(\"Greška prilikom ažuriranja stavke:\", error);\n      }\n    },\n    // Obriši označene stavke\n    async removeSelectedItems() {\n      const token = localStorage.getItem(\"token\");\n      const remainingItems = this.items.filter(item => !item.completed);\n      try {\n        await api.put(\"/shoppingLista\", {\n          items: remainingItems\n        },\n        // Preostale stavke\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.items = remainingItems; // Ažuriraj lokalnu listu\n      } catch (error) {\n        console.error(\"Greška prilikom brisanja označenih stavki:\", error);\n      }\n    }\n  },\n  async created() {\n    // Dohvati stavke prilikom učitavanja komponente\n    await this.fetchItems();\n  }\n};","map":{"version":3,"names":["api","data","items","newItem","methods","fetchItems","token","localStorage","getItem","console","log","response","get","headers","Authorization","error","addItem","trim","name","completed","post","push","updateItem","id","item","put","removeSelectedItems","remainingItems","filter","created"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\ShoppingLista.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"title\">Lista namirnica za kupovinu:</h2>\r\n    <div class=\"button-container\">\r\n      <input v-model=\"newItem\" placeholder=\"Dodaj namirnicu...\" />\r\n      <button class=\"button\" @click=\"addItem\">Dodaj namirnicu</button>\r\n      <button class=\"button delete-button\" @click=\"removeSelectedItems\">\r\n        Obriši označene\r\n      </button>\r\n    </div>\r\n    <ul class=\"item-list\">\r\n      <li\r\n        v-for=\"(item, index) in items\"\r\n        :key=\"index\"\r\n        :class=\"{ completed: item.completed }\"\r\n      >\r\n        <div class=\"item-content\">\r\n          <input\r\n            type=\"checkbox\"\r\n            v-model=\"item.completed\"\r\n            @change=\"updateItem(index)\"\r\n          />\r\n          <span>{{ index + 1 }}. {{ item.name }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"@/services/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      items: [], // Stavke iz baze\r\n      newItem: \"\", // Nova stavka za unos\r\n    };\r\n  },\r\n  methods: {\r\n    // Dohvati sve stavke iz shopping liste\r\n    async fetchItems() {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(\"Token za zahtjev:\", token);\r\n\r\n    const response = await api.get(\"/api/shoppingLista\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n\r\n    console.log(\"Dobijeni podaci:\", response.data);\r\n    this.items = response.data;\r\n  } catch (error) {\r\n    console.error(\"Greška prilikom dohvaćanja stavki:\", error);\r\n  }\r\n},\r\nasync addItem() {\r\n  if (this.newItem.trim() !== \"\") {\r\n    const token = localStorage.getItem(\"token\");\r\n    const newItem = { name: this.newItem.trim(), completed: false };\r\n\r\n    try {\r\n      const response = await api.post(\"/shoppingLista\", newItem, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      this.items.push(response.data); // Dodaj novu stavku u lokalnu listu\r\n      this.newItem = \"\"; // Resetiraj input polje\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja stavke:\", error);\r\n    }\r\n  }\r\n},\r\n    // Ažuriraj status stavke\r\n    async updateItem(id) {\r\n  const token = localStorage.getItem(\"token\");\r\n  const item = this.items[id]; // Dohvati stavku prema indeksu\r\n\r\n  try {\r\n    await api.put(`/shoppingLista/${id}`, { completed: item.completed }, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Greška prilikom ažuriranja stavke:\", error);\r\n  }\r\n},\r\n\r\n    // Obriši označene stavke\r\n    async removeSelectedItems() {\r\n  const token = localStorage.getItem(\"token\");\r\n  const remainingItems = this.items.filter((item) => !item.completed);\r\n\r\n  try {\r\n    await api.put(\r\n      \"/shoppingLista\",\r\n      { items: remainingItems }, // Preostale stavke\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n\r\n    this.items = remainingItems; // Ažuriraj lokalnu listu\r\n  } catch (error) {\r\n    console.error(\"Greška prilikom brisanja označenih stavki:\", error);\r\n  }\r\n}\r\n},\r\n  async created() {\r\n    // Dohvati stavke prilikom učitavanja komponente\r\n    await this.fetchItems();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 700px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background: #fbf5e5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n  color: #2a231f;\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\ninput {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.button {\r\n  padding: 10px 20px;\r\n  background: #2a231f;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.button:hover {\r\n  background: #fbf5e5;\r\n  color: #2a231f;\r\n}\r\n\r\n.item-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin-top: 20px;\r\n}\r\n\r\n.item-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  background: #fee6c1;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.item-list li:hover {\r\n  background: #ffe9c6;\r\n}\r\n\r\n.item-list li.completed span {\r\n  text-decoration: line-through;\r\n  color: #888;\r\n}\r\n\r\n.item-content {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.item-content input[type=\"checkbox\"] {\r\n  margin-right: 10px;\r\n}\r\n\r\n.delete-button {\r\n  background: #dc3545;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.delete-button:hover {\r\n  background: #a71d2a;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}