{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-300219e5\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-3\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center mb-4\"\n}, \"Dobrodošli na našu slatku platformu!\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"search-container\"\n};\nconst _hoisted_4 = {\n  class: \"search-buttons\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"mb-4 text-center\"\n};\nconst _hoisted_6 = {\n  class: \"text-danger\"\n};\nconst _hoisted_7 = {\n  class: \"cards-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CardComponent = _resolveComponent(\"CardComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" Pretraživanje \"), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"Pretraži recepte...\",\n    class: \"form-control search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.onSearch && $options.onSearch(...args)),\n    type: \"button\",\n    class: \"btn btn-primary\"\n  }, \" Pretraži \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.resetSearch && $options.resetSearch(...args)),\n    type: \"button\",\n    class: \"btn btn-secondary\"\n  }, \" Resetiraj pretragu \")])]), _createCommentVNode(\" Poruka: Nema rezultata pretrage \"), $data.searchInitiated && $data.searchQuery.trim() !== '' && !$data.isSearching && $data.searchResults.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", _hoisted_6, \"Nema rezultata pretrage za \\\"\" + _toDisplayString($data.searchQuery) + \"\\\".\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Prikaz rezultata ili svih recepata \"), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.prikazaniRecepti, recept => {\n    return _openBlock(), _createBlock(_component_CardComponent, {\n      key: recept._id,\n      recept: recept,\n      onOpenRecipe: $options.openRecipe\n    }, null, 8 /* PROPS */, [\"recept\", \"onOpenRecipe\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_cache","$event","$data","searchQuery","type","placeholder","_hoisted_4","onClick","args","$options","onSearch","resetSearch","searchInitiated","trim","isSearching","searchResults","length","_hoisted_5","_hoisted_6","_toDisplayString","_hoisted_7","_Fragment","_renderList","prikazaniRecepti","recept","_createBlock","_component_CardComponent","_id","onOpenRecipe","openRecipe"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\PocetnaStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <h1 class=\"text-center mb-4\">Dobrodošli na našu slatku platformu!</h1>\r\n    <!-- Pretraživanje -->\r\n    <div class=\"search-container\">\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Pretraži recepte...\"\r\n        class=\"form-control search-input\"\r\n      />\r\n      <div class=\"search-buttons\">\r\n        <button @click=\"onSearch\" type=\"button\" class=\"btn btn-primary\">\r\n          Pretraži\r\n        </button>\r\n        <button @click=\"resetSearch\" type=\"button\" class=\"btn btn-secondary\">\r\n          Resetiraj pretragu\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Poruka: Nema rezultata pretrage -->\r\n    <div\r\n      v-if=\"searchInitiated && searchQuery.trim() !== '' && !isSearching && searchResults.length === 0\"\r\n      class=\"mb-4 text-center\"\r\n    >\r\n      <p class=\"text-danger\">Nema rezultata pretrage za \"{{ searchQuery }}\".</p>\r\n    </div>\r\n\r\n    <!-- Prikaz rezultata ili svih recepata -->\r\n    <div class=\"cards-container\">\r\n      <CardComponent\r\n        v-for=\"recept in prikazaniRecepti\"\r\n        :key=\"recept._id\"\r\n        :recept=\"recept\"\r\n        @open-recipe=\"openRecipe\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CardComponent from \"../components/CardComponent.vue\";\r\nimport api from \"@/services/api\";\r\n\r\nexport default {\r\n  components: {\r\n    CardComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      recepti: [], // Svi recepti dohvaćeni sa servera\r\n      searchResults: [], // Rezultati pretrage\r\n      searchQuery: \"\", // Upit za pretragu\r\n      isSearching: false, // Status pretrage\r\n      searchInitiated: false, // Indikator je li pretraga pokrenuta\r\n    };\r\n  },\r\n  computed: {\r\n    prikazaniRecepti() {\r\n      // Ako postoji pretraga i ima rezultata, prikaži pretragu, inače prikaži sve\r\n      return this.searchQuery.trim() !== \"\" && this.searchResults.length > 0\r\n        ? this.searchResults\r\n        : this.recepti;\r\n    },\r\n  },\r\n  async created() {\r\n    try {\r\n      const response = await api.get(\"/recepti\"); // Dohvaćanje recepata s API-a\r\n      this.recepti = response.data; // Pohranjivanje svih recepata\r\n    } catch (error) {\r\n      console.error(\"Greška pri dohvaćanju recepata:\", error);\r\n    }\r\n  },\r\n  methods: {\r\n    async onSearch() {\r\n      if (this.searchQuery.trim() === \"\") {\r\n        this.searchResults = [];\r\n        this.searchInitiated = true; // Postavi da je pretraga pokrenuta\r\n        return;\r\n      }\r\n\r\n      this.isSearching = true;\r\n      this.searchInitiated = true; // Postavi da je pretraga pokrenuta\r\n      try {\r\n        const response = await api.get(\"/recepti/pretraga\", {\r\n          params: { naziv: this.searchQuery },\r\n        });\r\n        this.searchResults = response.data;\r\n      } catch (error) {\r\n        console.error(\"Greška pri pretrazi recepata:\", error);\r\n        this.searchResults = [];\r\n      } finally {\r\n        this.isSearching = false;\r\n      }\r\n    },\r\n    resetSearch() {\r\n      this.searchQuery = \"\";\r\n      this.searchResults = [];\r\n      this.searchInitiated = false; // Resetiraj indikator pretrage\r\n    },\r\n    openRecipe(id) {\r\n      this.$router.push({ name: \"ReceptStranica\", params: { id } }); // Navigacija na pojedinačnu stranicu recepta\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Stilovi za pretraživanje */\r\n.search-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.search-input {\r\n  width: 50%; /* Širina unosa */\r\n  font-size: 1.25rem; /* Veći font */\r\n  padding: 15px; /* Više prostora unutar */\r\n  margin-bottom: 15px; /* Razmak ispod polja */\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.search-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.search-buttons .btn {\r\n  padding: 10px 20px;\r\n  font-size: 1rem;\r\n}\r\n\r\n/* Grid layout za kartice */\r\n.cards-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px; /* Razmak između kartica */\r\n  justify-items: center;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAsE;EAAlED,KAAK,EAAC;AAAkB,GAAC,sCAAoC;;EAE5DA,KAAK,EAAC;AAAkB;;EAOtBA,KAAK,EAAC;AAAgB;;EAXjCE,GAAA;EAwBMF,KAAK,EAAC;;;EAEHA,KAAK,EAAC;AAAa;;EAInBA,KAAK,EAAC;AAAiB;;;uBA7B9BG,mBAAA,CAqCM,OArCNC,UAqCM,GApCJC,UAAsE,EACtEC,mBAAA,mBAAsB,EACtBL,mBAAA,CAeM,OAfNM,UAeM,G,gBAdJN,mBAAA,CAKE;IAVR,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMiBC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,qBAAqB;IACjCb,KAAK,EAAC;iDAHGU,KAAA,CAAAC,WAAW,E,GAKtBV,mBAAA,CAOM,OAPNa,UAOM,GANJb,mBAAA,CAES;IAFAc,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;IAAEJ,IAAI,EAAC,QAAQ;IAACZ,KAAK,EAAC;KAAkB,YAEhE,GACAC,mBAAA,CAES;IAFAc,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAE,WAAA,IAAAF,QAAA,CAAAE,WAAA,IAAAH,IAAA,CAAW;IAAEJ,IAAI,EAAC,QAAQ;IAACZ,KAAK,EAAC;KAAoB,sBAErE,E,KAIJM,mBAAA,qCAAwC,EAEhCI,KAAA,CAAAU,eAAe,IAAIV,KAAA,CAAAC,WAAW,CAACU,IAAI,cAAcX,KAAA,CAAAY,WAAW,IAAIZ,KAAA,CAAAa,aAAa,CAACC,MAAM,U,cAD5FrB,mBAAA,CAKM,OALNsB,UAKM,GADJxB,mBAAA,CAA0E,KAA1EyB,UAA0E,EAAnD,+BAA4B,GAAAC,gBAAA,CAAGjB,KAAA,CAAAC,WAAW,IAAG,KAAE,gB,KA1B5EL,mBAAA,gBA6BIA,mBAAA,wCAA2C,EAC3CL,mBAAA,CAOM,OAPN2B,UAOM,I,kBANJzB,mBAAA,CAKE0B,SAAA,QApCRC,WAAA,CAgCyBb,QAAA,CAAAc,gBAAgB,EAA1BC,MAAM;yBADfC,YAAA,CAKEC,wBAAA;MAHChC,GAAG,EAAE8B,MAAM,CAACG,GAAG;MACfH,MAAM,EAAEA,MAAM;MACdI,YAAW,EAAEnB,QAAA,CAAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}