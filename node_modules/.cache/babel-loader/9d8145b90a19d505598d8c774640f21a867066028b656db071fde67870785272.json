{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CardComponent from \"../components/CardComponent.vue\";\nimport api from \"@/services/api\";\nexport default {\n  components: {\n    CardComponent\n  },\n  data() {\n    return {\n      recepti: [],\n      searchResults: [],\n      searchQuery: \"\",\n      isSearching: false,\n      searchInitiated: false,\n      lajkaniRecepti: [],\n      korisnikId: localStorage.getItem(\"korisnikId\") || null\n    };\n  },\n  computed: {\n    prikazaniRecepti() {\n      return this.searchQuery.trim() !== \"\" && this.searchResults.length > 0 ? this.searchResults : this.recepti;\n    }\n  },\n  methods: {\n    async fetchRecepti() {\n      try {\n        const response = await api.get('/recepti');\n        this.recepti = response.data;\n      } catch (error) {\n        console.error('Greška pri dohvaćanju recepata:', error);\n      }\n    },\n    async handleLike(receptId) {\n      if (!receptId) {\n        console.error(\"Recept ID nije definisan.\");\n        return;\n      }\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Molimo prijavite se kako biste mogli lajkovati recepte.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n      try {\n        const recept = this.recepti.find(r => r._id === receptId);\n        if (!recept) {\n          console.error(\"Recept nije pronađen u lokalnoj listi.\");\n          return;\n        }\n        if (this.lajkaniRecepti.includes(receptId)) {\n          await api.delete(\"/korisnici/lajk\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            params: {\n              receptId\n            }\n          });\n          this.lajkaniRecepti = this.lajkaniRecepti.filter(id => id !== receptId);\n          recept.svidanja--;\n        } else {\n          await api.post(\"/korisnici/lajk\", {\n            receptId\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.lajkaniRecepti.push(receptId);\n          recept.svidanja++;\n        }\n      } catch (error) {\n        console.error(\"Greška pri upravljanju lajkovima:\", error);\n        alert(\"Došlo je do greške prilikom lajkanja/uklanjanja lajka.\");\n      }\n    },\n    async handleComment(receptId, tekstKomentara) {\n      if (!receptId) {\n        console.error(\"Recept ID nije definisan.\");\n        return;\n      }\n      if (!tekstKomentara || tekstKomentara.trim() === \"\") {\n        alert(\"Komentar ne može biti prazan.\");\n        return;\n      }\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Molimo prijavite se kako biste mogli komentirati recepte.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n      try {\n        const recept = this.recepti.find(r => r._id === receptId);\n        if (!recept) {\n          console.error(\"Recept nije pronađen u lokalnoj listi.\");\n          return;\n        }\n        const response = await api.post(`/recepti/${receptId}/komentari`, {\n          tekst: tekstKomentara\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        recept.komentari.push(response.data); // Dodavanje novog komentara lokalno\n        console.log(\"Komentar dodat:\", response.data);\n      } catch (error) {\n        console.error(\"Greška pri dodavanju komentara:\", error);\n        alert(\"Došlo je do greške prilikom dodavanja komentara.\");\n      }\n    },\n    async onSearch() {\n      if (this.searchQuery.trim() === \"\") {\n        this.searchResults = [];\n        this.searchInitiated = true;\n        return;\n      }\n      this.isSearching = true;\n      this.searchInitiated = true;\n      try {\n        const response = await api.get(\"/recepti/pretraga\", {\n          params: {\n            naziv: this.searchQuery\n          }\n        });\n        this.searchResults = response.data;\n      } catch (error) {\n        console.error(\"Greška pri pretrazi recepata:\", error);\n        this.searchResults = [];\n      } finally {\n        this.isSearching = false;\n      }\n    },\n    resetSearch() {\n      this.searchQuery = \"\";\n      this.searchResults = [];\n      this.searchInitiated = false;\n    },\n    async fetchLajkaniRecepti() {\n      const token = localStorage.getItem(\"token\");\n      if (!token) return;\n      try {\n        const response = await api.get(\"/korisnici/lajkani\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.lajkaniRecepti = response.data;\n        console.log(\"Lajkani recepti:\", this.lajkaniRecepti);\n      } catch (error) {\n        console.error(\"Greška pri dohvaćanju lajkanih recepata:\", error);\n      }\n    },\n    openRecipe(id) {\n      if (!id) {\n        console.error(\"Recept ID nije definiran.\");\n        return;\n      }\n      this.$router.push({\n        name: \"receptStranica\",\n        params: {\n          id\n        }\n      });\n    }\n  },\n  mounted() {\n    this.fetchRecepti();\n    this.fetchLajkaniRecepti();\n    this.fetchkomentiraniRecepti();\n  }\n};","map":{"version":3,"names":["CardComponent","api","components","data","recepti","searchResults","searchQuery","isSearching","searchInitiated","lajkaniRecepti","korisnikId","localStorage","getItem","computed","prikazaniRecepti","trim","length","methods","fetchRecepti","response","get","error","console","handleLike","receptId","token","alert","$router","push","recept","find","r","_id","includes","delete","headers","Authorization","params","filter","id","svidanja","post","handleComment","tekstKomentara","tekst","komentari","log","onSearch","naziv","resetSearch","fetchLajkaniRecepti","openRecipe","name","mounted","fetchkomentiraniRecepti"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\PocetnaStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <h1 class=\"text-center mb-4\">Dobrodošli na našu slatku platformu!</h1>\r\n    <div class=\"search-container\">\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Pretraži recepte...\"\r\n        class=\"form-control search-input\"\r\n      />\r\n      <div class=\"search-buttons\">\r\n        <button @click=\"onSearch\" type=\"button\" class=\"btn btn-primary\">\r\n          Pretraži\r\n        </button>\r\n        <button @click=\"resetSearch\" type=\"button\" class=\"btn btn-secondary\">\r\n          Resetiraj pretragu\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div\r\n      v-if=\"searchInitiated && searchQuery.trim() !== '' && !isSearching && searchResults.length === 0\"\r\n      class=\"mb-4 text-center\"\r\n    >\r\n      <p class=\"text-danger\">Nema rezultata pretrage za \"{{ searchQuery }}\".</p>\r\n    </div>\r\n    <div class=\"cards-container\">\r\n      <CardComponent\r\n        v-for=\"recept in prikazaniRecepti\"\r\n        :key=\"recept._id\"\r\n        :recept=\"recept\"\r\n        :liked=\"lajkaniRecepti.includes(recept._id)\"\r\n        :commented=\"recept.komentari.some((komentar) => komentar.korisnik === korisnikId)\" \r\n        @toggle-like=\"handleLike\"\r\n        @open-recipe=\"openRecipe\"\r\n         @add-comment=\"handleComment\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CardComponent from \"../components/CardComponent.vue\";\r\nimport api from \"@/services/api\";\r\n\r\nexport default {\r\n  components: {\r\n    CardComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      recepti: [],\r\n      searchResults: [], \r\n      searchQuery: \"\",\r\n      isSearching: false, \r\n      searchInitiated: false, \r\n      lajkaniRecepti: [],\r\n      korisnikId: localStorage.getItem(\"korisnikId\") || null,\r\n    };\r\n  },\r\n  computed: {\r\n    prikazaniRecepti() {\r\n      return this.searchQuery.trim() !== \"\" && this.searchResults.length > 0\r\n        ? this.searchResults\r\n        : this.recepti;\r\n    },\r\n  },\r\n  methods: {\r\n  async fetchRecepti() {\r\n    try {\r\n      const response = await api.get('/recepti');\r\n      this.recepti = response.data;\r\n    } catch (error) {\r\n      console.error('Greška pri dohvaćanju recepata:', error);\r\n    }\r\n  },\r\n  async handleLike(receptId) {\r\n  if (!receptId) {\r\n    console.error(\"Recept ID nije definisan.\");\r\n    return;\r\n  }\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    alert(\"Molimo prijavite se kako biste mogli lajkovati recepte.\");\r\n    this.$router.push(\"/login\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const recept = this.recepti.find((r) => r._id === receptId);\r\n    if (!recept) {\r\n      console.error(\"Recept nije pronađen u lokalnoj listi.\");\r\n      return;\r\n    }\r\n\r\n    if (this.lajkaniRecepti.includes(receptId)) {\r\n      await api.delete(\"/korisnici/lajk\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        params: { receptId },\r\n      });\r\n      this.lajkaniRecepti = this.lajkaniRecepti.filter((id) => id !== receptId);\r\n      recept.svidanja--; \r\n    } else {\r\n      await api.post(\"/korisnici/lajk\", { receptId }, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      this.lajkaniRecepti.push(receptId);\r\n      recept.svidanja++;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Greška pri upravljanju lajkovima:\", error);\r\n    alert(\"Došlo je do greške prilikom lajkanja/uklanjanja lajka.\");\r\n  }\r\n},async handleComment(receptId, tekstKomentara) {\r\n  if (!receptId) {\r\n    console.error(\"Recept ID nije definisan.\");\r\n    return;\r\n  }\r\n\r\n  if (!tekstKomentara || tekstKomentara.trim() === \"\") {\r\n    alert(\"Komentar ne može biti prazan.\");\r\n    return;\r\n  }\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    alert(\"Molimo prijavite se kako biste mogli komentirati recepte.\");\r\n    this.$router.push(\"/login\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const recept = this.recepti.find((r) => r._id === receptId);\r\n    if (!recept) {\r\n      console.error(\"Recept nije pronađen u lokalnoj listi.\");\r\n      return;\r\n    }\r\n\r\n    const response = await api.post(`/recepti/${receptId}/komentari`, \r\n      { tekst: tekstKomentara },\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n\r\n    recept.komentari.push(response.data); // Dodavanje novog komentara lokalno\r\n    console.log(\"Komentar dodat:\", response.data);\r\n  } catch (error) {\r\n    console.error(\"Greška pri dodavanju komentara:\", error);\r\n    alert(\"Došlo je do greške prilikom dodavanja komentara.\");\r\n  }\r\n},\r\n  async onSearch() {\r\n    if (this.searchQuery.trim() === \"\") {\r\n      this.searchResults = [];\r\n      this.searchInitiated = true; \r\n      return;\r\n    }\r\n\r\n    this.isSearching = true;\r\n    this.searchInitiated = true; \r\n    try {\r\n      const response = await api.get(\"/recepti/pretraga\", {\r\n        params: { naziv: this.searchQuery },\r\n      });\r\n      this.searchResults = response.data;\r\n    } catch (error) {\r\n      console.error(\"Greška pri pretrazi recepata:\", error);\r\n      this.searchResults = [];\r\n    } finally {\r\n      this.isSearching = false; \r\n    }\r\n  },\r\n  resetSearch() {\r\n    this.searchQuery = \"\";\r\n    this.searchResults = [];\r\n    this.searchInitiated = false; \r\n  },\r\n  async fetchLajkaniRecepti() {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) return; \r\n\r\n  try {\r\n    const response = await api.get(\"/korisnici/lajkani\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    this.lajkaniRecepti = response.data; \r\n    console.log(\"Lajkani recepti:\", this.lajkaniRecepti);\r\n  } catch (error) {\r\n    console.error(\"Greška pri dohvaćanju lajkanih recepata:\", error);\r\n  }\r\n},\r\n  openRecipe(id) {\r\n    if (!id) {\r\n      console.error(\"Recept ID nije definiran.\");\r\n      return;\r\n    }\r\n    this.$router.push({ name: \"receptStranica\", params: { id } });\r\n  },\r\n},\r\n  mounted() {\r\n    this.fetchRecepti();\r\n    this.fetchLajkaniRecepti();\r\n    this.fetchkomentiraniRecepti();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.search-container {\r\n  display: flex; \r\n  align-items: center;\r\n  justify-content: center; \r\n  gap: 10px; \r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.search-input {\r\n  flex: 1; \r\n  max-width: 500px; \r\n  font-size: 1.25rem; \r\n  padding: 15px; \r\n  border: 1px solid #ccc;\r\n  border-radius: 8px; \r\n}\r\n\r\n.search-buttons {\r\n  display: flex; \r\n  gap: 10px; \r\n}\r\n\r\n.search-buttons .btn {\r\n  padding: 10px 20px;\r\n  background-color: #2a231f; \r\n  color: #fff; \r\n  border: none;\r\n  border-radius: 5px; \r\n  font-size: 1rem; \r\n  font-weight: bold; \r\n  cursor: pointer; \r\n  transition: background 0.3s ease, transform 0.3s ease; \r\n}\r\n\r\n.search-buttons .btn:hover {\r\n  background-color: #fbf5e5; \r\n  color: #2a231f; \r\n  transform: scale(1.05); \r\n}\r\n\r\n.search-buttons .btn:active {\r\n  transform: scale(0.95); \r\n}\r\n\r\n\r\n.cards-container {\r\n  display: grid; \r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); \r\n  gap: 20px;\r\n  justify-items: center; \r\n}\r\n</style>\r\n"],"mappings":";AAyCA,OAAOA,aAAY,MAAO,iCAAiC;AAC3D,OAAOC,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,KAAK;MAClBC,eAAe,EAAE,KAAK;MACtBC,cAAc,EAAE,EAAE;MAClBC,UAAU,EAAEC,YAAY,CAACC,OAAO,CAAC,YAAY,KAAK;IACpD,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACR,WAAW,CAACS,IAAI,CAAC,MAAM,EAAC,IAAK,IAAI,CAACV,aAAa,CAACW,MAAK,GAAI,IACjE,IAAI,CAACX,aAAY,GACjB,IAAI,CAACD,OAAO;IAClB;EACF,CAAC;EACDa,OAAO,EAAE;IACT,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMlB,GAAG,CAACmB,GAAG,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAChB,OAAM,GAAIe,QAAQ,CAAChB,IAAI;MAC9B,EAAE,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IACD,MAAME,UAAUA,CAACC,QAAQ,EAAE;MAC3B,IAAI,CAACA,QAAQ,EAAE;QACbF,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAC;QAC1C;MACF;MAEA,MAAMI,KAAI,GAAId,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACa,KAAK,EAAE;QACVC,KAAK,CAAC,yDAAyD,CAAC;QAChE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC3B;MACF;MAEA,IAAI;QACF,MAAMC,MAAK,GAAI,IAAI,CAACzB,OAAO,CAAC0B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAE,KAAMR,QAAQ,CAAC;QAC3D,IAAI,CAACK,MAAM,EAAE;UACXP,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAC;UACvD;QACF;QAEA,IAAI,IAAI,CAACZ,cAAc,CAACwB,QAAQ,CAACT,QAAQ,CAAC,EAAE;UAC1C,MAAMvB,GAAG,CAACiC,MAAM,CAAC,iBAAiB,EAAE;YAClCC,OAAO,EAAE;cAAEC,aAAa,EAAG,UAASX,KAAM;YAAE,CAAC;YAC7CY,MAAM,EAAE;cAAEb;YAAS;UACrB,CAAC,CAAC;UACF,IAAI,CAACf,cAAa,GAAI,IAAI,CAACA,cAAc,CAAC6B,MAAM,CAAEC,EAAE,IAAKA,EAAC,KAAMf,QAAQ,CAAC;UACzEK,MAAM,CAACW,QAAQ,EAAE;QACnB,OAAO;UACL,MAAMvC,GAAG,CAACwC,IAAI,CAAC,iBAAiB,EAAE;YAAEjB;UAAS,CAAC,EAAE;YAC9CW,OAAO,EAAE;cAAEC,aAAa,EAAG,UAASX,KAAM;YAAE;UAC9C,CAAC,CAAC;UACF,IAAI,CAAChB,cAAc,CAACmB,IAAI,CAACJ,QAAQ,CAAC;UAClCK,MAAM,CAACW,QAAQ,EAAE;QACnB;MACF,EAAE,OAAOnB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDK,KAAK,CAAC,wDAAwD,CAAC;MACjE;IACF,CAAC;IAAC,MAAMgB,aAAaA,CAAClB,QAAQ,EAAEmB,cAAc,EAAE;MAC9C,IAAI,CAACnB,QAAQ,EAAE;QACbF,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAC;QAC1C;MACF;MAEA,IAAI,CAACsB,cAAa,IAAKA,cAAc,CAAC5B,IAAI,CAAC,MAAM,EAAE,EAAE;QACnDW,KAAK,CAAC,+BAA+B,CAAC;QACtC;MACF;MAEA,MAAMD,KAAI,GAAId,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACa,KAAK,EAAE;QACVC,KAAK,CAAC,2DAA2D,CAAC;QAClE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC3B;MACF;MAEA,IAAI;QACF,MAAMC,MAAK,GAAI,IAAI,CAACzB,OAAO,CAAC0B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAE,KAAMR,QAAQ,CAAC;QAC3D,IAAI,CAACK,MAAM,EAAE;UACXP,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAC;UACvD;QACF;QAEA,MAAMF,QAAO,GAAI,MAAMlB,GAAG,CAACwC,IAAI,CAAE,YAAWjB,QAAS,YAAW,EAC9D;UAAEoB,KAAK,EAAED;QAAe,CAAC,EACzB;UAAER,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASX,KAAM;UAAE;QAAE,CAClD,CAAC;QAEDI,MAAM,CAACgB,SAAS,CAACjB,IAAI,CAACT,QAAQ,CAAChB,IAAI,CAAC,EAAE;QACtCmB,OAAO,CAACwB,GAAG,CAAC,iBAAiB,EAAE3B,QAAQ,CAAChB,IAAI,CAAC;MAC/C,EAAE,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDK,KAAK,CAAC,kDAAkD,CAAC;MAC3D;IACF,CAAC;IACC,MAAMqB,QAAQA,CAAA,EAAG;MACf,IAAI,IAAI,CAACzC,WAAW,CAACS,IAAI,CAAC,MAAM,EAAE,EAAE;QAClC,IAAI,CAACV,aAAY,GAAI,EAAE;QACvB,IAAI,CAACG,eAAc,GAAI,IAAI;QAC3B;MACF;MAEA,IAAI,CAACD,WAAU,GAAI,IAAI;MACvB,IAAI,CAACC,eAAc,GAAI,IAAI;MAC3B,IAAI;QACF,MAAMW,QAAO,GAAI,MAAMlB,GAAG,CAACmB,GAAG,CAAC,mBAAmB,EAAE;UAClDiB,MAAM,EAAE;YAAEW,KAAK,EAAE,IAAI,CAAC1C;UAAY;QACpC,CAAC,CAAC;QACF,IAAI,CAACD,aAAY,GAAIc,QAAQ,CAAChB,IAAI;MACpC,EAAE,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAAChB,aAAY,GAAI,EAAE;MACzB,UAAU;QACR,IAAI,CAACE,WAAU,GAAI,KAAK;MAC1B;IACF,CAAC;IACD0C,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC3C,WAAU,GAAI,EAAE;MACrB,IAAI,CAACD,aAAY,GAAI,EAAE;MACvB,IAAI,CAACG,eAAc,GAAI,KAAK;IAC9B,CAAC;IACD,MAAM0C,mBAAmBA,CAAA,EAAG;MAC5B,MAAMzB,KAAI,GAAId,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACa,KAAK,EAAE;MAEZ,IAAI;QACF,MAAMN,QAAO,GAAI,MAAMlB,GAAG,CAACmB,GAAG,CAAC,oBAAoB,EAAE;UACnDe,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASX,KAAM;UAAE;QAC9C,CAAC,CAAC;QACF,IAAI,CAAChB,cAAa,GAAIU,QAAQ,CAAChB,IAAI;QACnCmB,OAAO,CAACwB,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACrC,cAAc,CAAC;MACtD,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;IACF,CAAC;IACC8B,UAAUA,CAACZ,EAAE,EAAE;MACb,IAAI,CAACA,EAAE,EAAE;QACPjB,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAC;QAC1C;MACF;MACA,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC;QAAEwB,IAAI,EAAE,gBAAgB;QAAEf,MAAM,EAAE;UAAEE;QAAG;MAAE,CAAC,CAAC;IAC/D;EACF,CAAC;EACCc,OAAOA,CAAA,EAAG;IACR,IAAI,CAACnC,YAAY,CAAC,CAAC;IACnB,IAAI,CAACgC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACI,uBAAuB,CAAC,CAAC;EAChC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}