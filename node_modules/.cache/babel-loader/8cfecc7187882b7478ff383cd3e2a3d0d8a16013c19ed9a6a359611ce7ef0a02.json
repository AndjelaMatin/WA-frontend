{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      items: [],\n      // Popunjeno iz baze\n      newItem: \"\"\n    };\n  },\n  methods: {\n    // Dohvati sve stavke iz baze\n    async fetchItems() {\n      try {\n        const response = await fetch(\"/api/shoppingLista\");\n        const data = await response.json();\n        this.items = data;\n      } catch (error) {\n        console.error(\"Greška prilikom dohvaćanja stavki:\", error);\n      }\n    },\n    // Dodaj novu stavku u bazu\n    async addItem() {\n      if (this.newItem.trim() !== \"\") {\n        const newItem = {\n          name: this.newItem.trim(),\n          completed: false\n        };\n        try {\n          const response = await fetch(\"/api/shoppingLista\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newItem)\n          });\n          const savedItem = await response.json();\n          this.items.push(savedItem);\n          this.newItem = \"\";\n        } catch (error) {\n          console.error(\"Greška prilikom dodavanja stavke:\", error);\n        }\n      }\n    },\n    // Ažuriraj stavku u bazi\n    async updateItem(item) {\n      try {\n        await fetch(`/api/shoppingLista/${item._id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(item)\n        });\n      } catch (error) {\n        console.error(\"Greška prilikom ažuriranja stavke:\", error);\n      }\n    },\n    // Ukloni stavku iz baze\n    async removeItem(item) {\n      try {\n        await fetch(`/api/shoppingLista/${item._id}`, {\n          method: \"DELETE\"\n        });\n        this.items = this.items.filter(i => i._id !== item._id);\n      } catch (error) {\n        console.error(\"Greška prilikom brisanja stavke:\", error);\n      }\n    },\n    // Potvrdi i ukloni sve stavke iz baze\n    async confirmRemoveAll() {\n      if (confirm(\"Da li ste sigurni da želite da obrišete sve namirnice?\")) {\n        try {\n          await fetch(\"/api/shoppingLista\", {\n            method: \"DELETE\"\n          });\n          this.items = [];\n        } catch (error) {\n          console.error(\"Greška prilikom brisanja svih stavki:\", error);\n        }\n      }\n    }\n  },\n  mounted() {\n    this.fetchItems();\n  }\n};","map":{"version":3,"names":["data","items","newItem","methods","fetchItems","response","fetch","json","error","console","addItem","trim","name","completed","method","headers","body","JSON","stringify","savedItem","push","updateItem","item","_id","removeItem","filter","i","confirmRemoveAll","confirm","mounted"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\ShoppingLista.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"title\">Lista namirnica za kupovinu:</h2>\r\n    <ul class=\"item-list\">\r\n      <li\r\n        v-for=\"(item, index) in items\"\r\n        :key=\"item._id || index\"\r\n        :class=\"{ completed: item.completed }\"\r\n      >\r\n        <input type=\"checkbox\" v-model=\"item.completed\" @change=\"updateItem(item)\" />\r\n        <span>{{ index + 1 }}. {{ item.name }}</span>\r\n        <button class=\"delete-button\" @click=\"removeItem(item)\">Obriši</button>\r\n      </li>\r\n    </ul>\r\n    <div class=\"button-container\">\r\n      <input v-model=\"newItem\" placeholder=\"Dodaj namirnicu...\" />\r\n      <button class=\"button\" @click=\"addItem\">Dodaj namirnicu</button>\r\n      <button class=\"button\" @click=\"confirmRemoveAll\">Obriši sve namirnice</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      items: [], // Popunjeno iz baze\r\n      newItem: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    // Dohvati sve stavke iz baze\r\n    async fetchItems() {\r\n      try {\r\n        const response = await fetch(\"/api/shoppingLista\");\r\n        const data = await response.json();\r\n        this.items = data;\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom dohvaćanja stavki:\", error);\r\n      }\r\n    },\r\n    // Dodaj novu stavku u bazu\r\n    async addItem() {\r\n      if (this.newItem.trim() !== \"\") {\r\n        const newItem = { name: this.newItem.trim(), completed: false };\r\n        try {\r\n          const response = await fetch(\"/api/shoppingLista\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newItem),\r\n          });\r\n          const savedItem = await response.json();\r\n          this.items.push(savedItem);\r\n          this.newItem = \"\";\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom dodavanja stavke:\", error);\r\n        }\r\n      }\r\n    },\r\n    // Ažuriraj stavku u bazi\r\n    async updateItem(item) {\r\n      try {\r\n        await fetch(`/api/shoppingLista/${item._id}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(item),\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom ažuriranja stavke:\", error);\r\n      }\r\n    },\r\n    // Ukloni stavku iz baze\r\n    async removeItem(item) {\r\n      try {\r\n        await fetch(`/api/shoppingLista/${item._id}`, {\r\n          method: \"DELETE\",\r\n        });\r\n        this.items = this.items.filter((i) => i._id !== item._id);\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom brisanja stavke:\", error);\r\n      }\r\n    },\r\n    // Potvrdi i ukloni sve stavke iz baze\r\n    async confirmRemoveAll() {\r\n      if (confirm(\"Da li ste sigurni da želite da obrišete sve namirnice?\")) {\r\n        try {\r\n          await fetch(\"/api/shoppingLista\", {\r\n            method: \"DELETE\",\r\n          });\r\n          this.items = [];\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja svih stavki:\", error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchItems();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.button-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 15px; /* Razmak između elemenata */\r\n}\r\n\r\ninput {\r\n  flex: 1; /* Proširi input da zauzme sav dostupan prostor */\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.button {\r\n  padding: 10px 20px;\r\n  background: #2a231f;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.button:hover {\r\n  background: #fbf5e5;\r\n  color: #2a231f;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}