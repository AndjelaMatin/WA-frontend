{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      items: [],\n      // Popunjeno iz baze\n      newItem: \"\" // Nova stavka za unos\n    };\n  },\n  methods: {\n    // Dohvati sve stavke iz shopping liste\n    async fetchItems() {\n      try {\n        const response = await fetch(\"/api/shoppingLista\");\n        const data = await response.json();\n        this.items = data;\n      } catch (error) {\n        console.error(\"Greška prilikom dohvaćanja stavki:\", error);\n      }\n    },\n    // Dodaj novu stavku u shopping listu\n    async addItem() {\n      if (this.newItem.trim() !== \"\") {\n        const newItem = {\n          name: this.newItem.trim(),\n          completed: false\n        };\n        try {\n          const response = await fetch(\"/api/shoppingLista\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newItem)\n          });\n          if (!response.ok) {\n            throw new Error(\"Greška prilikom dodavanja stavke.\");\n          }\n          this.items.push(newItem); // Dodaj novu stavku u lokalnu listu\n          this.newItem = \"\"; // Resetiraj input polje\n        } catch (error) {\n          console.error(\"Greška prilikom dodavanja stavke:\", error);\n        }\n      }\n    },\n    // Obriši označene stavke\n    async removeSelectedItems() {\n      try {\n        const completedItems = this.items.filter(item => item.completed); // eslint-disable-line no-unused-vars\n        const remainingItems = this.items.filter(item => !item.completed);\n\n        // Ažuriraj bazu s preostalim stavkama\n        const response = await fetch(\"/api/shoppingLista\", {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            items: remainingItems\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Greška prilikom brisanja označenih stavki.\");\n        }\n\n        // Ažuriraj lokalnu listu\n        this.items = remainingItems;\n      } catch (error) {\n        console.error(\"Greška prilikom brisanja označenih stavki:\", error);\n      }\n    },\n    async updateItem(index) {\n      const item = this.items[index]; // Dohvati stavku prema indeksu\n      try {\n        const response = await fetch(`/api/shoppingLista/${index}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(item) // Pošalji ažurirani objekt stavke\n        });\n        if (!response.ok) {\n          throw new Error(\"Greška prilikom ažuriranja stavke.\");\n        }\n      } catch (error) {\n        console.error(\"Greška prilikom ažuriranja stavke:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchItems(); // Dohvati stavke iz baze pri učitavanju\n  }\n};","map":{"version":3,"names":["data","items","newItem","methods","fetchItems","response","fetch","json","error","console","addItem","trim","name","completed","method","headers","body","JSON","stringify","ok","Error","push","removeSelectedItems","completedItems","filter","item","remainingItems","updateItem","index","mounted"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\ShoppingLista.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"title\">Lista namirnica za kupovinu:</h2>\r\n    <div class=\"button-container\">\r\n      <input v-model=\"newItem\" placeholder=\"Dodaj namirnicu...\" />\r\n      <button class=\"button\" @click=\"addItem\">Dodaj namirnicu</button>\r\n      <button class=\"button delete-button\" @click=\"removeSelectedItems\">\r\n        Obriši označene\r\n      </button>\r\n    </div>\r\n    <ul class=\"item-list\">\r\n      <li\r\n        v-for=\"(item, index) in items\"\r\n        :key=\"index\"\r\n        :class=\"{ completed: item.completed }\"\r\n      >\r\n        <div class=\"item-content\">\r\n          <input\r\n  type=\"checkbox\"\r\n  v-model=\"item.completed\"\r\n  @change=\"updateItem(index)\" />\r\n\r\n          <span>{{ index + 1 }}. {{ item.name }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      items: [], // Popunjeno iz baze\r\n      newItem: \"\", // Nova stavka za unos\r\n    };\r\n  },\r\n  methods: {\r\n    // Dohvati sve stavke iz shopping liste\r\n    async fetchItems() {\r\n      try {\r\n        const response = await fetch(\"/api/shoppingLista\");\r\n        const data = await response.json();\r\n        this.items = data;\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom dohvaćanja stavki:\", error);\r\n      }\r\n    },\r\n    // Dodaj novu stavku u shopping listu\r\n    async addItem() {\r\n      if (this.newItem.trim() !== \"\") {\r\n        const newItem = { name: this.newItem.trim(), completed: false };\r\n        try {\r\n          const response = await fetch(\"/api/shoppingLista\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newItem),\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error(\"Greška prilikom dodavanja stavke.\");\r\n          }\r\n\r\n          this.items.push(newItem); // Dodaj novu stavku u lokalnu listu\r\n          this.newItem = \"\"; // Resetiraj input polje\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom dodavanja stavke:\", error);\r\n        }\r\n      }\r\n    },\r\n    // Obriši označene stavke\r\n    async removeSelectedItems() {\r\n      try {\r\n        const completedItems = this.items.filter((item) => item.completed); // eslint-disable-line no-unused-vars\r\n        const remainingItems = this.items.filter((item) => !item.completed);\r\n\r\n        // Ažuriraj bazu s preostalim stavkama\r\n        const response = await fetch(\"/api/shoppingLista\", {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ items: remainingItems }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Greška prilikom brisanja označenih stavki.\");\r\n        }\r\n\r\n        // Ažuriraj lokalnu listu\r\n        this.items = remainingItems;\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom brisanja označenih stavki:\", error);\r\n      }\r\n    },\r\n    async updateItem(index) {\r\n  const item = this.items[index]; // Dohvati stavku prema indeksu\r\n  try {\r\n    const response = await fetch(`/api/shoppingLista/${index}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(item), // Pošalji ažurirani objekt stavke\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Greška prilikom ažuriranja stavke.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Greška prilikom ažuriranja stavke:\", error);\r\n  }\r\n},\r\n  },\r\n  mounted() {\r\n    this.fetchItems(); // Dohvati stavke iz baze pri učitavanju\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.container {\r\n  max-width: 700px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background: #fbf5e5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n  color: #2a231f;\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\ninput {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.button {\r\n  padding: 10px 20px;\r\n  background: #2a231f;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.button:hover {\r\n  background: #fbf5e5;\r\n  color: #2a231f;\r\n}\r\n\r\n.item-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin-top: 20px;\r\n}\r\n\r\n.item-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  background: #fee6c1;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.item-list li:hover {\r\n  background: #ffe9c6;\r\n}\r\n\r\n.item-list li.completed span {\r\n  text-decoration: line-through;\r\n  color: #888;\r\n}\r\n\r\n.item-content {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.item-content input[type=\"checkbox\"] {\r\n  margin-right: 10px;\r\n}\r\n\r\n.delete-button {\r\n  background: #dc3545;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.delete-button:hover {\r\n  background: #a71d2a;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}