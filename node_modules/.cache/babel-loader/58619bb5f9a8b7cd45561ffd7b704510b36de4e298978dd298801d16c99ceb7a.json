{"ast":null,"code":"import Card from \"../components/CardComponent.vue\";\nexport default {\n  components: {\n    Card\n  },\n  data() {\n    return {\n      cards: [],\n      searchResults: [],\n      isSearching: false // Status pretrage\n    };\n  },\n  async created() {\n    try {\n      const response = await fetch('/recepti');\n      if (!response.ok) {\n        throw new Error(`Greška: ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('Učitani recepti:', data);\n      if (Array.isArray(data)) {\n        this.cards = data;\n      } else {\n        console.error('Dobijen nevalidan odgovor od servera:', data);\n      }\n    } catch (error) {\n      console.error('Greška pri povlačenju podataka:', error);\n    }\n    window.addEventListener(\"search-results\", this.updateSearchResults);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"search-results\", this.updateSearchResults);\n  },\n  computed: {\n    sortedCards() {\n      const sortedCards = this.cards.slice().sort((a, b) => b.likes - a.likes);\n      return sortedCards;\n    }\n  },\n  methods: {\n    updateSearchResults(event) {\n      const results = event.detail;\n      if (results && results.length > 0) {\n        this.isSearching = true;\n        console.log('Rezultati pretrage:', results);\n        // Filtriranje rezultata da se izbjegne duplikacija\n        this.searchResults = results.filter((result, index, self) => index === self.findIndex(t => t.id === result.id));\n      } else {\n        this.resetSearch();\n      }\n    },\n    resetSearch() {\n      console.log('Reset pretrage, prikazuju se svi recepti.');\n      this.isSearching = false;\n      this.searchResults = [];\n    }\n  }\n};","map":{"version":3,"names":["Card","components","data","cards","searchResults","isSearching","created","response","fetch","ok","Error","statusText","json","console","log","Array","isArray","error","window","addEventListener","updateSearchResults","beforeUnmount","removeEventListener","computed","sortedCards","slice","sort","a","b","likes","methods","event","results","detail","length","filter","result","index","self","findIndex","t","id","resetSearch"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\PocetnaStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <h1>Dobrodošli na našu slatku platformu!</h1>\r\n    <h1 class=\"mb-4\">Najbolji recepti</h1>\r\n\r\n    <div v-if=\"isSearching && searchResults.length > 0\">\r\n      <h2>Rezultati pretrage</h2>\r\n      <div>\r\n        <Card\r\n          v-for=\"card in searchResults\"\r\n          :key=\"card.id\"\r\n          :card=\"card\"\r\n          class=\"card-item\"\r\n        />\r\n      </div>\r\n      <hr />\r\n    </div>\r\n\r\n    <div v-else>\r\n      <h2 v-if=\"!isSearching\">Svi recepti</h2>\r\n      <p v-if=\"cards.length === 0\">Nema dostupnih recepata.</p>\r\n      <Card\r\n        v-for=\"card in sortedCards\"\r\n        :key=\"card.id\"\r\n        :card=\"card\"\r\n        class=\"card-item\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Card from \"../components/CardComponent.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    Card,\r\n  },\r\n  data() {\r\n    return {\r\n      cards: [],\r\n      searchResults: [],\r\n      isSearching: false, // Status pretrage\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const response = await fetch('/recepti');\r\n      if (!response.ok) {\r\n        throw new Error(`Greška: ${response.statusText}`);\r\n      }\r\n      const data = await response.json();\r\n      console.log('Učitani recepti:', data);\r\n      if (Array.isArray(data)) {\r\n        this.cards = data;\r\n      } else {\r\n        console.error('Dobijen nevalidan odgovor od servera:', data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Greška pri povlačenju podataka:', error);\r\n    }\r\n\r\n    window.addEventListener(\"search-results\", this.updateSearchResults);\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener(\"search-results\", this.updateSearchResults);\r\n  },\r\n  computed: {\r\n    sortedCards() {\r\n      const sortedCards = this.cards.slice().sort((a, b) => b.likes - a.likes);\r\n      return sortedCards;\r\n    },\r\n  },\r\n  methods: {\r\n    updateSearchResults(event) {\r\n      const results = event.detail;\r\n      if (results && results.length > 0) {\r\n        this.isSearching = true;\r\n        console.log('Rezultati pretrage:', results);\r\n        // Filtriranje rezultata da se izbjegne duplikacija\r\n        this.searchResults = results.filter(\r\n          (result, index, self) =>\r\n            index === self.findIndex((t) => t.id === result.id)\r\n        );\r\n      } else {\r\n        this.resetSearch();\r\n      }\r\n    },\r\n    resetSearch() {\r\n      console.log('Reset pretrage, prikazuju se svi recepti.');\r\n      this.isSearching = false;\r\n      this.searchResults = [];\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card-item {\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":"AAgCA,OAAOA,IAAG,MAAO,iCAAiC;AAElD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE,KAAK,CAAE;IACtB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,UAAU,CAAC;MACxC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,WAAUH,QAAQ,CAACI,UAAW,EAAC,CAAC;MACnD;MACA,MAAMT,IAAG,GAAI,MAAMK,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEZ,IAAI,CAAC;MACrC,IAAIa,KAAK,CAACC,OAAO,CAACd,IAAI,CAAC,EAAE;QACvB,IAAI,CAACC,KAAI,GAAID,IAAI;MACnB,OAAO;QACLW,OAAO,CAACI,KAAK,CAAC,uCAAuC,EAAEf,IAAI,CAAC;MAC9D;IACF,EAAE,OAAOe,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;IAEAC,MAAM,CAACC,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAACC,mBAAmB,CAAC;EACrE,CAAC;EACDC,aAAaA,CAAA,EAAG;IACdH,MAAM,CAACI,mBAAmB,CAAC,gBAAgB,EAAE,IAAI,CAACF,mBAAmB,CAAC;EACxE,CAAC;EACDG,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,MAAMA,WAAU,GAAI,IAAI,CAACrB,KAAK,CAACsB,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAI,GAAIF,CAAC,CAACE,KAAK,CAAC;MACxE,OAAOL,WAAW;IACpB;EACF,CAAC;EACDM,OAAO,EAAE;IACPV,mBAAmBA,CAACW,KAAK,EAAE;MACzB,MAAMC,OAAM,GAAID,KAAK,CAACE,MAAM;MAC5B,IAAID,OAAM,IAAKA,OAAO,CAACE,MAAK,GAAI,CAAC,EAAE;QACjC,IAAI,CAAC7B,WAAU,GAAI,IAAI;QACvBQ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEkB,OAAO,CAAC;QAC3C;QACA,IAAI,CAAC5B,aAAY,GAAI4B,OAAO,CAACG,MAAM,CACjC,CAACC,MAAM,EAAEC,KAAK,EAAEC,IAAI,KAClBD,KAAI,KAAMC,IAAI,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAC,KAAML,MAAM,CAACK,EAAE,CACtD,CAAC;MACH,OAAO;QACL,IAAI,CAACC,WAAW,CAAC,CAAC;MACpB;IACF,CAAC;IACDA,WAAWA,CAAA,EAAG;MACZ7B,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MACxD,IAAI,CAACT,WAAU,GAAI,KAAK;MACxB,IAAI,CAACD,aAAY,GAAI,EAAE;IACzB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}