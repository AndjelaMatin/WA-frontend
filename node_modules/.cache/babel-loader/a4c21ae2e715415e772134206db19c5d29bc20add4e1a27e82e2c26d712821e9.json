{"ast":null,"code":"import Card from \"../components/CardComponent.vue\";\nimport api from '@/services/api';\nexport default {\n  components: {\n    Card\n  },\n  data() {\n    return {\n      cards: [],\n      // Svi recepti iz baze\n      searchResults: [],\n      // Rezultati pretrage\n      searchQuery: '' // Tekst unesen u polje za pretragu\n    };\n  },\n  async created() {\n    try {\n      // Povlačenje podataka s baze\n      const response = await api.get(`/recepti/${_id}`);\n      // Uklanjanje duplikata prema 'id' svojstvu\n      const uniqueCards = response.data.filter((value, index, self) => index === self.findIndex(t => t.id === value.id));\n      this.cards = uniqueCards;\n    } catch (error) {\n      console.error('Greška pri povlačenju podataka:', error);\n    }\n  },\n  computed: {\n    // Najbolji recepti sortirani po broju lajkova\n    sortedCards() {\n      const sortedCards = this.cards.slice().sort((a, b) => b.likes - a.likes);\n      return sortedCards.slice(0, 10);\n    }\n  },\n  methods: {\n    // Funkcija za pretragu recepata\n    async onSearch() {\n      if (this.searchQuery.trim() === '') {\n        this.searchResults = [];\n        return;\n      }\n      try {\n        const response = await api.get('/recepti/pretraga', {\n          params: {\n            naziv: this.searchQuery\n          }\n        });\n        this.searchResults = response.data;\n      } catch (error) {\n        console.error('Greška pri pretrazi recepata:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Card","api","components","data","cards","searchResults","searchQuery","created","response","get","_id","uniqueCards","filter","value","index","self","findIndex","t","id","error","console","computed","sortedCards","slice","sort","a","b","likes","methods","onSearch","trim","params","naziv"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\PocetnaStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <h1>Dobrodošli na našu slatku platformu!</h1>\r\n    <div class=\"search-container mb-4\">\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Pretraži recepte...\"\r\n        class=\"form-control d-inline-block w-75\"\r\n      />\r\n      <button @click=\"onSearch\" class=\"btn btn-primary ml-2\">Pretraži</button>\r\n    </div>\r\n    <div v-if=\"searchResults.length\" class=\"search-results mb-4\">\r\n      <h2>Rezultati pretrage:</h2>\r\n      <div>\r\n        <Card\r\n          v-for=\"card in searchResults\"\r\n          :key=\"card.id\"\r\n          :card=\"card\"\r\n          class=\"card-item\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div v-else-if=\"searchQuery.trim() !== '' && !searchResults.length\" class=\"mb-4\">\r\n      <p>Nema rezultata pretrage za \"{{ searchQuery }}\".</p>\r\n    </div>\r\n\r\n    <h1 class=\"mb-4\">Najbolji recepti</h1>\r\n    <div>\r\n      <Card\r\n        v-for=\"card in sortedCards\"\r\n        :key=\"card.id\"\r\n        :card=\"card\"\r\n        class=\"card-item\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Card from \"../components/CardComponent.vue\";\r\nimport api from '@/services/api';\r\n\r\nexport default {\r\n  components: {\r\n    Card,\r\n  },\r\n  data() {\r\n    return {\r\n      cards: [], // Svi recepti iz baze\r\n      searchResults: [], // Rezultati pretrage\r\n      searchQuery: '', // Tekst unesen u polje za pretragu\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // Povlačenje podataka s baze\r\n      const response = await api.get(`/recepti/${_id}`);\r\n      // Uklanjanje duplikata prema 'id' svojstvu\r\n      const uniqueCards = response.data.filter((value, index, self) => \r\n        index === self.findIndex((t) => t.id === value.id)\r\n      );\r\n      this.cards = uniqueCards;\r\n    } catch (error) {\r\n      console.error('Greška pri povlačenju podataka:', error);\r\n    }\r\n  },\r\n  computed: {\r\n    // Najbolji recepti sortirani po broju lajkova\r\n    sortedCards() {\r\n      const sortedCards = this.cards.slice().sort((a, b) => b.likes - a.likes);\r\n      return sortedCards.slice(0, 10);\r\n    },\r\n  },\r\n  methods: {\r\n    // Funkcija za pretragu recepata\r\n    async onSearch() {\r\n      if (this.searchQuery.trim() === '') {\r\n        this.searchResults = [];\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await api.get('/recepti/pretraga', {\r\n          params: { naziv: this.searchQuery },\r\n        });\r\n        this.searchResults = response.data;\r\n      } catch (error) {\r\n        console.error('Greška pri pretrazi recepata:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card-item {\r\n  width: 100%; /* Osigurava da kartica zauzima punu širinu unutar svoje kolone */\r\n}\r\n\r\n.search-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.search-results {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAwCA,OAAOA,IAAG,MAAO,iCAAiC;AAClD,OAAOC,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MAAE;MACXC,aAAa,EAAE,EAAE;MAAE;MACnBC,WAAW,EAAE,EAAE,CAAE;IACnB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF;MACA,MAAMC,QAAO,GAAI,MAAMP,GAAG,CAACQ,GAAG,CAAE,YAAWC,GAAI,EAAC,CAAC;MACjD;MACA,MAAMC,WAAU,GAAIH,QAAQ,CAACL,IAAI,CAACS,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,KAC1DD,KAAI,KAAMC,IAAI,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAC,KAAML,KAAK,CAACK,EAAE,CACnD,CAAC;MACD,IAAI,CAACd,KAAI,GAAIO,WAAW;IAC1B,EAAE,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EACDE,QAAQ,EAAE;IACR;IACAC,WAAWA,CAAA,EAAG;MACZ,MAAMA,WAAU,GAAI,IAAI,CAAClB,KAAK,CAACmB,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAI,GAAIF,CAAC,CAACE,KAAK,CAAC;MACxE,OAAOL,WAAW,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACjC;EACF,CAAC;EACDK,OAAO,EAAE;IACP;IACA,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,IAAI,CAACvB,WAAW,CAACwB,IAAI,CAAC,MAAM,EAAE,EAAE;QAClC,IAAI,CAACzB,aAAY,GAAI,EAAE;QACvB;MACF;MAEA,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMP,GAAG,CAACQ,GAAG,CAAC,mBAAmB,EAAE;UAClDsB,MAAM,EAAE;YAAEC,KAAK,EAAE,IAAI,CAAC1B;UAAY;QACpC,CAAC,CAAC;QACF,IAAI,CAACD,aAAY,GAAIG,QAAQ,CAACL,IAAI;MACpC,EAAE,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}