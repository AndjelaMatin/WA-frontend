{"ast":null,"code":"import api from \"@/services/api\"; // Dodaj API servis\n\nexport default {\n  data() {\n    return {\n      user: {},\n      // Prazan objekt za korisnika\n      editedUser: {},\n      // Kopija korisničkih podataka za uređivanje\n      isEditing: false\n    };\n  },\n  async created() {\n    try {\n      // Dohvati podatke o korisniku iz baze\n      const response = await api.get(\"/korisnici\");\n      this.user = response.data;\n      this.editedUser = {\n        ...response.data\n      };\n    } catch (error) {\n      console.error(\"Greška pri dohvaćanju korisnika:\", error);\n    }\n  },\n  methods: {\n    enableEditing() {\n      this.isEditing = true;\n    },\n    disableEditing() {\n      this.isEditing = false;\n    },\n    async updateUserData() {\n      try {\n        // Ažuriranje korisničkih podataka putem API-ja\n        const response = await api.put(`/korisnici/${this.user.id}`, this.editedUser);\n        this.user = response.data; // Ažuriraj lokalne podatke s odgovorom API-ja\n        this.isEditing = false;\n      } catch (error) {\n        console.error(\"Greška pri ažuriranju korisnika:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","data","user","editedUser","isEditing","created","response","get","error","console","methods","enableEditing","disableEditing","updateUserData","put","id"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\ProfilStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div v-if=\"!isEditing\">\r\n      <h1>{{ user.name }}</h1>\r\n      <img :src=\"user.profilePicture\" alt=\"Profile Picture\" />\r\n      <h4>Email: {{ user.email }}</h4>\r\n      <h4>Broj mobitela: {{ user.phoneNumber }}</h4>\r\n      <button class=\"button\" @click=\"enableEditing\">Izmijeni</button>\r\n    </div>\r\n\r\n    <form v-else @submit.prevent=\"updateUserData\">\r\n      <label>Ime:</label>\r\n      <input v-model=\"editedUser.name\" type=\"text\" /><br />\r\n\r\n      <label>Email:</label>\r\n      <input v-model=\"editedUser.email\" type=\"text\" /><br />\r\n\r\n      <label>Broj mobitela:</label>\r\n      <input v-model=\"editedUser.phoneNumber\" type=\"text\" />\r\n\r\n      <button class=\"button\" type=\"submit\">Spremi promjene</button>\r\n      <button class=\"button\" @click=\"disableEditing\">Odustani</button>\r\n    </form>\r\n    <router-link to=\"/noviRecept\">\r\n      <button class=\"button\" v-if=\"!isEditing\">Dodaj novi recept</button>\r\n    </router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"@/services/api\"; // Dodaj API servis\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {}, // Prazan objekt za korisnika\r\n      editedUser: {}, // Kopija korisničkih podataka za uređivanje\r\n      isEditing: false,\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // Dohvati podatke o korisniku iz baze\r\n      const response = await api.get(\"/korisnici\");\r\n      this.user = response.data;\r\n      this.editedUser = { ...response.data };\r\n    } catch (error) {\r\n      console.error(\"Greška pri dohvaćanju korisnika:\", error);\r\n    }\r\n  },\r\n  methods: {\r\n    enableEditing() {\r\n      this.isEditing = true;\r\n    },\r\n    disableEditing() {\r\n      this.isEditing = false;\r\n    },\r\n    async updateUserData() {\r\n      try {\r\n        // Ažuriranje korisničkih podataka putem API-ja\r\n        const response = await api.put(`/korisnici/${this.user.id}`, this.editedUser);\r\n        this.user = response.data; // Ažuriraj lokalne podatke s odgovorom API-ja\r\n        this.isEditing = false;\r\n      } catch (error) {\r\n        console.error(\"Greška pri ažuriranju korisnika:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* CSS ostaje nepromijenjen */\r\n</style>\r\n"],"mappings":"AA8BA,OAAOA,GAAE,MAAO,gBAAgB,EAAE;;AAElC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC,CAAC;MAAE;MACVC,UAAU,EAAE,CAAC,CAAC;MAAE;MAChBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF;MACA,MAAMC,QAAO,GAAI,MAAMN,GAAG,CAACO,GAAG,CAAC,YAAY,CAAC;MAC5C,IAAI,CAACL,IAAG,GAAII,QAAQ,CAACL,IAAI;MACzB,IAAI,CAACE,UAAS,GAAI;QAAE,GAAGG,QAAQ,CAACL;MAAK,CAAC;IACxC,EAAE,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACP,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDQ,cAAcA,CAAA,EAAG;MACf,IAAI,CAACR,SAAQ,GAAI,KAAK;IACxB,CAAC;IACD,MAAMS,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF;QACA,MAAMP,QAAO,GAAI,MAAMN,GAAG,CAACc,GAAG,CAAE,cAAa,IAAI,CAACZ,IAAI,CAACa,EAAG,EAAC,EAAE,IAAI,CAACZ,UAAU,CAAC;QAC7E,IAAI,CAACD,IAAG,GAAII,QAAQ,CAACL,IAAI,EAAE;QAC3B,IAAI,CAACG,SAAQ,GAAI,KAAK;MACxB,EAAE,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}