{"ast":null,"code":"import { korisnici } from \"@/store_korisnici\";\nexport default {\n  data() {\n    return {\n      user: korisnici[0],\n      editedUser: {\n        ...korisnici[0]\n      },\n      isEditing: false\n    };\n  },\n  methods: {\n    enableEditing() {\n      this.isEditing = true;\n    },\n    disableEditing() {\n      this.isEditing = false;\n    },\n    updateUserData() {\n      const userIndex = korisnici.findIndex(u => u.id === this.user.id);\n      if (userIndex !== -1) {\n        korisnici[userIndex] = {\n          ...this.editedUser\n        };\n        // Ovdje trebate implementirati logiku za ažuriranje podataka u store-u.\n        // Primjer: this.$store.commit('updateUser', { index: userIndex, user: this.editedUser });\n        this.isEditing = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["korisnici","data","user","editedUser","isEditing","methods","enableEditing","disableEditing","updateUserData","userIndex","findIndex","u","id"],"sources":["C:\\Users\\MATIN\\Desktop\\nms\\src\\views\\ProfilStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"centered-container\">\r\n    <div class=\"main\">\r\n      <div v-if=\"!isEditing\">\r\n        <h1>{{ user.name }}</h1>\r\n        <img :src=\"user.profilePicture\" alt=\"Profile Picture\">\r\n        <h4>Email: {{ user.email }}</h4>\r\n        <h4>Broj mobitela: {{ user.phoneNumber }}</h4>\r\n        <button class=\"button\" @click=\"enableEditing\">Izmijeni</button>\r\n      </div>\r\n  \r\n      <form v-else @submit.prevent=\"updateUserData\">\r\n        <label>Ime:</label>\r\n        <input v-model=\"editedUser.name\" type=\"text\">\r\n  \r\n        <label>Email:</label>\r\n        <input v-model=\"editedUser.email\" type=\"text\">\r\n  \r\n        <label>Broj mobitela:</label>\r\n        <input v-model=\"editedUser.phoneNumber\" type=\"text\">\r\n  \r\n        <button class=\"button\" type=\"submit\">Spremi promjene</button>\r\n        <button class=\"button\" @click=\"disableEditing\">Odustani</button>\r\n      </form>\r\n  <router-link to=\"/noviRecept\">\r\n        <button class=\"button\" v-if=\"!isEditing\">Dodaj novi recept</button>\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { korisnici } from \"@/store_korisnici\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        user: korisnici[0],\r\n        editedUser: { ...korisnici[0] },\r\n        isEditing: false,\r\n      };\r\n    },\r\n    methods: {\r\n      enableEditing() {\r\n        this.isEditing = true;\r\n      },\r\n      disableEditing() {\r\n        this.isEditing = false;\r\n      },\r\n      updateUserData() {\r\n        const userIndex = korisnici.findIndex(u => u.id === this.user.id);\r\n        if (userIndex !== -1) {\r\n          korisnici[userIndex] = { ...this.editedUser };\r\n          // Ovdje trebate implementirati logiku za ažuriranje podataka u store-u.\r\n          // Primjer: this.$store.commit('updateUser', { index: userIndex, user: this.editedUser });\r\n          this.isEditing = false; \r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  <style>\r\n.main{\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: auto;\r\n  padding: 15px 15px 15px 15px;\r\nbackground-color: transparent;\r\n}\r\nh1,h2{\r\n  background-color:#2a231f;\r\n  color:#fbf5e5;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n}\r\n.button {\r\n  width: 100%;\r\n  height: 40px;\r\n  margin: 10px 3px 1px 1px;\r\n  color: #fff;\r\n  background: #2a231f;\r\n  font-size: 1em;\r\n  font-weight: bold;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 5px;\r\n  transition: .2s ease-in;\r\n  cursor: pointer;\r\n  height:30px;\r\n}\r\n.button:hover {\r\n  background: #fbf5e5;\r\n  color: #2a231f;\r\n}\r\n</style>"],"mappings":"AAgCE,SAASA,SAAQ,QAAS,mBAAmB;AAE7C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAEF,SAAS,CAAC,CAAC,CAAC;MAClBG,UAAU,EAAE;QAAE,GAAGH,SAAS,CAAC,CAAC;MAAE,CAAC;MAC/BI,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACF,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDG,cAAcA,CAAA,EAAG;MACf,IAAI,CAACH,SAAQ,GAAI,KAAK;IACxB,CAAC;IACDI,cAAcA,CAAA,EAAG;MACf,MAAMC,SAAQ,GAAIT,SAAS,CAACU,SAAS,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAM,IAAI,CAACV,IAAI,CAACU,EAAE,CAAC;MACjE,IAAIH,SAAQ,KAAM,CAAC,CAAC,EAAE;QACpBT,SAAS,CAACS,SAAS,IAAI;UAAE,GAAG,IAAI,CAACN;QAAW,CAAC;QAC7C;QACA;QACA,IAAI,CAACC,SAAQ,GAAI,KAAK;MACxB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}