{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0d3675b1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"title\"\n}, \"Lista namirnica za kupovinu:\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"item-list\"\n};\nconst _hoisted_4 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item._id || index,\n      class: _normalizeClass({\n        completed: item.completed\n      })\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => item.completed = $event,\n      onChange: $event => $options.updateItem(item)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4), [[_vModelCheckbox, item.completed]]), _createElementVNode(\"span\", null, _toDisplayString(index + 1) + \". \" + _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"delete-button\",\n      onClick: $event => $options.removeItem(item)\n    }, \"Obriši\", 8 /* PROPS */, _hoisted_5)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newItem = $event),\n    placeholder: \"Dodaj namirnicu...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newItem]]), _createElementVNode(\"button\", {\n    class: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addItem && $options.addItem(...args))\n  }, \"Dodaj namirnicu\"), _createElementVNode(\"button\", {\n    class: \"button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.confirmRemoveAll && $options.confirmRemoveAll(...args))\n  }, \"Obriši sve namirnice\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","items","item","index","key","_id","_normalizeClass","completed","type","$event","onChange","$options","updateItem","_hoisted_4","_toDisplayString","name","onClick","removeItem","_hoisted_5","_hoisted_6","_cache","newItem","placeholder","args","addItem","confirmRemoveAll"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\ShoppingLista.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"title\">Lista namirnica za kupovinu:</h2>\r\n    <ul class=\"item-list\">\r\n      <li\r\n        v-for=\"(item, index) in items\"\r\n        :key=\"item._id || index\"\r\n        :class=\"{ completed: item.completed }\"\r\n      >\r\n        <input type=\"checkbox\" v-model=\"item.completed\" @change=\"updateItem(item)\" />\r\n        <span>{{ index + 1 }}. {{ item.name }}</span>\r\n        <button class=\"delete-button\" @click=\"removeItem(item)\">Obriši</button>\r\n      </li>\r\n    </ul>\r\n    <div class=\"button-container\">\r\n      <input v-model=\"newItem\" placeholder=\"Dodaj namirnicu...\" />\r\n      <button class=\"button\" @click=\"addItem\">Dodaj namirnicu</button>\r\n      <button class=\"button\" @click=\"confirmRemoveAll\">Obriši sve namirnice</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      items: [], // Lista stavki dohvaćena iz baze\r\n      newItem: \"\", // Nova stavka za unos\r\n    };\r\n  },\r\n  methods: {\r\n    // Dohvati sve stavke iz shopping liste\r\n    async fetchItems() {\r\n      try {\r\n        const response = await fetch(\"/api/shoppingLista\");\r\n        const data = await response.json();\r\n        this.items = data; // Pretpostavlja da je backend vratio polje `items`\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom dohvaćanja stavki:\", error);\r\n      }\r\n    },\r\n    // Dodaj novu stavku u shopping listu\r\n    async addItem() {\r\n      if (this.newItem.trim() !== \"\") {\r\n        const newItem = { name: this.newItem.trim(), completed: false };\r\n        try {\r\n          const response = await fetch(\"/api/shoppingLista\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newItem),\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error(\"Greška prilikom dodavanja stavke.\");\r\n          }\r\n\r\n          this.items.push(newItem); // Dodaj novu stavku u lokalnu listu\r\n          this.newItem = \"\"; // Resetiraj input polje\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom dodavanja stavke:\", error);\r\n        }\r\n      }\r\n    },\r\n    // Ažuriraj stavku (prema indeksu)\r\n    async updateItem(index) {\r\n      const item = this.items[index];\r\n      try {\r\n        const response = await fetch(`/api/shoppingLista/${index}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(item),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Greška prilikom ažuriranja stavke.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom ažuriranja stavke:\", error);\r\n      }\r\n    },\r\n    // Obriši stavku (prema indeksu)\r\n    async removeItem(index) {\r\n      try {\r\n        const response = await fetch(`/api/shoppingLista/${index}`, {\r\n          method: \"DELETE\",\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Greška prilikom brisanja stavke.\");\r\n        }\r\n\r\n        // Ukloni stavku iz lokalne liste\r\n        this.items.splice(index, 1);\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom brisanja stavke:\", error);\r\n      }\r\n    },\r\n    // Potvrdi i obriši sve stavke\r\n    async confirmRemoveAll() {\r\n      if (confirm(\"Da li ste sigurni da želite da obrišete sve namirnice?\")) {\r\n        try {\r\n          const response = await fetch(\"/api/shoppingLista\", {\r\n            method: \"DELETE\",\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error(\"Greška prilikom brisanja svih stavki.\");\r\n          }\r\n\r\n          this.items = []; // Resetiraj lokalnu listu\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja svih stavki:\", error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchItems(); // Dohvati stavke iz baze pri učitavanju\r\n  },\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 700px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background: #fee6c1;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n  color: #2a231f;\r\n}\r\n\r\n.item-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.item-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  background: #fbf5e5;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.item-list li.completed span {\r\n  text-decoration: line-through;\r\n  color: #888;\r\n}\r\n\r\ninput[type=\"checkbox\"] {\r\n  margin-right: 10px;\r\n}\r\n\r\n.delete-button {\r\n  background: #dc3545;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.delete-button:hover {\r\n  background: #a71d2a;\r\n}\r\n\r\n.button-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 15px; /* Razmak između elemenata */\r\n}\r\n\r\ninput {\r\n  flex: 1; /* Proširi input da zauzme sav dostupan prostor */\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.button {\r\n  padding: 10px 20px;\r\n  background: #2a231f;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.button:hover {\r\n  background: #fbf5e5;\r\n  color: #2a231f;\r\n}\r\n\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAAmD;EAA/CD,KAAK,EAAC;AAAO,GAAC,8BAA4B;;EAC1CA,KAAK,EAAC;AAAW;mBAHzB;mBAAA;;EAcSA,KAAK,EAAC;AAAkB;;uBAb/BE,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,UAAmD,EACnDH,mBAAA,CAUK,MAVLI,UAUK,I,kBATHH,mBAAA,CAQKI,SAAA,QAZXC,WAAA,CAKgCC,KAAA,CAAAC,KAAK,EALrC,CAKgBC,IAAI,EAAEC,KAAK;yBADrBT,mBAAA,CAQK;MANFU,GAAG,EAAEF,IAAI,CAACG,GAAG,IAAIF,KAAK;MACtBX,KAAK,EAPdc,eAAA;QAAAC,SAAA,EAO6BL,IAAI,CAACK;MAAS;wBAEnCd,mBAAA,CAA6E;MAAtEe,IAAI,EAAC,UAAU;MAT9B,uBAAAC,MAAA,IASwCP,IAAI,CAACK,SAAS,GAAAE,MAAA;MAAGC,QAAM,EAAAD,MAAA,IAAEE,QAAA,CAAAC,UAAU,CAACV,IAAI;6CAThFW,UAAA,I,kBASwCX,IAAI,CAACK,SAAS,E,GAC9Cd,mBAAA,CAA6C,cAAAqB,gBAAA,CAApCX,KAAK,QAAO,IAAE,GAAAW,gBAAA,CAAGZ,IAAI,CAACa,IAAI,kBACnCtB,mBAAA,CAAuE;MAA/DD,KAAK,EAAC,eAAe;MAAEwB,OAAK,EAAAP,MAAA,IAAEE,QAAA,CAAAM,UAAU,CAACf,IAAI;OAAG,QAAM,iBAXtEgB,UAAA,E;oCAcIzB,mBAAA,CAIM,OAJN0B,UAIM,G,gBAHJ1B,mBAAA,CAA4D;IAflE,uBAAA2B,MAAA,QAAAA,MAAA,MAAAX,MAAA,IAesBT,KAAA,CAAAqB,OAAO,GAAAZ,MAAA;IAAEa,WAAW,EAAC;iDAArBtB,KAAA,CAAAqB,OAAO,E,GACvB5B,mBAAA,CAAgE;IAAxDD,KAAK,EAAC,QAAQ;IAAEwB,OAAK,EAAAI,MAAA,QAAAA,MAAA,UAAAG,IAAA,KAAEZ,QAAA,CAAAa,OAAA,IAAAb,QAAA,CAAAa,OAAA,IAAAD,IAAA,CAAO;KAAE,iBAAe,GACvD9B,mBAAA,CAA8E;IAAtED,KAAK,EAAC,QAAQ;IAAEwB,OAAK,EAAAI,MAAA,QAAAA,MAAA,UAAAG,IAAA,KAAEZ,QAAA,CAAAc,gBAAA,IAAAd,QAAA,CAAAc,gBAAA,IAAAF,IAAA,CAAgB;KAAE,sBAAoB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}