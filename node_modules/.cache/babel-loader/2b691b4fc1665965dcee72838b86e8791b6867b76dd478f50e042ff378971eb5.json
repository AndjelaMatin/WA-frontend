{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CardComponent from \"../components/CardComponent.vue\";\nimport api from \"@/services/api\";\nexport default {\n  components: {\n    CardComponent\n  },\n  data() {\n    return {\n      recepti: [],\n      // Svi recepti\n      searchResults: [],\n      // Rezultati pretrage\n      searchQuery: \"\",\n      // Korisnički unos za pretragu\n      isSearching: false,\n      // Status pretraživanja\n      searchInitiated: false // Je li pretraga pokrenuta\n    };\n  },\n  computed: {\n    // Ako je pretraga aktivna, prikazujemo rezultate pretrage; inače sve recepte\n    prikazaniRecepti() {\n      return this.searchQuery.trim() !== \"\" && this.searchResults.length > 0 ? this.searchResults : this.recepti;\n    }\n  },\n  async created() {\n    try {\n      // Dohvaćanje svih recepata\n      const response = await api.get(\"/recepti\");\n      this.recepti = response.data;\n    } catch (error) {\n      console.error(\"Greška pri dohvaćanju recepata:\", error);\n    }\n  },\n  methods: {\n    // Funkcija za pretragu recepata\n    async onSearch() {\n      if (this.searchQuery.trim() === \"\") {\n        this.searchResults = [];\n        this.searchInitiated = true; // Indikator da je pretraga pokrenuta\n        return;\n      }\n      this.isSearching = true;\n      this.searchInitiated = true; // Indikator da je pretraga pokrenuta\n      try {\n        const response = await api.get(\"/recepti/pretraga\", {\n          params: {\n            naziv: this.searchQuery\n          }\n        });\n        this.searchResults = response.data;\n      } catch (error) {\n        console.error(\"Greška pri pretrazi recepata:\", error);\n        this.searchResults = [];\n      } finally {\n        this.isSearching = false; // Završetak pretraživanja\n      }\n    },\n    // Resetiranje pretrage\n    resetSearch() {\n      this.searchQuery = \"\";\n      this.searchResults = [];\n      this.searchInitiated = false; // Pretraga resetirana\n    },\n    // Navigacija na stranicu recepta\n    openRecipe(id) {\n      if (!id) {\n        console.error(\"Recept ID nije definiran.\");\n        return;\n      }\n      this.$router.push({\n        name: \"receptStranica\",\n        params: {\n          id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["CardComponent","api","components","data","recepti","searchResults","searchQuery","isSearching","searchInitiated","computed","prikazaniRecepti","trim","length","created","response","get","error","console","methods","onSearch","params","naziv","resetSearch","openRecipe","id","$router","push","name"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\PocetnaStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <h1 class=\"text-center mb-4\">Dobrodošli na našu slatku platformu!</h1>\r\n    <div class=\"search-container\">\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Pretraži recepte...\"\r\n        class=\"form-control search-input\"\r\n      />\r\n      <div class=\"search-buttons\">\r\n        <button @click=\"onSearch\" type=\"button\" class=\"btn btn-primary\">\r\n          Pretraži\r\n        </button>\r\n        <button @click=\"resetSearch\" type=\"button\" class=\"btn btn-secondary\">\r\n          Resetiraj pretragu\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div\r\n      v-if=\"searchInitiated && searchQuery.trim() !== '' && !isSearching && searchResults.length === 0\"\r\n      class=\"mb-4 text-center\"\r\n    >\r\n      <p class=\"text-danger\">Nema rezultata pretrage za \"{{ searchQuery }}\".</p>\r\n    </div>\r\n    <div class=\"cards-container\">\r\n      <CardComponent\r\n        v-for=\"recept in prikazaniRecepti\"\r\n        :key=\"recept._id\"\r\n        :recept=\"recept\"\r\n        @open-recipe=\"openRecipe\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CardComponent from \"../components/CardComponent.vue\";\r\nimport api from \"@/services/api\";\r\n\r\nexport default {\r\n  components: {\r\n    CardComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      recepti: [], // Svi recepti\r\n      searchResults: [], // Rezultati pretrage\r\n      searchQuery: \"\", // Korisnički unos za pretragu\r\n      isSearching: false, // Status pretraživanja\r\n      searchInitiated: false, // Je li pretraga pokrenuta\r\n    };\r\n  },\r\n  computed: {\r\n    // Ako je pretraga aktivna, prikazujemo rezultate pretrage; inače sve recepte\r\n    prikazaniRecepti() {\r\n      return this.searchQuery.trim() !== \"\" && this.searchResults.length > 0\r\n        ? this.searchResults\r\n        : this.recepti;\r\n    },\r\n  },\r\n  async created() {\r\n    try {\r\n      // Dohvaćanje svih recepata\r\n      const response = await api.get(\"/recepti\");\r\n      this.recepti = response.data;\r\n    } catch (error) {\r\n      console.error(\"Greška pri dohvaćanju recepata:\", error);\r\n    }\r\n  },\r\n  methods: {\r\n    // Funkcija za pretragu recepata\r\n    async onSearch() {\r\n      if (this.searchQuery.trim() === \"\") {\r\n        this.searchResults = [];\r\n        this.searchInitiated = true; // Indikator da je pretraga pokrenuta\r\n        return;\r\n      }\r\n\r\n      this.isSearching = true;\r\n      this.searchInitiated = true; // Indikator da je pretraga pokrenuta\r\n      try {\r\n        const response = await api.get(\"/recepti/pretraga\", {\r\n          params: { naziv: this.searchQuery },\r\n        });\r\n        this.searchResults = response.data;\r\n      } catch (error) {\r\n        console.error(\"Greška pri pretrazi recepata:\", error);\r\n        this.searchResults = [];\r\n      } finally {\r\n        this.isSearching = false; // Završetak pretraživanja\r\n      }\r\n    },\r\n    // Resetiranje pretrage\r\n    resetSearch() {\r\n      this.searchQuery = \"\";\r\n      this.searchResults = [];\r\n      this.searchInitiated = false; // Pretraga resetirana\r\n    },\r\n    // Navigacija na stranicu recepta\r\n    openRecipe(id) {\r\n      if (!id) {\r\n        console.error(\"Recept ID nije definiran.\");\r\n        return;\r\n      }\r\n      this.$router.push({ name: \"receptStranica\", params: { id } });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Kontejner za pretragu */\r\n.search-container {\r\n  display: flex; /* Raspored u jednom redu */\r\n  align-items: center; /* Vertikalno poravnanje */\r\n  justify-content: center; /* Horizontalno poravnanje */\r\n  gap: 10px; /* Razmak između elemenata */\r\n  margin-bottom: 30px; /* Razmak ispod */\r\n  text-align: center;\r\n}\r\n\r\n/* Polje za unos */\r\n.search-input {\r\n  flex: 1; /* Zauzima sav dostupan prostor */\r\n  max-width: 500px; /* Maksimalna širina */\r\n  font-size: 1.25rem; \r\n  padding: 15px; \r\n  border: 1px solid #ccc;\r\n  border-radius: 8px; /* Zaobljeni rubovi */\r\n}\r\n\r\n/* Stil gumbova */\r\n.search-buttons {\r\n  display: flex; /* Gumbi u istom redu */\r\n  gap: 10px; /* Razmak između gumbova */\r\n}\r\n\r\n.search-buttons .btn {\r\n  padding: 10px 20px;\r\n  background-color: #2a231f; /* Tamno smeđa */\r\n  color: #fff; /* Bijeli tekst */\r\n  border: none;\r\n  border-radius: 5px; /* Zaobljeni rubovi */\r\n  font-size: 1rem; /* Veličina fonta */\r\n  font-weight: bold; /* Podebljani tekst */\r\n  cursor: pointer; /* Promjena pokazivača */\r\n  transition: background 0.3s ease, transform 0.3s ease; /* Efekti na hover */\r\n}\r\n\r\n/* Hover efekt za gumbove */\r\n.search-buttons .btn:hover {\r\n  background-color: #fbf5e5; /* Svjetlija pozadina */\r\n  color: #2a231f; /* Tamni tekst */\r\n  transform: scale(1.05); /* Blago povećanje */\r\n}\r\n\r\n/* Klik efekt za gumbove */\r\n.search-buttons .btn:active {\r\n  transform: scale(0.95); /* Smanjenje veličine pri kliku */\r\n}\r\n\r\n/* Kontejner za kartice */\r\n.cards-container {\r\n  display: grid; /* Raspored u mreži */\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); /* Prilagodljiva mreža */\r\n  gap: 20px;\r\n  justify-items: center; /* Centriranje kartica */\r\n}\r\n</style>\r\n"],"mappings":";AAqCA,OAAOA,aAAY,MAAO,iCAAiC;AAC3D,OAAOC,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MAAE;MACbC,aAAa,EAAE,EAAE;MAAE;MACnBC,WAAW,EAAE,EAAE;MAAE;MACjBC,WAAW,EAAE,KAAK;MAAE;MACpBC,eAAe,EAAE,KAAK,CAAE;IAC1B,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACJ,WAAW,CAACK,IAAI,CAAC,MAAM,EAAC,IAAK,IAAI,CAACN,aAAa,CAACO,MAAK,GAAI,IACjE,IAAI,CAACP,aAAY,GACjB,IAAI,CAACD,OAAO;IAClB;EACF,CAAC;EACD,MAAMS,OAAOA,CAAA,EAAG;IACd,IAAI;MACF;MACA,MAAMC,QAAO,GAAI,MAAMb,GAAG,CAACc,GAAG,CAAC,UAAU,CAAC;MAC1C,IAAI,CAACX,OAAM,GAAIU,QAAQ,CAACX,IAAI;IAC9B,EAAE,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EACDE,OAAO,EAAE;IACP;IACA,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,IAAI,CAACb,WAAW,CAACK,IAAI,CAAC,MAAM,EAAE,EAAE;QAClC,IAAI,CAACN,aAAY,GAAI,EAAE;QACvB,IAAI,CAACG,eAAc,GAAI,IAAI,EAAE;QAC7B;MACF;MAEA,IAAI,CAACD,WAAU,GAAI,IAAI;MACvB,IAAI,CAACC,eAAc,GAAI,IAAI,EAAE;MAC7B,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMb,GAAG,CAACc,GAAG,CAAC,mBAAmB,EAAE;UAClDK,MAAM,EAAE;YAAEC,KAAK,EAAE,IAAI,CAACf;UAAY;QACpC,CAAC,CAAC;QACF,IAAI,CAACD,aAAY,GAAIS,QAAQ,CAACX,IAAI;MACpC,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAACX,aAAY,GAAI,EAAE;MACzB,UAAU;QACR,IAAI,CAACE,WAAU,GAAI,KAAK,EAAE;MAC5B;IACF,CAAC;IACD;IACAe,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAChB,WAAU,GAAI,EAAE;MACrB,IAAI,CAACD,aAAY,GAAI,EAAE;MACvB,IAAI,CAACG,eAAc,GAAI,KAAK,EAAE;IAChC,CAAC;IACD;IACAe,UAAUA,CAACC,EAAE,EAAE;MACb,IAAI,CAACA,EAAE,EAAE;QACPP,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAC;QAC1C;MACF;MACA,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,gBAAgB;QAAEP,MAAM,EAAE;UAAEI;QAAG;MAAE,CAAC,CAAC;IAC/D;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}