{"ast":null,"code":"import api from \"@/services/api\";\nimport { mapState } from \"vuex\";\nexport default {\n  computed: {\n    ...mapState([\"user\", \"isAuthenticated\"])\n  },\n  data() {\n    return {\n      editedUser: {},\n      passwords: {\n        currentPassword: \"\",\n        newPassword: \"\"\n      },\n      isEditing: false\n    };\n  },\n  created() {\n    if (!this.user) {\n      this.fetchUserData();\n    } else {\n      this.editedUser = {\n        ...this.user\n      };\n    }\n  },\n  methods: {\n    enableEditing() {\n      this.isEditing = true;\n    },\n    disableEditing() {\n      this.isEditing = false;\n      this.passwords = {\n        currentPassword: \"\",\n        newPassword: \"\"\n      }; // Reset lozinki\n      this.editedUser = {\n        ...this.user\n      }; // Reset imena\n    },\n    async fetchUserData() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await api.get(\"/auth/korisnici\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.$store.commit(\"setUser\", response.data);\n        this.editedUser = {\n          ...response.data\n        };\n      } catch (error) {\n        console.error(\"Greška pri dohvaćanju korisnika:\", error);\n      }\n    },\n    async updateUserData() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        await api.put(\"/auth/korisnici\", {\n          name: this.editedUser.name !== this.user.name ? this.editedUser.name : null,\n          currentPassword: this.passwords.currentPassword || null,\n          newPassword: this.passwords.newPassword || null\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert(\"Podaci uspješno ažurirani.\");\n        this.fetchUserData(); // Ponovno učitavanje korisnika\n        this.disableEditing();\n      } catch (error) {\n        console.error(\"Greška pri ažuriranju podataka:\", error);\n        alert(\"Došlo je do greške pri ažuriranju podataka.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","mapState","computed","data","editedUser","passwords","currentPassword","newPassword","isEditing","created","user","fetchUserData","methods","enableEditing","disableEditing","token","localStorage","getItem","response","get","headers","Authorization","$store","commit","error","console","updateUserData","put","name","alert"],"sources":["C:\\Users\\MATIN\\Desktop\\web aplikacije\\WA-frontend\\src\\views\\ProfilStranica.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\" v-if=\"user && user.name\">\r\n    <div v-if=\"!isEditing\">\r\n      <h1>{{ user.name }}</h1>\r\n      <h4>Email: {{ user.email }}</h4>\r\n      <button class=\"button\" @click=\"enableEditing\">Izmijeni podatke</button>\r\n    </div>\r\n\r\n    <form v-else @submit.prevent=\"updateUserData\">\r\n      <label>Ime:</label>\r\n      <input v-model=\"editedUser.name\" type=\"text\" /><br />\r\n\r\n      <label>Trenutna lozinka:</label>\r\n      <input v-model=\"passwords.currentPassword\" type=\"password\" /><br />\r\n\r\n      <label>Nova lozinka:</label>\r\n      <input v-model=\"passwords.newPassword\" type=\"password\" /><br />\r\n\r\n      <button class=\"button\" type=\"submit\">Spremi promjene</button>\r\n      <button class=\"button\" @click=\"disableEditing\">Odustani</button>\r\n    </form>\r\n  </div>\r\n  <div v-else>\r\n    <p>Učitavanje korisničkih podataka...</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"@/services/api\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapState([\"user\", \"isAuthenticated\"]), \r\n  },\r\n  data() {\r\n    return {\r\n      editedUser: {},\r\n      passwords: { currentPassword: \"\", newPassword: \"\" },\r\n      isEditing: false,\r\n    };\r\n  },\r\n  created() {\r\n    if (!this.user) {\r\n      this.fetchUserData();\r\n    } else {\r\n      this.editedUser = { ...this.user };\r\n    }\r\n  },\r\n  methods: {\r\n    enableEditing() {\r\n      this.isEditing = true;\r\n    },\r\n    disableEditing() {\r\n      this.isEditing = false;\r\n      this.passwords = { currentPassword: \"\", newPassword: \"\" }; // Reset lozinki\r\n      this.editedUser = { ...this.user }; // Reset imena\r\n    },\r\n    async fetchUserData() {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await api.get(\"/auth/korisnici\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.$store.commit(\"setUser\", response.data);\r\n        this.editedUser = { ...response.data };\r\n      } catch (error) {\r\n        console.error(\"Greška pri dohvaćanju korisnika:\", error);\r\n      }\r\n    },\r\n    async updateUserData() {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        await api.put(\r\n          \"/auth/korisnici\",\r\n          {\r\n            name: this.editedUser.name !== this.user.name ? this.editedUser.name : null,\r\n            currentPassword: this.passwords.currentPassword || null,\r\n            newPassword: this.passwords.newPassword || null,\r\n          },\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n        alert(\"Podaci uspješno ažurirani.\");\r\n        this.fetchUserData(); // Ponovno učitavanje korisnika\r\n        this.disableEditing();\r\n      } catch (error) {\r\n        console.error(\"Greška pri ažuriranju podataka:\", error);\r\n        alert(\"Došlo je do greške pri ažuriranju podataka.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AA4BA,OAAOA,GAAE,MAAO,gBAAgB;AAChC,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,QAAQ,EAAE;IACR,GAAGD,QAAQ,CAAC,CAAC,MAAM,EAAE,iBAAiB,CAAC;EACzC,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,CAAC,CAAC;MACdC,SAAS,EAAE;QAAEC,eAAe,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAC;MACnDC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE;MACd,IAAI,CAACC,aAAa,CAAC,CAAC;IACtB,OAAO;MACL,IAAI,CAACP,UAAS,GAAI;QAAE,GAAG,IAAI,CAACM;MAAK,CAAC;IACpC;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACL,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDM,cAAcA,CAAA,EAAG;MACf,IAAI,CAACN,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACH,SAAQ,GAAI;QAAEC,eAAe,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAC,EAAE;MAC3D,IAAI,CAACH,UAAS,GAAI;QAAE,GAAG,IAAI,CAACM;MAAK,CAAC,EAAE;IACtC,CAAC;IACD,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMI,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAO,GAAI,MAAMlB,GAAG,CAACmB,GAAG,CAAC,iBAAiB,EAAE;UAChDC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASN,KAAM;UAAE;QAC9C,CAAC,CAAC;QACF,IAAI,CAACO,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEL,QAAQ,CAACf,IAAI,CAAC;QAC5C,IAAI,CAACC,UAAS,GAAI;UAAE,GAAGc,QAAQ,CAACf;QAAK,CAAC;MACxC,EAAE,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IACD,MAAME,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMX,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMjB,GAAG,CAAC2B,GAAG,CACX,iBAAiB,EACjB;UACEC,IAAI,EAAE,IAAI,CAACxB,UAAU,CAACwB,IAAG,KAAM,IAAI,CAAClB,IAAI,CAACkB,IAAG,GAAI,IAAI,CAACxB,UAAU,CAACwB,IAAG,GAAI,IAAI;UAC3EtB,eAAe,EAAE,IAAI,CAACD,SAAS,CAACC,eAAc,IAAK,IAAI;UACvDC,WAAW,EAAE,IAAI,CAACF,SAAS,CAACE,WAAU,IAAK;QAC7C,CAAC,EACD;UACEa,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASN,KAAM;UAAE;QAC9C,CACF,CAAC;QACDc,KAAK,CAAC,4BAA4B,CAAC;QACnC,IAAI,CAAClB,aAAa,CAAC,CAAC,EAAE;QACtB,IAAI,CAACG,cAAc,CAAC,CAAC;MACvB,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDK,KAAK,CAAC,6CAA6C,CAAC;MACtD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}